"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-auth";
exports.ids = ["vendor-chunks/next-auth"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-auth/lib/client.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/lib/client.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSessionError: () => (/* binding */ ClientSessionError),\n/* harmony export */   apiBaseUrl: () => (/* binding */ apiBaseUrl),\n/* harmony export */   fetchData: () => (/* binding */ fetchData),\n/* harmony export */   now: () => (/* binding */ now),\n/* harmony export */   parseUrl: () => (/* binding */ parseUrl),\n/* harmony export */   useOnline: () => (/* binding */ useOnline)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _auth_core_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth/core/errors */ \"(ssr)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* __next_internal_client_entry_do_not_use__ ClientSessionError,fetchData,apiBaseUrl,useOnline,now,parseUrl auto */ \n\n/** @todo */ class ClientFetchError extends _auth_core_errors__WEBPACK_IMPORTED_MODULE_1__.AuthError {\n}\n/** @todo */ class ClientSessionError extends _auth_core_errors__WEBPACK_IMPORTED_MODULE_1__.AuthError {\n}\n// ------------------------ Internal ------------------------\n/**\n * If passed 'appContext' via getInitialProps() in _app.js\n * then get the req object from ctx and use that for the\n * req value to allow `fetchData` to\n * work seemlessly in getInitialProps() on server side\n * pages *and* in _app.js.\n * @internal\n */ async function fetchData(path, __NEXTAUTH, logger, req = {}) {\n    const url = `${apiBaseUrl(__NEXTAUTH)}/${path}`;\n    try {\n        const options = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...req?.headers?.cookie ? {\n                    cookie: req.headers.cookie\n                } : {}\n            }\n        };\n        if (req?.body) {\n            options.body = JSON.stringify(req.body);\n            options.method = \"POST\";\n        }\n        const res = await fetch(url, options);\n        const data = await res.json();\n        if (!res.ok) throw data;\n        return data;\n    } catch (error) {\n        logger.error(new ClientFetchError(error.message, error));\n        return null;\n    }\n}\n/** @internal */ function apiBaseUrl(__NEXTAUTH) {\n    if (true) {\n        // Return absolute path when called server side\n        return `${__NEXTAUTH.baseUrlServer}${__NEXTAUTH.basePathServer}`;\n    }\n    // Return relative path when called client side\n    return __NEXTAUTH.basePath;\n}\n/** @internal  */ function useOnline() {\n    const [isOnline, setIsOnline] = react__WEBPACK_IMPORTED_MODULE_0__.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false);\n    const setOnline = ()=>setIsOnline(true);\n    const setOffline = ()=>setIsOnline(false);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        window.addEventListener(\"online\", setOnline);\n        window.addEventListener(\"offline\", setOffline);\n        return ()=>{\n            window.removeEventListener(\"online\", setOnline);\n            window.removeEventListener(\"offline\", setOffline);\n        };\n    }, []);\n    return isOnline;\n}\n/**\n * Returns the number of seconds elapsed since January 1, 1970 00:00:00 UTC.\n * @internal\n */ function now() {\n    return Math.floor(Date.now() / 1000);\n}\n/**\n * Returns an `URL` like object to make requests/redirects from server-side\n * @internal\n */ function parseUrl(url) {\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL(url || defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname)// Remove trailing slash\n    .replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: ()=>base\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2xpYi9jbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7b0hBQytCO0FBQ2U7QUFDOUMsVUFBVSxHQUNWLE1BQU1FLHlCQUF5QkQsd0RBQVNBO0FBQ3hDO0FBQ0EsVUFBVSxHQUNILE1BQU1FLDJCQUEyQkYsd0RBQVNBO0FBQ2pEO0FBQ0EsNkRBQTZEO0FBQzdEOzs7Ozs7O0NBT0MsR0FDTSxlQUFlRyxVQUFVQyxJQUFJLEVBQUVDLFVBQVUsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLENBQUMsQ0FBQztJQUM5RCxNQUFNQyxNQUFNLENBQUMsRUFBRUMsV0FBV0osWUFBWSxDQUFDLEVBQUVELEtBQUssQ0FBQztJQUMvQyxJQUFJO1FBQ0EsTUFBTU0sVUFBVTtZQUNaQyxTQUFTO2dCQUNMLGdCQUFnQjtnQkFDaEIsR0FBSUosS0FBS0ksU0FBU0MsU0FBUztvQkFBRUEsUUFBUUwsSUFBSUksT0FBTyxDQUFDQyxNQUFNO2dCQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2xFO1FBQ0o7UUFDQSxJQUFJTCxLQUFLTSxNQUFNO1lBQ1hILFFBQVFHLElBQUksR0FBR0MsS0FBS0MsU0FBUyxDQUFDUixJQUFJTSxJQUFJO1lBQ3RDSCxRQUFRTSxNQUFNLEdBQUc7UUFDckI7UUFDQSxNQUFNQyxNQUFNLE1BQU1DLE1BQU1WLEtBQUtFO1FBQzdCLE1BQU1TLE9BQU8sTUFBTUYsSUFBSUcsSUFBSTtRQUMzQixJQUFJLENBQUNILElBQUlJLEVBQUUsRUFDUCxNQUFNRjtRQUNWLE9BQU9BO0lBQ1gsRUFDQSxPQUFPRyxPQUFPO1FBQ1ZoQixPQUFPZ0IsS0FBSyxDQUFDLElBQUlyQixpQkFBaUJxQixNQUFNQyxPQUFPLEVBQUVEO1FBQ2pELE9BQU87SUFDWDtBQUNKO0FBQ0EsY0FBYyxHQUNQLFNBQVNiLFdBQVdKLFVBQVU7SUFDakMsSUFBSSxJQUE2QixFQUFFO1FBQy9CLCtDQUErQztRQUMvQyxPQUFPLENBQUMsRUFBRUEsV0FBV21CLGFBQWEsQ0FBQyxFQUFFbkIsV0FBV29CLGNBQWMsQ0FBQyxDQUFDO0lBQ3BFO0lBQ0EsK0NBQStDO0lBQy9DLE9BQU9wQixXQUFXcUIsUUFBUTtBQUM5QjtBQUNBLGVBQWUsR0FDUixTQUFTQztJQUNaLE1BQU0sQ0FBQ0MsVUFBVUMsWUFBWSxHQUFHOUIsMkNBQWMsQ0FBQyxPQUFPZ0MsY0FBYyxjQUFjQSxVQUFVQyxNQUFNLEdBQUc7SUFDckcsTUFBTUMsWUFBWSxJQUFNSixZQUFZO0lBQ3BDLE1BQU1LLGFBQWEsSUFBTUwsWUFBWTtJQUNyQzlCLDRDQUFlLENBQUM7UUFDWnFDLE9BQU9DLGdCQUFnQixDQUFDLFVBQVVKO1FBQ2xDRyxPQUFPQyxnQkFBZ0IsQ0FBQyxXQUFXSDtRQUNuQyxPQUFPO1lBQ0hFLE9BQU9FLG1CQUFtQixDQUFDLFVBQVVMO1lBQ3JDRyxPQUFPRSxtQkFBbUIsQ0FBQyxXQUFXSjtRQUMxQztJQUNKLEdBQUcsRUFBRTtJQUNMLE9BQU9OO0FBQ1g7QUFDQTs7O0NBR0MsR0FDTSxTQUFTVztJQUNaLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0gsR0FBRyxLQUFLO0FBQ25DO0FBQ0E7OztDQUdDLEdBQ00sU0FBU0ksU0FBU25DLEdBQUc7SUFDeEIsTUFBTW9DLGFBQWEsSUFBSUMsSUFBSTtJQUMzQixJQUFJckMsT0FBTyxDQUFDQSxJQUFJc0MsVUFBVSxDQUFDLFNBQVM7UUFDaEN0QyxNQUFNLENBQUMsUUFBUSxFQUFFQSxJQUFJLENBQUM7SUFDMUI7SUFDQSxNQUFNdUMsT0FBTyxJQUFJRixJQUFJckMsT0FBT29DO0lBQzVCLE1BQU14QyxPQUFPLENBQUMyQyxLQUFLQyxRQUFRLEtBQUssTUFBTUosV0FBV0ksUUFBUSxHQUFHRCxLQUFLQyxRQUFRLENBQ3JFLHdCQUF3QjtLQUN2QkMsT0FBTyxDQUFDLE9BQU87SUFDcEIsTUFBTUMsT0FBTyxDQUFDLEVBQUVILEtBQUtJLE1BQU0sQ0FBQyxFQUFFL0MsS0FBSyxDQUFDO0lBQ3BDLE9BQU87UUFDSCtDLFFBQVFKLEtBQUtJLE1BQU07UUFDbkJDLE1BQU1MLEtBQUtLLElBQUk7UUFDZmhEO1FBQ0E4QztRQUNBRyxVQUFVLElBQU1IO0lBQ3BCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2xpYi9jbGllbnQuanM/NDQ2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSBcIkBhdXRoL2NvcmUvZXJyb3JzXCI7XG4vKiogQHRvZG8gKi9cbmNsYXNzIENsaWVudEZldGNoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xufVxuLyoqIEB0b2RvICovXG5leHBvcnQgY2xhc3MgQ2xpZW50U2Vzc2lvbkVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbn1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBJbnRlcm5hbCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8qKlxuICogSWYgcGFzc2VkICdhcHBDb250ZXh0JyB2aWEgZ2V0SW5pdGlhbFByb3BzKCkgaW4gX2FwcC5qc1xuICogdGhlbiBnZXQgdGhlIHJlcSBvYmplY3QgZnJvbSBjdHggYW5kIHVzZSB0aGF0IGZvciB0aGVcbiAqIHJlcSB2YWx1ZSB0byBhbGxvdyBgZmV0Y2hEYXRhYCB0b1xuICogd29yayBzZWVtbGVzc2x5IGluIGdldEluaXRpYWxQcm9wcygpIG9uIHNlcnZlciBzaWRlXG4gKiBwYWdlcyAqYW5kKiBpbiBfYXBwLmpzLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaERhdGEocGF0aCwgX19ORVhUQVVUSCwgbG9nZ2VyLCByZXEgPSB7fSkge1xuICAgIGNvbnN0IHVybCA9IGAke2FwaUJhc2VVcmwoX19ORVhUQVVUSCl9LyR7cGF0aH1gO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgLi4uKHJlcT8uaGVhZGVycz8uY29va2llID8geyBjb29raWU6IHJlcS5oZWFkZXJzLmNvb2tpZSB9IDoge30pLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHJlcT8uYm9keSkge1xuICAgICAgICAgICAgb3B0aW9ucy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkocmVxLmJvZHkpO1xuICAgICAgICAgICAgb3B0aW9ucy5tZXRob2QgPSBcIlBPU1RcIjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgaWYgKCFyZXMub2spXG4gICAgICAgICAgICB0aHJvdyBkYXRhO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihuZXcgQ2xpZW50RmV0Y2hFcnJvcihlcnJvci5tZXNzYWdlLCBlcnJvcikpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gYXBpQmFzZVVybChfX05FWFRBVVRIKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgLy8gUmV0dXJuIGFic29sdXRlIHBhdGggd2hlbiBjYWxsZWQgc2VydmVyIHNpZGVcbiAgICAgICAgcmV0dXJuIGAke19fTkVYVEFVVEguYmFzZVVybFNlcnZlcn0ke19fTkVYVEFVVEguYmFzZVBhdGhTZXJ2ZXJ9YDtcbiAgICB9XG4gICAgLy8gUmV0dXJuIHJlbGF0aXZlIHBhdGggd2hlbiBjYWxsZWQgY2xpZW50IHNpZGVcbiAgICByZXR1cm4gX19ORVhUQVVUSC5iYXNlUGF0aDtcbn1cbi8qKiBAaW50ZXJuYWwgICovXG5leHBvcnQgZnVuY3Rpb24gdXNlT25saW5lKCkge1xuICAgIGNvbnN0IFtpc09ubGluZSwgc2V0SXNPbmxpbmVdID0gUmVhY3QudXNlU3RhdGUodHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiA/IG5hdmlnYXRvci5vbkxpbmUgOiBmYWxzZSk7XG4gICAgY29uc3Qgc2V0T25saW5lID0gKCkgPT4gc2V0SXNPbmxpbmUodHJ1ZSk7XG4gICAgY29uc3Qgc2V0T2ZmbGluZSA9ICgpID0+IHNldElzT25saW5lKGZhbHNlKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBzZXRPbmxpbmUpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgc2V0T2ZmbGluZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBzZXRPbmxpbmUpO1xuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIHNldE9mZmxpbmUpO1xuICAgICAgICB9O1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gaXNPbmxpbmU7XG59XG4vKipcbiAqIFJldHVybnMgdGhlIG51bWJlciBvZiBzZWNvbmRzIGVsYXBzZWQgc2luY2UgSmFudWFyeSAxLCAxOTcwIDAwOjAwOjAwIFVUQy5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gbm93KCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbn1cbi8qKlxuICogUmV0dXJucyBhbiBgVVJMYCBsaWtlIG9iamVjdCB0byBtYWtlIHJlcXVlc3RzL3JlZGlyZWN0cyBmcm9tIHNlcnZlci1zaWRlXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlVXJsKHVybCkge1xuICAgIGNvbnN0IGRlZmF1bHRVcmwgPSBuZXcgVVJMKFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9hdXRoXCIpO1xuICAgIGlmICh1cmwgJiYgIXVybC5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgICAgICB1cmwgPSBgaHR0cHM6Ly8ke3VybH1gO1xuICAgIH1cbiAgICBjb25zdCBfdXJsID0gbmV3IFVSTCh1cmwgfHwgZGVmYXVsdFVybCk7XG4gICAgY29uc3QgcGF0aCA9IChfdXJsLnBhdGhuYW1lID09PSBcIi9cIiA/IGRlZmF1bHRVcmwucGF0aG5hbWUgOiBfdXJsLnBhdGhuYW1lKVxuICAgICAgICAvLyBSZW1vdmUgdHJhaWxpbmcgc2xhc2hcbiAgICAgICAgLnJlcGxhY2UoL1xcLyQvLCBcIlwiKTtcbiAgICBjb25zdCBiYXNlID0gYCR7X3VybC5vcmlnaW59JHtwYXRofWA7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb3JpZ2luOiBfdXJsLm9yaWdpbixcbiAgICAgICAgaG9zdDogX3VybC5ob3N0LFxuICAgICAgICBwYXRoLFxuICAgICAgICBiYXNlLFxuICAgICAgICB0b1N0cmluZzogKCkgPT4gYmFzZSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQXV0aEVycm9yIiwiQ2xpZW50RmV0Y2hFcnJvciIsIkNsaWVudFNlc3Npb25FcnJvciIsImZldGNoRGF0YSIsInBhdGgiLCJfX05FWFRBVVRIIiwibG9nZ2VyIiwicmVxIiwidXJsIiwiYXBpQmFzZVVybCIsIm9wdGlvbnMiLCJoZWFkZXJzIiwiY29va2llIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJtZXRob2QiLCJyZXMiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwib2siLCJlcnJvciIsIm1lc3NhZ2UiLCJiYXNlVXJsU2VydmVyIiwiYmFzZVBhdGhTZXJ2ZXIiLCJiYXNlUGF0aCIsInVzZU9ubGluZSIsImlzT25saW5lIiwic2V0SXNPbmxpbmUiLCJ1c2VTdGF0ZSIsIm5hdmlnYXRvciIsIm9uTGluZSIsInNldE9ubGluZSIsInNldE9mZmxpbmUiLCJ1c2VFZmZlY3QiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm5vdyIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJwYXJzZVVybCIsImRlZmF1bHRVcmwiLCJVUkwiLCJzdGFydHNXaXRoIiwiX3VybCIsInBhdGhuYW1lIiwicmVwbGFjZSIsImJhc2UiLCJvcmlnaW4iLCJob3N0IiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/lib/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/node_modules/@auth/core/errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/errors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDenied: () => (/* binding */ AccessDenied),\n/* harmony export */   AccountNotLinked: () => (/* binding */ AccountNotLinked),\n/* harmony export */   AdapterError: () => (/* binding */ AdapterError),\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   CallbackRouteError: () => (/* binding */ CallbackRouteError),\n/* harmony export */   CredentialsSignin: () => (/* binding */ CredentialsSignin),\n/* harmony export */   DuplicateConditionalUI: () => (/* binding */ DuplicateConditionalUI),\n/* harmony export */   EmailSignInError: () => (/* binding */ EmailSignInError),\n/* harmony export */   ErrorPageLoop: () => (/* binding */ ErrorPageLoop),\n/* harmony export */   EventError: () => (/* binding */ EventError),\n/* harmony export */   ExperimentalFeatureNotEnabled: () => (/* binding */ ExperimentalFeatureNotEnabled),\n/* harmony export */   InvalidCallbackUrl: () => (/* binding */ InvalidCallbackUrl),\n/* harmony export */   InvalidCheck: () => (/* binding */ InvalidCheck),\n/* harmony export */   InvalidEndpoints: () => (/* binding */ InvalidEndpoints),\n/* harmony export */   InvalidProvider: () => (/* binding */ InvalidProvider),\n/* harmony export */   JWTSessionError: () => (/* binding */ JWTSessionError),\n/* harmony export */   MissingAdapter: () => (/* binding */ MissingAdapter),\n/* harmony export */   MissingAdapterMethods: () => (/* binding */ MissingAdapterMethods),\n/* harmony export */   MissingAuthorize: () => (/* binding */ MissingAuthorize),\n/* harmony export */   MissingCSRF: () => (/* binding */ MissingCSRF),\n/* harmony export */   MissingSecret: () => (/* binding */ MissingSecret),\n/* harmony export */   MissingWebAuthnAutocomplete: () => (/* binding */ MissingWebAuthnAutocomplete),\n/* harmony export */   OAuthAccountNotLinked: () => (/* binding */ OAuthAccountNotLinked),\n/* harmony export */   OAuthCallbackError: () => (/* binding */ OAuthCallbackError),\n/* harmony export */   OAuthProfileParseError: () => (/* binding */ OAuthProfileParseError),\n/* harmony export */   OAuthSignInError: () => (/* binding */ OAuthSignInError),\n/* harmony export */   SessionTokenError: () => (/* binding */ SessionTokenError),\n/* harmony export */   SignInError: () => (/* binding */ SignInError),\n/* harmony export */   SignOutError: () => (/* binding */ SignOutError),\n/* harmony export */   UnknownAction: () => (/* binding */ UnknownAction),\n/* harmony export */   UnsupportedStrategy: () => (/* binding */ UnsupportedStrategy),\n/* harmony export */   UntrustedHost: () => (/* binding */ UntrustedHost),\n/* harmony export */   Verification: () => (/* binding */ Verification),\n/* harmony export */   WebAuthnVerificationError: () => (/* binding */ WebAuthnVerificationError),\n/* harmony export */   isClientError: () => (/* binding */ isClientError)\n/* harmony export */ });\n/**\n * Base error class for all Auth.js errors.\n * It's optimized to be printed in the server logs in a nicely formatted way\n * via the [`logger.error`](https://authjs.dev/reference/core#logger) option.\n */\nclass AuthError extends Error {\n    constructor(message, errorOptions) {\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: { err: message, ...message.cause, ...errorOptions },\n            });\n        }\n        else if (typeof message === \"string\") {\n            if (errorOptions instanceof Error) {\n                errorOptions = { err: errorOptions, ...errorOptions.cause };\n            }\n            super(message, errorOptions);\n        }\n        else {\n            super(undefined, message);\n        }\n        this.name = this.constructor.name;\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.type = this.constructor.type ?? \"AuthError\";\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.kind = this.constructor.kind ?? \"error\";\n        Error.captureStackTrace?.(this, this.constructor);\n        const url = `https://errors.authjs.dev#${this.type.toLowerCase()}`;\n        this.message += `${this.message ? \". \" : \"\"}Read more at ${url}`;\n    }\n}\nclass SignInError extends AuthError {\n}\nSignInError.kind = \"signIn\";\n/**\n * One of the database [`Adapter` methods](https://authjs.dev/reference/core/adapters#methods)\n * failed during execution.\n *\n * :::tip\n * If `debug: true` is set, you can check out `[auth][debug]` in the logs to learn more about the failed adapter method execution.\n * @example\n * ```sh\n * [auth][debug]: adapter_getUserByEmail\n * { \"args\": [undefined] }\n * ```\n * :::\n */\nclass AdapterError extends AuthError {\n}\nAdapterError.type = \"AdapterError\";\n/**\n * Thrown when the execution of the [`signIn` callback](https://authjs.dev/reference/core/types#signin) fails\n * or if it returns `false`.\n */\nclass AccessDenied extends AuthError {\n}\nAccessDenied.type = \"AccessDenied\";\n/**\n * This error occurs when the user cannot finish login.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/getting-started/authentication/oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/getting-started/authentication/email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/getting-started/authentication/credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n */\nclass CallbackRouteError extends AuthError {\n}\nCallbackRouteError.type = \"CallbackRouteError\";\n/**\n * Thrown when Auth.js is misconfigured and accidentally tried to require authentication on a custom error page.\n * To prevent an infinite loop, Auth.js will instead render its default error page.\n *\n * To fix this, make sure that the `error` page does not require authentication.\n *\n * Learn more at [Guide: Error pages](https://authjs.dev/guides/pages/error)\n */\nclass ErrorPageLoop extends AuthError {\n}\nErrorPageLoop.type = \"ErrorPageLoop\";\n/**\n * One of the [`events` methods](https://authjs.dev/reference/core/types#eventcallbacks)\n * failed during execution.\n *\n * Make sure that the `events` methods are implemented correctly and uncaught errors are handled.\n *\n * Learn more at [`events`](https://authjs.dev/reference/core/types#eventcallbacks)\n */\nclass EventError extends AuthError {\n}\nEventError.type = \"EventError\";\n/**\n * Thrown when Auth.js is unable to verify a `callbackUrl` value.\n * The browser either disabled cookies or the `callbackUrl` is not a valid URL.\n *\n * Somebody might have tried to manipulate the callback URL that Auth.js uses to redirect the user back to the configured `callbackUrl`/page.\n * This could be a malicious hacker trying to redirect the user to a phishing site.\n * To prevent this, Auth.js checks if the callback URL is valid and throws this error if it is not.\n *\n * There is no action required, but it might be an indicator that somebody is trying to attack your application.\n */\nclass InvalidCallbackUrl extends AuthError {\n}\nInvalidCallbackUrl.type = \"InvalidCallbackUrl\";\n/**\n * Can be thrown from the `authorize` callback of the Credentials provider.\n * When an error occurs during the `authorize` callback, two things can happen:\n * 1. The user is redirected to the signin page, with `error=CredentialsSignin&code=credentials` in the URL. `code` is configurable.\n * 2. If you throw this error in a framework that handles form actions server-side, this error is thrown, instead of redirecting the user, so you'll need to handle.\n */\nclass CredentialsSignin extends Error {\n    constructor() {\n        super(...arguments);\n        /**\n         * The error code that is set in the `code` query parameter of the redirect URL.\n         *\n         *\n         * ⚠ NOTE: This property is going to be included in the URL, so make sure it does not hint at sensitive errors.\n         *\n         * The full error is always logged on the server, if you need to debug.\n         *\n         * Generally, we don't recommend hinting specifically if the user had either a wrong username or password specifically,\n         * try rather something like \"Invalid credentials\".\n         */\n        this.code = \"credentials\";\n    }\n}\nCredentialsSignin.type = \"CredentialsSignin\";\n/**\n * One of the configured OAuth or OIDC providers is missing the `authorization`, `token` or `userinfo`, or `issuer` configuration.\n * To perform OAuth or OIDC sign in, at least one of these endpoints is required.\n *\n * Learn more at [`OAuth2Config`](https://authjs.dev/reference/core/providers#oauth2configprofile) or [Guide: OAuth Provider](https://authjs.dev/guides/configuring-oauth-providers)\n */\nclass InvalidEndpoints extends AuthError {\n}\nInvalidEndpoints.type = \"InvalidEndpoints\";\n/**\n * Thrown when a PKCE, state or nonce OAuth check could not be performed.\n * This could happen if the OAuth provider is configured incorrectly or if the browser is blocking cookies.\n *\n * Learn more at [`checks`](https://authjs.dev/reference/core/providers#checks)\n */\nclass InvalidCheck extends AuthError {\n}\nInvalidCheck.type = \"InvalidCheck\";\n/**\n * Logged on the server when Auth.js could not decode or encode a JWT-based (`strategy: \"jwt\"`) session.\n *\n * Possible causes are either a misconfigured `secret` or a malformed JWT or `encode/decode` methods.\n *\n * :::note\n * When this error is logged, the session cookie is destroyed.\n * :::\n *\n * Learn more at [`secret`](https://authjs.dev/reference/core#secret), [`jwt.encode`](https://authjs.dev/reference/core/jwt#encode-1) or [`jwt.decode`](https://authjs.dev/reference/core/jwt#decode-2) for more information.\n */\nclass JWTSessionError extends AuthError {\n}\nJWTSessionError.type = \"JWTSessionError\";\n/**\n * Thrown if Auth.js is misonfigured. This could happen if you configured an Email provider but did not set up a database adapter,\n * or tried using a `strategy: \"database\"` session without a database adapter.\n * In both cases, make sure you either remove the configuration or add the missing adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/database), [Email provider](https://authjs.dev/getting-started/authentication/email) or [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database-session)\n */\nclass MissingAdapter extends AuthError {\n}\nMissingAdapter.type = \"MissingAdapter\";\n/**\n * Thrown similarily to [`MissingAdapter`](https://authjs.dev/reference/core/errors#missingadapter), but only some required methods were missing.\n *\n * Make sure you either remove the configuration or add the missing methods to the adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/database)\n */\nclass MissingAdapterMethods extends AuthError {\n}\nMissingAdapterMethods.type = \"MissingAdapterMethods\";\n/**\n * Thrown when a Credentials provider is missing the `authorize` configuration.\n * To perform credentials sign in, the `authorize` method is required.\n *\n * Learn more at [Credentials provider](https://authjs.dev/getting-started/authentication/credentials)\n */\nclass MissingAuthorize extends AuthError {\n}\nMissingAuthorize.type = \"MissingAuthorize\";\n/**\n * Auth.js requires a secret or multiple secrets to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET`, `AUTH_SECRET_1`, etc. environment variables.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret) option.\n * :::\n *\n *\n * :::tip\n * To generate a random string, you can use the Auth.js CLI: `npx auth secret`\n * :::\n */\nclass MissingSecret extends AuthError {\n}\nMissingSecret.type = \"MissingSecret\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link OAuth accounts to existing accounts if the user is not signed in.\n *\n * :::tip\n * If you trust the OAuth provider to have verified the user's email address,\n * you can enable automatic account linking by setting [`allowDangerousEmailAccountLinking: true`](https://authjs.dev/reference/core/providers#allowdangerousemailaccountlinking)\n * in the provider configuration.\n * :::\n */\nclass OAuthAccountNotLinked extends SignInError {\n}\nOAuthAccountNotLinked.type = \"OAuthAccountNotLinked\";\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n */\nclass OAuthCallbackError extends SignInError {\n}\nOAuthCallbackError.type = \"OAuthCallbackError\";\n/**\n * This error occurs during an OAuth sign in attempt when the provider's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers#oauth2configprofile) method is not implemented correctly.\n */\nclass OAuthProfileParseError extends AuthError {\n}\nOAuthProfileParseError.type = \"OAuthProfileParseError\";\n/**\n * Logged on the server when Auth.js could not retrieve a session from the database (`strategy: \"database\"`).\n *\n * The database adapter might be misconfigured or the database is not reachable.\n *\n * Learn more at [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n */\nclass SessionTokenError extends AuthError {\n}\nSessionTokenError.type = \"SessionTokenError\";\n/**\n * Happens when login by [OAuth](https://authjs.dev/getting-started/authentication/oauth) could not be started.\n *\n * Possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0](https://www.ietf.org/rfc/rfc6749.html) or the [OIDC](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *   Check the details in the error message.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n */\nclass OAuthSignInError extends SignInError {\n}\nOAuthSignInError.type = \"OAuthSignInError\";\n/**\n * Happens when the login by an [Email provider](https://authjs.dev/getting-started/authentication/email) could not be started.\n *\n * Possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers/email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n */\nclass EmailSignInError extends SignInError {\n}\nEmailSignInError.type = \"EmailSignInError\";\n/**\n * Represents an error that occurs during the sign-out process. This error\n * is logged when there are issues in terminating a user's session, either\n * by failing to delete the session from the database (in database session\n * strategies) or encountering issues during other parts of the sign-out\n * process, such as emitting sign-out events or clearing session cookies.\n *\n * The session cookie(s) are emptied even if this error is logged.\n *\n */\nclass SignOutError extends AuthError {\n}\nSignOutError.type = \"SignOutError\";\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n */\nclass UnknownAction extends AuthError {\n}\nUnknownAction.type = \"UnknownAction\";\n/**\n * Thrown when a Credentials provider is present but the JWT strategy (`strategy: \"jwt\"`) is not enabled.\n *\n * Learn more at [`strategy`](https://authjs.dev/reference/core#strategy) or [Credentials provider](https://authjs.dev/getting-started/authentication/credentials)\n */\nclass UnsupportedStrategy extends AuthError {\n}\nUnsupportedStrategy.type = \"UnsupportedStrategy\";\n/** Thrown when an endpoint was incorrectly called without a provider, or with an unsupported provider. */\nclass InvalidProvider extends AuthError {\n}\nInvalidProvider.type = \"InvalidProvider\";\n/**\n * Thrown when the `trustHost` option was not set to `true`.\n *\n * Auth.js requires the `trustHost` option to be set to `true` since it's relying on the request headers' `host` value.\n *\n * :::note\n * Official Auth.js libraries might attempt to automatically set the `trustHost` option to `true` if the request is coming from a trusted host on a trusted platform.\n * :::\n *\n * Learn more at [`trustHost`](https://authjs.dev/reference/core#trusthost) or [Guide: Deployment](https://authjs.dev/getting-started/deployment)\n */\nclass UntrustedHost extends AuthError {\n}\nUntrustedHost.type = \"UntrustedHost\";\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because the token has expired. Ask the user to log in again.\n */\nclass Verification extends AuthError {\n}\nVerification.type = \"Verification\";\n/**\n * Error for missing CSRF tokens in client-side actions (`signIn`, `signOut`, `useSession#update`).\n * Thrown when actions lack the double submit cookie, essential for CSRF protection.\n *\n * CSRF ([Cross-Site Request Forgery](https://owasp.org/www-community/attacks/csrf))\n * is an attack leveraging authenticated user credentials for unauthorized actions.\n *\n * Double submit cookie pattern, a CSRF defense, requires matching values in a cookie\n * and request parameter. More on this at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/Security/CSRF).\n */\nclass MissingCSRF extends SignInError {\n}\nMissingCSRF.type = \"MissingCSRF\";\nconst clientErrors = new Set([\n    \"CredentialsSignin\",\n    \"OAuthAccountNotLinked\",\n    \"OAuthCallbackError\",\n    \"AccessDenied\",\n    \"Verification\",\n    \"MissingCSRF\",\n    \"AccountNotLinked\",\n    \"WebAuthnVerificationError\",\n]);\n/**\n * Used to only allow sending a certain subset of errors to the client.\n * Errors are always logged on the server, but to prevent leaking sensitive information,\n * only a subset of errors are sent to the client as-is.\n * @internal\n */\nfunction isClientError(error) {\n    if (error instanceof AuthError)\n        return clientErrors.has(error.type);\n    return false;\n}\n/**\n * Thrown when multiple providers have `enableConditionalUI` set to `true`.\n * Only one provider can have this option enabled at a time.\n */\nclass DuplicateConditionalUI extends AuthError {\n}\nDuplicateConditionalUI.type = \"DuplicateConditionalUI\";\n/**\n * Thrown when a WebAuthn provider has `enableConditionalUI` set to `true` but no formField has `webauthn` in its autocomplete param.\n *\n * The `webauthn` autocomplete param is required for conditional UI to work.\n */\nclass MissingWebAuthnAutocomplete extends AuthError {\n}\nMissingWebAuthnAutocomplete.type = \"MissingWebAuthnAutocomplete\";\n/**\n * Thrown when a WebAuthn provider fails to verify a client response.\n */\nclass WebAuthnVerificationError extends AuthError {\n}\nWebAuthnVerificationError.type = \"WebAuthnVerificationError\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link accounts to existing accounts if the user is not signed in.\n */\nclass AccountNotLinked extends SignInError {\n}\nAccountNotLinked.type = \"AccountNotLinked\";\n/**\n * Thrown when an experimental feature is used but not enabled.\n */\nclass ExperimentalFeatureNotEnabled extends AuthError {\n}\nExperimentalFeatureNotEnabled.type = \"ExperimentalFeatureNotEnabled\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/node_modules/@auth/core/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next-auth/react.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/react.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionContext: () => (/* binding */ SessionContext),\n/* harmony export */   SessionProvider: () => (/* binding */ SessionProvider),\n/* harmony export */   __NEXTAUTH: () => (/* binding */ __NEXTAUTH),\n/* harmony export */   getCsrfToken: () => (/* binding */ getCsrfToken),\n/* harmony export */   getProviders: () => (/* binding */ getProviders),\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   useSession: () => (/* binding */ useSession)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _lib_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/client.js */ \"(ssr)/./node_modules/next-auth/lib/client.js\");\n/**\n *\n * NextAuth.js methods and components that work in [Client components](https://nextjs.org/docs/app/building-your-application/rendering/client-components) and the [Pages Router](https://nextjs.org/docs/pages).\n *\n * For use in [Server Actions](https://nextjs.org/docs/app/api-reference/functions/server-actions), check out [these methods](https://authjs.dev/guides/upgrade-to-v5#methods)\n *\n * @module react\n */ /* __next_internal_client_entry_do_not_use__ __NEXTAUTH,SessionContext,useSession,getSession,getCsrfToken,getProviders,signIn,signOut,SessionProvider auto */ \n\n\n// This behaviour mirrors the default behaviour for getting the site name that\n// happens server side in server/index.js\n// 1. An empty value is legitimate when the code is being invoked client side as\n//    relative URLs are valid in that context and so defaults to empty.\n// 2. When invoked server side the value is picked up from an environment\n//    variable and defaults to 'http://localhost:3000'.\nconst __NEXTAUTH = {\n    baseUrl: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(process.env.NEXTAUTH_URL ?? process.env.VERCEL_URL).origin,\n    basePath: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(process.env.NEXTAUTH_URL_INTERNAL ?? process.env.NEXTAUTH_URL ?? process.env.VERCEL_URL).origin,\n    basePathServer: (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(process.env.NEXTAUTH_URL_INTERNAL ?? process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: ()=>{}\n};\nlet broadcastChannel = null;\nfunction broadcast() {\n    if (typeof BroadcastChannel === \"undefined\") {\n        return {\n            postMessage: ()=>{},\n            addEventListener: ()=>{},\n            removeEventListener: ()=>{}\n        };\n    }\n    if (broadcastChannel === null) {\n        broadcastChannel = new BroadcastChannel(\"next-auth\");\n    }\n    return broadcastChannel;\n}\n// TODO:\nconst logger = {\n    debug: console.debug,\n    error: console.error,\n    warn: console.warn\n};\nconst SessionContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext?.(undefined);\n/**\n * React Hook that gives you access to the logged in user's session data and lets you modify it.\n *\n * :::info\n * `useSession` is for client-side use only and when using [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router) you should prefer the `auth()` export.\n * :::\n */ function useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    // @ts-expect-error Satisfy TS if branch on line below\n    const value = react__WEBPACK_IMPORTED_MODULE_1__.useContext(SessionContext);\n    if (!value && \"development\" !== \"production\") {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    const { required, onUnauthenticated } = options ?? {};\n    const requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        if (requiredAndNotLoading) {\n            const url = `${__NEXTAUTH.basePath}/signin?${new URLSearchParams({\n                error: \"SessionRequired\",\n                callbackUrl: window.location.href\n            })}`;\n            if (onUnauthenticated) onUnauthenticated();\n            else window.location.href = url;\n        }\n    }, [\n        requiredAndNotLoading,\n        onUnauthenticated\n    ]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\"\n        };\n    }\n    return value;\n}\nasync function getSession(params) {\n    const session = await (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"session\", __NEXTAUTH, logger, params);\n    if (params?.broadcast ?? true) {\n        broadcast().postMessage({\n            event: \"session\",\n            data: {\n                trigger: \"getSession\"\n            }\n        });\n    }\n    return session;\n}\n/**\n * Returns the current Cross-Site Request Forgery Token (CSRF Token)\n * required to make requests that changes state. (e.g. signing in or out, or updating the session).\n *\n * [CSRF Prevention: Double Submit Cookie](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie)\n */ async function getCsrfToken() {\n    const response = await (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"csrf\", __NEXTAUTH, logger);\n    return response?.csrfToken ?? \"\";\n}\n/**\n * Returns a client-safe configuration object of the currently\n * available providers.\n */ async function getProviders() {\n    return (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"providers\", __NEXTAUTH, logger);\n}\n/**\n * Initiate a signin flow or send the user to the signin page listing all possible providers.\n * Handles CSRF protection.\n */ async function signIn(provider, options, authorizationParams) {\n    const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n    const baseUrl = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.apiBaseUrl)(__NEXTAUTH);\n    const providers = await getProviders();\n    if (!providers) {\n        window.location.href = `${baseUrl}/error`;\n        return;\n    }\n    if (!provider || !(provider in providers)) {\n        window.location.href = `${baseUrl}/signin?${new URLSearchParams({\n            callbackUrl\n        })}`;\n        return;\n    }\n    const isCredentials = providers[provider].type === \"credentials\";\n    const isEmail = providers[provider].type === \"email\";\n    const isSupportingReturn = isCredentials || isEmail;\n    const signInUrl = `${baseUrl}/${isCredentials ? \"callback\" : \"signin\"}/${provider}`;\n    const csrfToken = await getCsrfToken();\n    const res = await fetch(`${signInUrl}?${new URLSearchParams(authorizationParams)}`, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\"\n        },\n        // @ts-expect-error\n        body: new URLSearchParams({\n            ...options,\n            csrfToken,\n            callbackUrl\n        })\n    });\n    const data = await res.json();\n    // TODO: Do not redirect for Credentials and Email providers by default in next major\n    if (redirect || !isSupportingReturn) {\n        const url = data.url ?? callbackUrl;\n        window.location.href = url;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (url.includes(\"#\")) window.location.reload();\n        return;\n    }\n    const error = new URL(data.url).searchParams.get(\"error\");\n    const code = new URL(data.url).searchParams.get(\"code\");\n    if (res.ok) {\n        await __NEXTAUTH._getSession({\n            event: \"storage\"\n        });\n    }\n    return {\n        error,\n        code,\n        status: res.status,\n        ok: res.ok,\n        url: error ? null : data.url\n    };\n}\n/**\n * Initiate a signout, by destroying the current session.\n * Handles CSRF protection.\n */ async function signOut(options) {\n    const { callbackUrl = window.location.href } = options ?? {};\n    const baseUrl = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.apiBaseUrl)(__NEXTAUTH);\n    const csrfToken = await getCsrfToken();\n    const res = await fetch(`${baseUrl}/signout`, {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"X-Auth-Return-Redirect\": \"1\"\n        },\n        body: new URLSearchParams({\n            csrfToken,\n            callbackUrl\n        })\n    });\n    const data = await res.json();\n    broadcast().postMessage({\n        event: \"session\",\n        data: {\n            trigger: \"signout\"\n        }\n    });\n    if (options?.redirect ?? true) {\n        const url = data.url ?? callbackUrl;\n        window.location.href = url;\n        // If url contains a hash, the browser does not reload the page. We reload manually\n        if (url.includes(\"#\")) window.location.reload();\n        // @ts-expect-error\n        return;\n    }\n    await __NEXTAUTH._getSession({\n        event: \"storage\"\n    });\n    return data;\n}\n/**\n * [React Context](https://react.dev/learn/passing-data-deeply-with-context) provider to wrap the app (`pages/`) to make session data available anywhere.\n *\n * When used, the session state is automatically synchronized across all open tabs/windows and they are all updated whenever they gain or lose focus\n * or the state changes (e.g. a user signs in or out) when {@link SessionProviderProps.refetchOnWindowFocus} is `true`.\n *\n * :::info\n * `SessionProvider` is for client-side use only and when using [Next.js App Router (`app/`)](https://nextjs.org/blog/next-13-4#nextjs-app-router) you should prefer the `auth()` export.\n * :::\n */ function SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    const { children, basePath, refetchInterval, refetchWhenOffline } = props;\n    if (basePath) __NEXTAUTH.basePath = basePath;\n    /**\n     * If session was `null`, there was an attempt to fetch it,\n     * but it failed, but we still treat it as a valid initial value.\n     */ const hasInitialSession = props.session !== undefined;\n    /** If session was passed, initialize as already synced */ __NEXTAUTH._lastSync = hasInitialSession ? (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)() : 0;\n    const [session, setSession] = react__WEBPACK_IMPORTED_MODULE_1__.useState(()=>{\n        if (hasInitialSession) __NEXTAUTH._session = props.session;\n        return props.session;\n    });\n    /** If session was passed, initialize as not loading */ const [loading, setLoading] = react__WEBPACK_IMPORTED_MODULE_1__.useState(!hasInitialSession);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        __NEXTAUTH._getSession = async ({ event } = {})=>{\n            try {\n                const storageEvent = event === \"storage\";\n                // We should always update if we don't have a client session yet\n                // or if there are events from other tabs/windows\n                if (storageEvent || __NEXTAUTH._session === undefined) {\n                    __NEXTAUTH._lastSync = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)();\n                    __NEXTAUTH._session = await getSession({\n                        broadcast: !storageEvent\n                    });\n                    setSession(__NEXTAUTH._session);\n                    return;\n                }\n                if (// If there is no time defined for when a session should be considered\n                // stale, then it's okay to use the value we have until an event is\n                // triggered which updates it\n                !event || // If the client doesn't have a session then we don't need to call\n                // the server to check if it does (if they have signed in via another\n                // tab or window that will come through as a \"stroage\" event\n                // event anyway)\n                __NEXTAUTH._session === null || // Bail out early if the client session is not stale yet\n                (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)() < __NEXTAUTH._lastSync) {\n                    return;\n                }\n                // An event or session staleness occurred, update the client session.\n                __NEXTAUTH._lastSync = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.now)();\n                __NEXTAUTH._session = await getSession();\n                setSession(__NEXTAUTH._session);\n            } catch (error) {\n                logger.error(new _lib_client_js__WEBPACK_IMPORTED_MODULE_2__.ClientSessionError(error.message, error));\n            } finally{\n                setLoading(false);\n            }\n        };\n        __NEXTAUTH._getSession();\n        return ()=>{\n            __NEXTAUTH._lastSync = 0;\n            __NEXTAUTH._session = undefined;\n            __NEXTAUTH._getSession = ()=>{};\n        };\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        const handle = ()=>__NEXTAUTH._getSession({\n                event: \"storage\"\n            });\n        // Listen for storage events and update session if event fired from\n        // another window (but suppress firing another event to avoid a loop)\n        // Fetch new session data but tell it to not to fire another event to\n        // avoid an infinite loop.\n        // Note: We could pass session data through and do something like\n        // `setData(message.data)` but that can cause problems depending\n        // on how the session object is being used in the client; it is\n        // more robust to have each window/tab fetch it's own copy of the\n        // session object rather than share it across instances.\n        broadcast().addEventListener(\"message\", handle);\n        return ()=>broadcast().removeEventListener(\"message\", handle);\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        const { refetchOnWindowFocus = true } = props;\n        // Listen for when the page is visible, if the user switches tabs\n        // and makes our tab visible again, re-fetch the session, but only if\n        // this feature is not disabled.\n        const visibilityHandler = ()=>{\n            if (refetchOnWindowFocus && document.visibilityState === \"visible\") __NEXTAUTH._getSession({\n                event: \"visibilitychange\"\n            });\n        };\n        document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n        return ()=>document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n    }, [\n        props.refetchOnWindowFocus\n    ]);\n    const isOnline = (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.useOnline)();\n    // TODO: Flip this behavior in next major version\n    const shouldRefetch = refetchWhenOffline !== false || isOnline;\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        if (refetchInterval && shouldRefetch) {\n            const refetchIntervalTimer = setInterval(()=>{\n                if (__NEXTAUTH._session) {\n                    __NEXTAUTH._getSession({\n                        event: \"poll\"\n                    });\n                }\n            }, refetchInterval * 1000);\n            return ()=>clearInterval(refetchIntervalTimer);\n        }\n    }, [\n        refetchInterval,\n        shouldRefetch\n    ]);\n    const value = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(()=>({\n            data: session,\n            status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n            async update (data) {\n                if (loading || !session) return;\n                setLoading(true);\n                const newSession = await (0,_lib_client_js__WEBPACK_IMPORTED_MODULE_2__.fetchData)(\"session\", __NEXTAUTH, logger, typeof data === \"undefined\" ? undefined : {\n                    body: {\n                        csrfToken: await getCsrfToken(),\n                        data\n                    }\n                });\n                setLoading(false);\n                if (newSession) {\n                    setSession(newSession);\n                    broadcast().postMessage({\n                        event: \"session\",\n                        data: {\n                            trigger: \"getSession\"\n                        }\n                    });\n                }\n                return newSession;\n            }\n        }), [\n        session,\n        loading\n    ]);\n    return(// @ts-expect-error\n    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SessionContext.Provider, {\n        value: value,\n        children: children\n    }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-auth/react.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* reexport safe */ _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__.AuthError),\n/* harmony export */   CredentialsSignin: () => (/* reexport safe */ _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__.CredentialsSignin),\n/* harmony export */   \"default\": () => (/* binding */ NextAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/index.js\");\n/* harmony import */ var _lib_env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(rsc)/./node_modules/next-auth/lib/index.js\");\n/* harmony import */ var _lib_actions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/actions.js */ \"(rsc)/./node_modules/next-auth/lib/actions.js\");\n/* harmony import */ var _auth_core_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @auth/core/errors */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/**\n * _If you are looking to migrate from v4, visit the [Upgrade Guide (v5)](https://authjs.dev/getting-started/migrating-to-v5)._\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install next-auth@beta\n * ```\n *\n * ## Environment variable inference\n *\n * `NEXTAUTH_URL` and `NEXTAUTH_SECRET` have been inferred since v4.\n *\n * Since NextAuth.js v5 can also automatically infer environment variables that are prefixed with `AUTH_`.\n *\n * For example `AUTH_GITHUB_ID` and `AUTH_GITHUB_SECRET` will be used as the `clientId` and `clientSecret` options for the GitHub provider.\n *\n * :::tip\n * The environment variable name inferring has the following format for OAuth providers: `AUTH_{PROVIDER}_{ID|SECRET}`.\n *\n * `PROVIDER` is the uppercase snake case version of the provider's id, followed by either `ID` or `SECRET` respectively.\n * :::\n *\n * `AUTH_SECRET` and `AUTH_URL` are also aliased for `NEXTAUTH_SECRET` and `NEXTAUTH_URL` for consistency.\n *\n * To add social login to your app, the configuration becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/github\"\n * export const { handlers, auth } = NextAuth({ providers: [ GitHub ] })\n * ```\n *\n * And the `.env.local` file:\n *\n * ```sh title=\".env.local\"\n * AUTH_GITHUB_ID=...\n * AUTH_GITHUB_SECRET=...\n * AUTH_SECRET=...\n * ```\n *\n * :::tip\n * In production, `AUTH_SECRET` is a required environment variable - if not set, NextAuth.js will throw an error. See [MissingSecretError](https://authjs.dev/reference/core/errors#missingsecret) for more details.\n * :::\n *\n * If you need to override the default values for a provider, you can still call it as a function `GitHub({...})` as before.\n *\n * ## Lazy initialization\n * You can also initialize NextAuth.js lazily (previously known as advanced intialization), which allows you to access the request context in the configuration in some cases, like Route Handlers, Middleware, API Routes or `getServerSideProps`.\n * The above example becomes:\n *\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"next-auth/providers/github\"\n * export const { handlers, auth } = NextAuth(req => {\n *  if (req) {\n *   console.log(req) // do something with the request\n *  }\n *  return { providers: [ GitHub ] }\n * })\n * ```\n *\n * :::tip\n * This is useful if you want to customize the configuration based on the request, for example, to add a different provider in staging/dev environments.\n * :::\n *\n * @module next-auth\n */\n\n\n\n\n\n/**\n *  Initialize NextAuth.js.\n *\n *  @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth({ providers: [GitHub] })\n * ```\n *\n * Lazy initialization:\n *\n * @example\n * ```ts title=\"auth.ts\"\n * import NextAuth from \"next-auth\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * export const { handlers, auth } = NextAuth((req) => {\n *   console.log(req) // do something with the request\n *   return {\n *     providers: [GitHub],\n *   },\n * })\n * ```\n */\nfunction NextAuth(config) {\n    if (typeof config === \"function\") {\n        const httpHandler = (req) => {\n            const _config = config(req);\n            (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n            return (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)((0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.reqWithEnvURL)(req), _config);\n        };\n        return {\n            handlers: { GET: httpHandler, POST: httpHandler },\n            // @ts-expect-error\n            auth: (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.initAuth)(config, (c) => (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(c)),\n            signIn: (provider, options, authorizationParams) => {\n                const _config = config(undefined);\n                (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n                return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signIn)(provider, options, authorizationParams, _config);\n            },\n            signOut: (options) => {\n                const _config = config(undefined);\n                (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n                return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signOut)(options, _config);\n            },\n            unstable_update: (data) => {\n                const _config = config(undefined);\n                (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(_config);\n                return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.update)(data, _config);\n            },\n        };\n    }\n    (0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(config);\n    const httpHandler = (req) => (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)((0,_lib_env_js__WEBPACK_IMPORTED_MODULE_1__.reqWithEnvURL)(req), config);\n    return {\n        handlers: { GET: httpHandler, POST: httpHandler },\n        // @ts-expect-error\n        auth: (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.initAuth)(config),\n        signIn: (provider, options, authorizationParams) => {\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signIn)(provider, options, authorizationParams, config);\n        },\n        signOut: (options) => {\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.signOut)(options, config);\n        },\n        unstable_update: (data) => {\n            return (0,_lib_actions_js__WEBPACK_IMPORTED_MODULE_3__.update)(data, config);\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/actions.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/lib/actions.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   update: () => (/* binding */ update)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers.js */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation.js */ \"(rsc)/./node_modules/next/dist/api/navigation.react-server.js\");\n\n\n\nasync function signIn(provider, options = {}, authorizationParams, config) {\n    const headers = new Headers((0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    const { redirect: shouldRedirect = true, redirectTo, ...rest } = options instanceof FormData ? Object.fromEntries(options) : options;\n    const callbackUrl = redirectTo?.toString() ?? headers.get(\"Referer\") ?? \"/\";\n    const signInURL = (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.createActionURL)(\"signin\", \n    // @ts-expect-error `x-forwarded-proto` is not nullable, next.js sets it by default\n    headers.get(\"x-forwarded-proto\"), headers, process.env, config.basePath);\n    if (!provider) {\n        signInURL.searchParams.append(\"callbackUrl\", callbackUrl);\n        if (shouldRedirect)\n            (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.redirect)(signInURL.toString());\n        return signInURL.toString();\n    }\n    let url = `${signInURL}/${provider}?${new URLSearchParams(authorizationParams)}`;\n    let foundProvider = {};\n    for (const providerConfig of config.providers) {\n        const { options, ...defaults } = typeof providerConfig === \"function\" ? providerConfig() : providerConfig;\n        const id = options?.id ?? defaults.id;\n        if (id === provider) {\n            foundProvider = {\n                id,\n                type: options?.type ?? defaults.type,\n            };\n            break;\n        }\n    }\n    if (!foundProvider.id) {\n        const url = `${signInURL}?${new URLSearchParams({ callbackUrl })}`;\n        if (shouldRedirect)\n            (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.redirect)(url);\n        return url;\n    }\n    if (foundProvider.type === \"credentials\") {\n        url = url.replace(\"signin\", \"callback\");\n    }\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const body = new URLSearchParams({ ...rest, callbackUrl });\n    const req = new Request(url, { method: \"POST\", headers, body });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, { ...config, raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw, skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck });\n    for (const c of res?.cookies ?? [])\n        (0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    const responseUrl = res instanceof Response ? res.headers.get(\"Location\") : res.redirect;\n    // NOTE: if for some unexpected reason the responseUrl is not set,\n    // we redirect to the original url\n    const redirectUrl = responseUrl ?? url;\n    if (shouldRedirect)\n        return (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.redirect)(redirectUrl);\n    return redirectUrl;\n}\nasync function signOut(options, config) {\n    const headers = new Headers((0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    const url = (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.createActionURL)(\"signout\", \n    // @ts-expect-error `x-forwarded-proto` is not nullable, next.js sets it by default\n    headers.get(\"x-forwarded-proto\"), headers, process.env, config.basePath);\n    const callbackUrl = options?.redirectTo ?? headers.get(\"Referer\") ?? \"/\";\n    const body = new URLSearchParams({ callbackUrl });\n    const req = new Request(url, { method: \"POST\", headers, body });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, { ...config, raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw, skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck });\n    for (const c of res?.cookies ?? [])\n        (0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    if (options?.redirect ?? true)\n        return (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_2__.redirect)(res.redirect);\n    return res;\n}\nasync function update(data, config) {\n    const headers = new Headers((0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.headers)());\n    headers.set(\"Content-Type\", \"application/json\");\n    const url = (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.createActionURL)(\"session\", \n    // @ts-expect-error `x-forwarded-proto` is not nullable, next.js sets it by default\n    headers.get(\"x-forwarded-proto\"), headers, process.env, config.basePath);\n    const body = JSON.stringify({ data });\n    const req = new Request(url, { method: \"POST\", headers, body });\n    const res = await (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(req, { ...config, raw: _auth_core__WEBPACK_IMPORTED_MODULE_0__.raw, skipCSRFCheck: _auth_core__WEBPACK_IMPORTED_MODULE_0__.skipCSRFCheck });\n    for (const c of res?.cookies ?? [])\n        (0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.cookies)().set(c.name, c.value, c.options);\n    return res.body;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2xpYi9hY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RTtBQUNMO0FBQ3BCO0FBQ3ZDLDRDQUE0QztBQUNuRCxnQ0FBZ0Msd0RBQVc7QUFDM0MsWUFBWSx1REFBdUQ7QUFDbkU7QUFDQSxzQkFBc0IsMkRBQWU7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNERBQVE7QUFDcEI7QUFDQTtBQUNBLGlCQUFpQixVQUFVLEdBQUcsU0FBUyxHQUFHLHlDQUF5QztBQUNuRjtBQUNBO0FBQ0EsZ0JBQWdCLHVCQUF1QjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixVQUFVLEdBQUcsc0JBQXNCLGFBQWEsRUFBRTtBQUN6RTtBQUNBLFlBQVksNERBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHNCQUFzQjtBQUM3RCxtQ0FBbUMsK0JBQStCO0FBQ2xFLHNCQUFzQixnREFBSSxRQUFRLGNBQWMsNERBQWUseURBQUU7QUFDakU7QUFDQSxRQUFRLHdEQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQVE7QUFDdkI7QUFDQTtBQUNPO0FBQ1AsZ0NBQWdDLHdEQUFXO0FBQzNDO0FBQ0EsZ0JBQWdCLDJEQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxhQUFhO0FBQ3BELG1DQUFtQywrQkFBK0I7QUFDbEUsc0JBQXNCLGdEQUFJLFFBQVEsY0FBYyw0REFBZSx5REFBRTtBQUNqRTtBQUNBLFFBQVEsd0RBQU87QUFDZjtBQUNBLGVBQWUsNERBQVE7QUFDdkI7QUFDQTtBQUNPO0FBQ1AsZ0NBQWdDLHdEQUFXO0FBQzNDO0FBQ0EsZ0JBQWdCLDJEQUFlO0FBQy9CO0FBQ0E7QUFDQSxrQ0FBa0MsTUFBTTtBQUN4QyxtQ0FBbUMsK0JBQStCO0FBQ2xFLHNCQUFzQixnREFBSSxRQUFRLGNBQWMsNERBQWUseURBQUU7QUFDakU7QUFDQSxRQUFRLHdEQUFPO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbGliL2FjdGlvbnMuanM/NTQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRoLCByYXcsIHNraXBDU1JGQ2hlY2ssIGNyZWF0ZUFjdGlvblVSTCB9IGZyb20gXCJAYXV0aC9jb3JlXCI7XG5pbXBvcnQgeyBoZWFkZXJzIGFzIG5leHRIZWFkZXJzLCBjb29raWVzIH0gZnJvbSBcIm5leHQvaGVhZGVycy5qc1wiO1xuaW1wb3J0IHsgcmVkaXJlY3QgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbkluKHByb3ZpZGVyLCBvcHRpb25zID0ge30sIGF1dGhvcml6YXRpb25QYXJhbXMsIGNvbmZpZykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhuZXh0SGVhZGVycygpKTtcbiAgICBjb25zdCB7IHJlZGlyZWN0OiBzaG91bGRSZWRpcmVjdCA9IHRydWUsIHJlZGlyZWN0VG8sIC4uLnJlc3QgfSA9IG9wdGlvbnMgaW5zdGFuY2VvZiBGb3JtRGF0YSA/IE9iamVjdC5mcm9tRW50cmllcyhvcHRpb25zKSA6IG9wdGlvbnM7XG4gICAgY29uc3QgY2FsbGJhY2tVcmwgPSByZWRpcmVjdFRvPy50b1N0cmluZygpID8/IGhlYWRlcnMuZ2V0KFwiUmVmZXJlclwiKSA/PyBcIi9cIjtcbiAgICBjb25zdCBzaWduSW5VUkwgPSBjcmVhdGVBY3Rpb25VUkwoXCJzaWduaW5cIiwgXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBgeC1mb3J3YXJkZWQtcHJvdG9gIGlzIG5vdCBudWxsYWJsZSwgbmV4dC5qcyBzZXRzIGl0IGJ5IGRlZmF1bHRcbiAgICBoZWFkZXJzLmdldChcIngtZm9yd2FyZGVkLXByb3RvXCIpLCBoZWFkZXJzLCBwcm9jZXNzLmVudiwgY29uZmlnLmJhc2VQYXRoKTtcbiAgICBpZiAoIXByb3ZpZGVyKSB7XG4gICAgICAgIHNpZ25JblVSTC5zZWFyY2hQYXJhbXMuYXBwZW5kKFwiY2FsbGJhY2tVcmxcIiwgY2FsbGJhY2tVcmwpO1xuICAgICAgICBpZiAoc2hvdWxkUmVkaXJlY3QpXG4gICAgICAgICAgICByZWRpcmVjdChzaWduSW5VUkwudG9TdHJpbmcoKSk7XG4gICAgICAgIHJldHVybiBzaWduSW5VUkwudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgbGV0IHVybCA9IGAke3NpZ25JblVSTH0vJHtwcm92aWRlcn0/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKGF1dGhvcml6YXRpb25QYXJhbXMpfWA7XG4gICAgbGV0IGZvdW5kUHJvdmlkZXIgPSB7fTtcbiAgICBmb3IgKGNvbnN0IHByb3ZpZGVyQ29uZmlnIG9mIGNvbmZpZy5wcm92aWRlcnMpIHtcbiAgICAgICAgY29uc3QgeyBvcHRpb25zLCAuLi5kZWZhdWx0cyB9ID0gdHlwZW9mIHByb3ZpZGVyQ29uZmlnID09PSBcImZ1bmN0aW9uXCIgPyBwcm92aWRlckNvbmZpZygpIDogcHJvdmlkZXJDb25maWc7XG4gICAgICAgIGNvbnN0IGlkID0gb3B0aW9ucz8uaWQgPz8gZGVmYXVsdHMuaWQ7XG4gICAgICAgIGlmIChpZCA9PT0gcHJvdmlkZXIpIHtcbiAgICAgICAgICAgIGZvdW5kUHJvdmlkZXIgPSB7XG4gICAgICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICAgICAgdHlwZTogb3B0aW9ucz8udHlwZSA/PyBkZWZhdWx0cy50eXBlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghZm91bmRQcm92aWRlci5pZCkge1xuICAgICAgICBjb25zdCB1cmwgPSBgJHtzaWduSW5VUkx9PyR7bmV3IFVSTFNlYXJjaFBhcmFtcyh7IGNhbGxiYWNrVXJsIH0pfWA7XG4gICAgICAgIGlmIChzaG91bGRSZWRpcmVjdClcbiAgICAgICAgICAgIHJlZGlyZWN0KHVybCk7XG4gICAgICAgIHJldHVybiB1cmw7XG4gICAgfVxuICAgIGlmIChmb3VuZFByb3ZpZGVyLnR5cGUgPT09IFwiY3JlZGVudGlhbHNcIikge1xuICAgICAgICB1cmwgPSB1cmwucmVwbGFjZShcInNpZ25pblwiLCBcImNhbGxiYWNrXCIpO1xuICAgIH1cbiAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKTtcbiAgICBjb25zdCBib2R5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7IC4uLnJlc3QsIGNhbGxiYWNrVXJsIH0pO1xuICAgIGNvbnN0IHJlcSA9IG5ldyBSZXF1ZXN0KHVybCwgeyBtZXRob2Q6IFwiUE9TVFwiLCBoZWFkZXJzLCBib2R5IH0pO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IEF1dGgocmVxLCB7IC4uLmNvbmZpZywgcmF3LCBza2lwQ1NSRkNoZWNrIH0pO1xuICAgIGZvciAoY29uc3QgYyBvZiByZXM/LmNvb2tpZXMgPz8gW10pXG4gICAgICAgIGNvb2tpZXMoKS5zZXQoYy5uYW1lLCBjLnZhbHVlLCBjLm9wdGlvbnMpO1xuICAgIGNvbnN0IHJlc3BvbnNlVXJsID0gcmVzIGluc3RhbmNlb2YgUmVzcG9uc2UgPyByZXMuaGVhZGVycy5nZXQoXCJMb2NhdGlvblwiKSA6IHJlcy5yZWRpcmVjdDtcbiAgICAvLyBOT1RFOiBpZiBmb3Igc29tZSB1bmV4cGVjdGVkIHJlYXNvbiB0aGUgcmVzcG9uc2VVcmwgaXMgbm90IHNldCxcbiAgICAvLyB3ZSByZWRpcmVjdCB0byB0aGUgb3JpZ2luYWwgdXJsXG4gICAgY29uc3QgcmVkaXJlY3RVcmwgPSByZXNwb25zZVVybCA/PyB1cmw7XG4gICAgaWYgKHNob3VsZFJlZGlyZWN0KVxuICAgICAgICByZXR1cm4gcmVkaXJlY3QocmVkaXJlY3RVcmwpO1xuICAgIHJldHVybiByZWRpcmVjdFVybDtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduT3V0KG9wdGlvbnMsIGNvbmZpZykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhuZXh0SGVhZGVycygpKTtcbiAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKTtcbiAgICBjb25zdCB1cmwgPSBjcmVhdGVBY3Rpb25VUkwoXCJzaWdub3V0XCIsIFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgYHgtZm9yd2FyZGVkLXByb3RvYCBpcyBub3QgbnVsbGFibGUsIG5leHQuanMgc2V0cyBpdCBieSBkZWZhdWx0XG4gICAgaGVhZGVycy5nZXQoXCJ4LWZvcndhcmRlZC1wcm90b1wiKSwgaGVhZGVycywgcHJvY2Vzcy5lbnYsIGNvbmZpZy5iYXNlUGF0aCk7XG4gICAgY29uc3QgY2FsbGJhY2tVcmwgPSBvcHRpb25zPy5yZWRpcmVjdFRvID8/IGhlYWRlcnMuZ2V0KFwiUmVmZXJlclwiKSA/PyBcIi9cIjtcbiAgICBjb25zdCBib2R5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7IGNhbGxiYWNrVXJsIH0pO1xuICAgIGNvbnN0IHJlcSA9IG5ldyBSZXF1ZXN0KHVybCwgeyBtZXRob2Q6IFwiUE9TVFwiLCBoZWFkZXJzLCBib2R5IH0pO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IEF1dGgocmVxLCB7IC4uLmNvbmZpZywgcmF3LCBza2lwQ1NSRkNoZWNrIH0pO1xuICAgIGZvciAoY29uc3QgYyBvZiByZXM/LmNvb2tpZXMgPz8gW10pXG4gICAgICAgIGNvb2tpZXMoKS5zZXQoYy5uYW1lLCBjLnZhbHVlLCBjLm9wdGlvbnMpO1xuICAgIGlmIChvcHRpb25zPy5yZWRpcmVjdCA/PyB0cnVlKVxuICAgICAgICByZXR1cm4gcmVkaXJlY3QocmVzLnJlZGlyZWN0KTtcbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShkYXRhLCBjb25maWcpIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMobmV4dEhlYWRlcnMoKSk7XG4gICAgaGVhZGVycy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuICAgIGNvbnN0IHVybCA9IGNyZWF0ZUFjdGlvblVSTChcInNlc3Npb25cIiwgXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBgeC1mb3J3YXJkZWQtcHJvdG9gIGlzIG5vdCBudWxsYWJsZSwgbmV4dC5qcyBzZXRzIGl0IGJ5IGRlZmF1bHRcbiAgICBoZWFkZXJzLmdldChcIngtZm9yd2FyZGVkLXByb3RvXCIpLCBoZWFkZXJzLCBwcm9jZXNzLmVudiwgY29uZmlnLmJhc2VQYXRoKTtcbiAgICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoeyBkYXRhIH0pO1xuICAgIGNvbnN0IHJlcSA9IG5ldyBSZXF1ZXN0KHVybCwgeyBtZXRob2Q6IFwiUE9TVFwiLCBoZWFkZXJzLCBib2R5IH0pO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IEF1dGgocmVxLCB7IC4uLmNvbmZpZywgcmF3LCBza2lwQ1NSRkNoZWNrIH0pO1xuICAgIGZvciAoY29uc3QgYyBvZiByZXM/LmNvb2tpZXMgPz8gW10pXG4gICAgICAgIGNvb2tpZXMoKS5zZXQoYy5uYW1lLCBjLnZhbHVlLCBjLm9wdGlvbnMpO1xuICAgIHJldHVybiByZXMuYm9keTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/actions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/env.js":
/*!*******************************************!*\
  !*** ./node_modules/next-auth/lib/env.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reqWithEnvURL: () => (/* binding */ reqWithEnvURL),\n/* harmony export */   setEnvDefaults: () => (/* binding */ setEnvDefaults)\n/* harmony export */ });\n/* harmony import */ var next_server_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server.js */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/index.js\");\n\n\n/** If `NEXTAUTH_URL` or `AUTH_URL` is defined, override the request's URL. */\nfunction reqWithEnvURL(req) {\n    const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n    if (!url)\n        return req;\n    const { origin: envOrigin } = new URL(url);\n    const { href, origin } = req.nextUrl;\n    return new next_server_js__WEBPACK_IMPORTED_MODULE_0__.NextRequest(href.replace(origin, envOrigin), req);\n}\n/**\n * For backwards compatibility, `next-auth` checks for `NEXTAUTH_URL`\n * and the `basePath` by default is `/api/auth` instead of `/auth`\n * (which is the default for all other Auth.js integrations).\n *\n * For the same reason, `NEXTAUTH_SECRET` is also checked.\n */\nfunction setEnvDefaults(config) {\n    try {\n        config.secret ?? (config.secret = process.env.AUTH_SECRET ?? process.env.NEXTAUTH_SECRET);\n        const url = process.env.AUTH_URL ?? process.env.NEXTAUTH_URL;\n        if (!url)\n            return;\n        const { pathname } = new URL(url);\n        if (pathname === \"/\")\n            return;\n        config.basePath || (config.basePath = pathname);\n    }\n    catch {\n    }\n    finally {\n        config.basePath || (config.basePath = \"/api/auth\");\n        (0,_auth_core__WEBPACK_IMPORTED_MODULE_1__.setEnvDefaults)(process.env, config);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2xpYi9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2QztBQUNxQjtBQUNsRTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEMsWUFBWSxlQUFlO0FBQzNCLGVBQWUsdURBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixXQUFXO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBEQUFrQjtBQUMxQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9saWIvZW52LmpzPzZmMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QgfSBmcm9tIFwibmV4dC9zZXJ2ZXIuanNcIjtcbmltcG9ydCB7IHNldEVudkRlZmF1bHRzIGFzIGNvcmVTZXRFbnZEZWZhdWx0cyB9IGZyb20gXCJAYXV0aC9jb3JlXCI7XG4vKiogSWYgYE5FWFRBVVRIX1VSTGAgb3IgYEFVVEhfVVJMYCBpcyBkZWZpbmVkLCBvdmVycmlkZSB0aGUgcmVxdWVzdCdzIFVSTC4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXFXaXRoRW52VVJMKHJlcSkge1xuICAgIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52LkFVVEhfVVJMID8/IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTDtcbiAgICBpZiAoIXVybClcbiAgICAgICAgcmV0dXJuIHJlcTtcbiAgICBjb25zdCB7IG9yaWdpbjogZW52T3JpZ2luIH0gPSBuZXcgVVJMKHVybCk7XG4gICAgY29uc3QgeyBocmVmLCBvcmlnaW4gfSA9IHJlcS5uZXh0VXJsO1xuICAgIHJldHVybiBuZXcgTmV4dFJlcXVlc3QoaHJlZi5yZXBsYWNlKG9yaWdpbiwgZW52T3JpZ2luKSwgcmVxKTtcbn1cbi8qKlxuICogRm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LCBgbmV4dC1hdXRoYCBjaGVja3MgZm9yIGBORVhUQVVUSF9VUkxgXG4gKiBhbmQgdGhlIGBiYXNlUGF0aGAgYnkgZGVmYXVsdCBpcyBgL2FwaS9hdXRoYCBpbnN0ZWFkIG9mIGAvYXV0aGBcbiAqICh3aGljaCBpcyB0aGUgZGVmYXVsdCBmb3IgYWxsIG90aGVyIEF1dGguanMgaW50ZWdyYXRpb25zKS5cbiAqXG4gKiBGb3IgdGhlIHNhbWUgcmVhc29uLCBgTkVYVEFVVEhfU0VDUkVUYCBpcyBhbHNvIGNoZWNrZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRFbnZEZWZhdWx0cyhjb25maWcpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25maWcuc2VjcmV0ID8/IChjb25maWcuc2VjcmV0ID0gcHJvY2Vzcy5lbnYuQVVUSF9TRUNSRVQgPz8gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVUKTtcbiAgICAgICAgY29uc3QgdXJsID0gcHJvY2Vzcy5lbnYuQVVUSF9VUkwgPz8gcHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMO1xuICAgICAgICBpZiAoIXVybClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgeyBwYXRobmFtZSB9ID0gbmV3IFVSTCh1cmwpO1xuICAgICAgICBpZiAocGF0aG5hbWUgPT09IFwiL1wiKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25maWcuYmFzZVBhdGggfHwgKGNvbmZpZy5iYXNlUGF0aCA9IHBhdGhuYW1lKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgY29uZmlnLmJhc2VQYXRoIHx8IChjb25maWcuYmFzZVBhdGggPSBcIi9hcGkvYXV0aFwiKTtcbiAgICAgICAgY29yZVNldEVudkRlZmF1bHRzKHByb2Nlc3MuZW52LCBjb25maWcpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/lib/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initAuth: () => (/* binding */ initAuth)\n/* harmony export */ });\n/* harmony import */ var _auth_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/index.js\");\n/* harmony import */ var next_headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers.js */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var next_server_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/server.js */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./env.js */ \"(rsc)/./node_modules/next-auth/lib/env.js\");\n\n\n\n\nasync function getSession(headers, config) {\n    const url = (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.createActionURL)(\"session\", \n    // @ts-expect-error `x-forwarded-proto` is not nullable, next.js sets it by default\n    headers.get(\"x-forwarded-proto\"), headers, process.env, config.basePath);\n    const request = new Request(url, {\n        headers: { cookie: headers.get(\"cookie\") ?? \"\" },\n    });\n    return (0,_auth_core__WEBPACK_IMPORTED_MODULE_0__.Auth)(request, {\n        ...config,\n        callbacks: {\n            ...config.callbacks,\n            // Since we are server-side, we don't need to filter out the session data\n            // See https://authjs.dev/getting-started/migrating-to-v5#authenticating-server-side\n            // TODO: Taint the session data to prevent accidental leakage to the client\n            // https://react.dev/reference/react/experimental_taintObjectReference\n            async session(...args) {\n                const session = \n                // If the user defined a custom session callback, use that instead\n                (await config.callbacks?.session?.(...args)) ?? {\n                    ...args[0].session,\n                    expires: args[0].session.expires?.toISOString?.() ??\n                        args[0].session.expires,\n                };\n                const user = args[0].user ?? args[0].token;\n                return { user, ...session };\n            },\n        },\n    });\n}\nfunction isReqWrapper(arg) {\n    return typeof arg === \"function\";\n}\nfunction initAuth(config, onLazyLoad // To set the default env vars\n) {\n    if (typeof config === \"function\") {\n        return (...args) => {\n            if (!args.length) {\n                // React Server Components\n                const _headers = (0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.headers)();\n                const _config = config(undefined); // Review: Should we pass headers() here instead?\n                onLazyLoad?.(_config);\n                return getSession(_headers, _config).then((r) => r.json());\n            }\n            if (args[0] instanceof Request) {\n                // middleware.ts inline\n                // export { auth as default } from \"auth\"\n                const req = args[0];\n                const ev = args[1];\n                const _config = config(req);\n                onLazyLoad?.(_config);\n                // args[0] is supposed to be NextRequest but the instanceof check is failing.\n                return handleAuth([req, ev], _config);\n            }\n            if (isReqWrapper(args[0])) {\n                // middleware.ts wrapper/route.ts\n                // import { auth } from \"auth\"\n                // export default auth((req) => { console.log(req.auth) }})\n                const userMiddlewareOrRoute = args[0];\n                return async (...args) => {\n                    return handleAuth(args, config(args[0]), userMiddlewareOrRoute);\n                };\n            }\n            // API Routes, getServerSideProps\n            const request = \"req\" in args[0] ? args[0].req : args[0];\n            const response = \"res\" in args[0] ? args[0].res : args[1];\n            // @ts-expect-error -- request is NextRequest\n            const _config = config(request);\n            onLazyLoad?.(_config);\n            // @ts-expect-error -- request is NextRequest\n            return getSession(new Headers(request.headers), _config).then(async (authResponse) => {\n                const auth = await authResponse.json();\n                for (const cookie of authResponse.headers.getSetCookie())\n                    if (\"headers\" in response)\n                        response.headers.append(\"set-cookie\", cookie);\n                    else\n                        response.appendHeader(\"set-cookie\", cookie);\n                return auth;\n            });\n        };\n    }\n    return (...args) => {\n        if (!args.length) {\n            // React Server Components\n            return getSession((0,next_headers_js__WEBPACK_IMPORTED_MODULE_1__.headers)(), config).then((r) => r.json());\n        }\n        if (args[0] instanceof Request) {\n            // middleware.ts inline\n            // export { auth as default } from \"auth\"\n            const req = args[0];\n            const ev = args[1];\n            return handleAuth([req, ev], config);\n        }\n        if (isReqWrapper(args[0])) {\n            // middleware.ts wrapper/route.ts\n            // import { auth } from \"auth\"\n            // export default auth((req) => { console.log(req.auth) }})\n            const userMiddlewareOrRoute = args[0];\n            return async (...args) => {\n                return handleAuth(args, config, userMiddlewareOrRoute).then((res) => {\n                    return res;\n                });\n            };\n        }\n        // API Routes, getServerSideProps\n        const request = \"req\" in args[0] ? args[0].req : args[0];\n        const response = \"res\" in args[0] ? args[0].res : args[1];\n        return getSession(\n        // @ts-expect-error\n        new Headers(request.headers), config).then(async (authResponse) => {\n            const auth = await authResponse.json();\n            for (const cookie of authResponse.headers.getSetCookie())\n                if (\"headers\" in response)\n                    response.headers.append(\"set-cookie\", cookie);\n                else\n                    response.appendHeader(\"set-cookie\", cookie);\n            return auth;\n        });\n    };\n}\nasync function handleAuth(args, config, userMiddlewareOrRoute) {\n    const request = (0,_env_js__WEBPACK_IMPORTED_MODULE_3__.reqWithEnvURL)(args[0]);\n    const sessionResponse = await getSession(request.headers, config);\n    const auth = await sessionResponse.json();\n    let authorized = true;\n    if (config.callbacks?.authorized) {\n        authorized = await config.callbacks.authorized({ request, auth });\n    }\n    let response = next_server_js__WEBPACK_IMPORTED_MODULE_2__.NextResponse.next?.();\n    if (authorized instanceof Response) {\n        // User returned a custom response, like redirecting to a page or 401, respect it\n        response = authorized;\n        const redirect = authorized.headers.get(\"Location\");\n        const { pathname } = request.nextUrl;\n        // If the user is redirecting to the same NextAuth.js action path as the current request,\n        // don't allow the redirect to prevent an infinite loop\n        if (redirect &&\n            isSameAuthAction(pathname, new URL(redirect).pathname, config)) {\n            authorized = true;\n        }\n    }\n    else if (userMiddlewareOrRoute) {\n        // Execute user's middleware/handler with the augmented request\n        const augmentedReq = request;\n        augmentedReq.auth = auth;\n        response =\n            // @ts-expect-error\n            (await userMiddlewareOrRoute(augmentedReq, args[1])) ??\n                next_server_js__WEBPACK_IMPORTED_MODULE_2__.NextResponse.next();\n    }\n    else if (!authorized) {\n        const signInPage = config.pages?.signIn ?? `${config.basePath}/signin`;\n        if (request.nextUrl.pathname !== signInPage) {\n            // Redirect to signin page by default if not authorized\n            const signInUrl = request.nextUrl.clone();\n            signInUrl.pathname = signInPage;\n            signInUrl.searchParams.set(\"callbackUrl\", request.nextUrl.href);\n            response = next_server_js__WEBPACK_IMPORTED_MODULE_2__.NextResponse.redirect(signInUrl);\n        }\n    }\n    const finalResponse = new Response(response?.body, response);\n    // Preserve cookies from the session response\n    for (const cookie of sessionResponse.headers.getSetCookie())\n        finalResponse.headers.append(\"set-cookie\", cookie);\n    return finalResponse;\n}\nfunction isSameAuthAction(requestPath, redirectPath, config) {\n    const action = redirectPath.replace(`${requestPath}/`, \"\");\n    const pages = Object.values(config.pages ?? {});\n    return ((actions.has(action) || pages.includes(redirectPath)) &&\n        redirectPath === requestPath);\n}\nconst actions = new Set([\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\",\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/errors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDenied: () => (/* binding */ AccessDenied),\n/* harmony export */   AccountNotLinked: () => (/* binding */ AccountNotLinked),\n/* harmony export */   AdapterError: () => (/* binding */ AdapterError),\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   CallbackRouteError: () => (/* binding */ CallbackRouteError),\n/* harmony export */   CredentialsSignin: () => (/* binding */ CredentialsSignin),\n/* harmony export */   DuplicateConditionalUI: () => (/* binding */ DuplicateConditionalUI),\n/* harmony export */   EmailSignInError: () => (/* binding */ EmailSignInError),\n/* harmony export */   ErrorPageLoop: () => (/* binding */ ErrorPageLoop),\n/* harmony export */   EventError: () => (/* binding */ EventError),\n/* harmony export */   ExperimentalFeatureNotEnabled: () => (/* binding */ ExperimentalFeatureNotEnabled),\n/* harmony export */   InvalidCallbackUrl: () => (/* binding */ InvalidCallbackUrl),\n/* harmony export */   InvalidCheck: () => (/* binding */ InvalidCheck),\n/* harmony export */   InvalidEndpoints: () => (/* binding */ InvalidEndpoints),\n/* harmony export */   InvalidProvider: () => (/* binding */ InvalidProvider),\n/* harmony export */   JWTSessionError: () => (/* binding */ JWTSessionError),\n/* harmony export */   MissingAdapter: () => (/* binding */ MissingAdapter),\n/* harmony export */   MissingAdapterMethods: () => (/* binding */ MissingAdapterMethods),\n/* harmony export */   MissingAuthorize: () => (/* binding */ MissingAuthorize),\n/* harmony export */   MissingCSRF: () => (/* binding */ MissingCSRF),\n/* harmony export */   MissingSecret: () => (/* binding */ MissingSecret),\n/* harmony export */   MissingWebAuthnAutocomplete: () => (/* binding */ MissingWebAuthnAutocomplete),\n/* harmony export */   OAuthAccountNotLinked: () => (/* binding */ OAuthAccountNotLinked),\n/* harmony export */   OAuthCallbackError: () => (/* binding */ OAuthCallbackError),\n/* harmony export */   OAuthProfileParseError: () => (/* binding */ OAuthProfileParseError),\n/* harmony export */   OAuthSignInError: () => (/* binding */ OAuthSignInError),\n/* harmony export */   SessionTokenError: () => (/* binding */ SessionTokenError),\n/* harmony export */   SignInError: () => (/* binding */ SignInError),\n/* harmony export */   SignOutError: () => (/* binding */ SignOutError),\n/* harmony export */   UnknownAction: () => (/* binding */ UnknownAction),\n/* harmony export */   UnsupportedStrategy: () => (/* binding */ UnsupportedStrategy),\n/* harmony export */   UntrustedHost: () => (/* binding */ UntrustedHost),\n/* harmony export */   Verification: () => (/* binding */ Verification),\n/* harmony export */   WebAuthnVerificationError: () => (/* binding */ WebAuthnVerificationError),\n/* harmony export */   isClientError: () => (/* binding */ isClientError)\n/* harmony export */ });\n/**\n * Base error class for all Auth.js errors.\n * It's optimized to be printed in the server logs in a nicely formatted way\n * via the [`logger.error`](https://authjs.dev/reference/core#logger) option.\n */\nclass AuthError extends Error {\n    constructor(message, errorOptions) {\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: { err: message, ...message.cause, ...errorOptions },\n            });\n        }\n        else if (typeof message === \"string\") {\n            if (errorOptions instanceof Error) {\n                errorOptions = { err: errorOptions, ...errorOptions.cause };\n            }\n            super(message, errorOptions);\n        }\n        else {\n            super(undefined, message);\n        }\n        this.name = this.constructor.name;\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.type = this.constructor.type ?? \"AuthError\";\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.kind = this.constructor.kind ?? \"error\";\n        Error.captureStackTrace?.(this, this.constructor);\n        const url = `https://errors.authjs.dev#${this.type.toLowerCase()}`;\n        this.message += `${this.message ? \". \" : \"\"}Read more at ${url}`;\n    }\n}\nclass SignInError extends AuthError {\n}\nSignInError.kind = \"signIn\";\n/**\n * One of the database [`Adapter` methods](https://authjs.dev/reference/core/adapters#methods)\n * failed during execution.\n *\n * :::tip\n * If `debug: true` is set, you can check out `[auth][debug]` in the logs to learn more about the failed adapter method execution.\n * @example\n * ```sh\n * [auth][debug]: adapter_getUserByEmail\n * { \"args\": [undefined] }\n * ```\n * :::\n */\nclass AdapterError extends AuthError {\n}\nAdapterError.type = \"AdapterError\";\n/**\n * Thrown when the execution of the [`signIn` callback](https://authjs.dev/reference/core/types#signin) fails\n * or if it returns `false`.\n */\nclass AccessDenied extends AuthError {\n}\nAccessDenied.type = \"AccessDenied\";\n/**\n * This error occurs when the user cannot finish login.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/getting-started/authentication/oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/getting-started/authentication/email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/getting-started/authentication/credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n */\nclass CallbackRouteError extends AuthError {\n}\nCallbackRouteError.type = \"CallbackRouteError\";\n/**\n * Thrown when Auth.js is misconfigured and accidentally tried to require authentication on a custom error page.\n * To prevent an infinite loop, Auth.js will instead render its default error page.\n *\n * To fix this, make sure that the `error` page does not require authentication.\n *\n * Learn more at [Guide: Error pages](https://authjs.dev/guides/pages/error)\n */\nclass ErrorPageLoop extends AuthError {\n}\nErrorPageLoop.type = \"ErrorPageLoop\";\n/**\n * One of the [`events` methods](https://authjs.dev/reference/core/types#eventcallbacks)\n * failed during execution.\n *\n * Make sure that the `events` methods are implemented correctly and uncaught errors are handled.\n *\n * Learn more at [`events`](https://authjs.dev/reference/core/types#eventcallbacks)\n */\nclass EventError extends AuthError {\n}\nEventError.type = \"EventError\";\n/**\n * Thrown when Auth.js is unable to verify a `callbackUrl` value.\n * The browser either disabled cookies or the `callbackUrl` is not a valid URL.\n *\n * Somebody might have tried to manipulate the callback URL that Auth.js uses to redirect the user back to the configured `callbackUrl`/page.\n * This could be a malicious hacker trying to redirect the user to a phishing site.\n * To prevent this, Auth.js checks if the callback URL is valid and throws this error if it is not.\n *\n * There is no action required, but it might be an indicator that somebody is trying to attack your application.\n */\nclass InvalidCallbackUrl extends AuthError {\n}\nInvalidCallbackUrl.type = \"InvalidCallbackUrl\";\n/**\n * Can be thrown from the `authorize` callback of the Credentials provider.\n * When an error occurs during the `authorize` callback, two things can happen:\n * 1. The user is redirected to the signin page, with `error=CredentialsSignin&code=credentials` in the URL. `code` is configurable.\n * 2. If you throw this error in a framework that handles form actions server-side, this error is thrown, instead of redirecting the user, so you'll need to handle.\n */\nclass CredentialsSignin extends Error {\n    constructor() {\n        super(...arguments);\n        /**\n         * The error code that is set in the `code` query parameter of the redirect URL.\n         *\n         *\n         * ⚠ NOTE: This property is going to be included in the URL, so make sure it does not hint at sensitive errors.\n         *\n         * The full error is always logged on the server, if you need to debug.\n         *\n         * Generally, we don't recommend hinting specifically if the user had either a wrong username or password specifically,\n         * try rather something like \"Invalid credentials\".\n         */\n        this.code = \"credentials\";\n    }\n}\nCredentialsSignin.type = \"CredentialsSignin\";\n/**\n * One of the configured OAuth or OIDC providers is missing the `authorization`, `token` or `userinfo`, or `issuer` configuration.\n * To perform OAuth or OIDC sign in, at least one of these endpoints is required.\n *\n * Learn more at [`OAuth2Config`](https://authjs.dev/reference/core/providers#oauth2configprofile) or [Guide: OAuth Provider](https://authjs.dev/guides/configuring-oauth-providers)\n */\nclass InvalidEndpoints extends AuthError {\n}\nInvalidEndpoints.type = \"InvalidEndpoints\";\n/**\n * Thrown when a PKCE, state or nonce OAuth check could not be performed.\n * This could happen if the OAuth provider is configured incorrectly or if the browser is blocking cookies.\n *\n * Learn more at [`checks`](https://authjs.dev/reference/core/providers#checks)\n */\nclass InvalidCheck extends AuthError {\n}\nInvalidCheck.type = \"InvalidCheck\";\n/**\n * Logged on the server when Auth.js could not decode or encode a JWT-based (`strategy: \"jwt\"`) session.\n *\n * Possible causes are either a misconfigured `secret` or a malformed JWT or `encode/decode` methods.\n *\n * :::note\n * When this error is logged, the session cookie is destroyed.\n * :::\n *\n * Learn more at [`secret`](https://authjs.dev/reference/core#secret), [`jwt.encode`](https://authjs.dev/reference/core/jwt#encode-1) or [`jwt.decode`](https://authjs.dev/reference/core/jwt#decode-2) for more information.\n */\nclass JWTSessionError extends AuthError {\n}\nJWTSessionError.type = \"JWTSessionError\";\n/**\n * Thrown if Auth.js is misonfigured. This could happen if you configured an Email provider but did not set up a database adapter,\n * or tried using a `strategy: \"database\"` session without a database adapter.\n * In both cases, make sure you either remove the configuration or add the missing adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/database), [Email provider](https://authjs.dev/getting-started/authentication/email) or [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database-session)\n */\nclass MissingAdapter extends AuthError {\n}\nMissingAdapter.type = \"MissingAdapter\";\n/**\n * Thrown similarily to [`MissingAdapter`](https://authjs.dev/reference/core/errors#missingadapter), but only some required methods were missing.\n *\n * Make sure you either remove the configuration or add the missing methods to the adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/database)\n */\nclass MissingAdapterMethods extends AuthError {\n}\nMissingAdapterMethods.type = \"MissingAdapterMethods\";\n/**\n * Thrown when a Credentials provider is missing the `authorize` configuration.\n * To perform credentials sign in, the `authorize` method is required.\n *\n * Learn more at [Credentials provider](https://authjs.dev/getting-started/authentication/credentials)\n */\nclass MissingAuthorize extends AuthError {\n}\nMissingAuthorize.type = \"MissingAuthorize\";\n/**\n * Auth.js requires a secret or multiple secrets to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET`, `AUTH_SECRET_1`, etc. environment variables.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret) option.\n * :::\n *\n *\n * :::tip\n * To generate a random string, you can use the Auth.js CLI: `npx auth secret`\n * :::\n */\nclass MissingSecret extends AuthError {\n}\nMissingSecret.type = \"MissingSecret\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link OAuth accounts to existing accounts if the user is not signed in.\n *\n * :::tip\n * If you trust the OAuth provider to have verified the user's email address,\n * you can enable automatic account linking by setting [`allowDangerousEmailAccountLinking: true`](https://authjs.dev/reference/core/providers#allowdangerousemailaccountlinking)\n * in the provider configuration.\n * :::\n */\nclass OAuthAccountNotLinked extends SignInError {\n}\nOAuthAccountNotLinked.type = \"OAuthAccountNotLinked\";\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n */\nclass OAuthCallbackError extends SignInError {\n}\nOAuthCallbackError.type = \"OAuthCallbackError\";\n/**\n * This error occurs during an OAuth sign in attempt when the provider's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers#oauth2configprofile) method is not implemented correctly.\n */\nclass OAuthProfileParseError extends AuthError {\n}\nOAuthProfileParseError.type = \"OAuthProfileParseError\";\n/**\n * Logged on the server when Auth.js could not retrieve a session from the database (`strategy: \"database\"`).\n *\n * The database adapter might be misconfigured or the database is not reachable.\n *\n * Learn more at [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n */\nclass SessionTokenError extends AuthError {\n}\nSessionTokenError.type = \"SessionTokenError\";\n/**\n * Happens when login by [OAuth](https://authjs.dev/getting-started/authentication/oauth) could not be started.\n *\n * Possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0](https://www.ietf.org/rfc/rfc6749.html) or the [OIDC](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *   Check the details in the error message.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n */\nclass OAuthSignInError extends SignInError {\n}\nOAuthSignInError.type = \"OAuthSignInError\";\n/**\n * Happens when the login by an [Email provider](https://authjs.dev/getting-started/authentication/email) could not be started.\n *\n * Possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers/email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n */\nclass EmailSignInError extends SignInError {\n}\nEmailSignInError.type = \"EmailSignInError\";\n/**\n * Represents an error that occurs during the sign-out process. This error\n * is logged when there are issues in terminating a user's session, either\n * by failing to delete the session from the database (in database session\n * strategies) or encountering issues during other parts of the sign-out\n * process, such as emitting sign-out events or clearing session cookies.\n *\n * The session cookie(s) are emptied even if this error is logged.\n *\n */\nclass SignOutError extends AuthError {\n}\nSignOutError.type = \"SignOutError\";\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n */\nclass UnknownAction extends AuthError {\n}\nUnknownAction.type = \"UnknownAction\";\n/**\n * Thrown when a Credentials provider is present but the JWT strategy (`strategy: \"jwt\"`) is not enabled.\n *\n * Learn more at [`strategy`](https://authjs.dev/reference/core#strategy) or [Credentials provider](https://authjs.dev/getting-started/authentication/credentials)\n */\nclass UnsupportedStrategy extends AuthError {\n}\nUnsupportedStrategy.type = \"UnsupportedStrategy\";\n/** Thrown when an endpoint was incorrectly called without a provider, or with an unsupported provider. */\nclass InvalidProvider extends AuthError {\n}\nInvalidProvider.type = \"InvalidProvider\";\n/**\n * Thrown when the `trustHost` option was not set to `true`.\n *\n * Auth.js requires the `trustHost` option to be set to `true` since it's relying on the request headers' `host` value.\n *\n * :::note\n * Official Auth.js libraries might attempt to automatically set the `trustHost` option to `true` if the request is coming from a trusted host on a trusted platform.\n * :::\n *\n * Learn more at [`trustHost`](https://authjs.dev/reference/core#trusthost) or [Guide: Deployment](https://authjs.dev/getting-started/deployment)\n */\nclass UntrustedHost extends AuthError {\n}\nUntrustedHost.type = \"UntrustedHost\";\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because the token has expired. Ask the user to log in again.\n */\nclass Verification extends AuthError {\n}\nVerification.type = \"Verification\";\n/**\n * Error for missing CSRF tokens in client-side actions (`signIn`, `signOut`, `useSession#update`).\n * Thrown when actions lack the double submit cookie, essential for CSRF protection.\n *\n * CSRF ([Cross-Site Request Forgery](https://owasp.org/www-community/attacks/csrf))\n * is an attack leveraging authenticated user credentials for unauthorized actions.\n *\n * Double submit cookie pattern, a CSRF defense, requires matching values in a cookie\n * and request parameter. More on this at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/Security/CSRF).\n */\nclass MissingCSRF extends SignInError {\n}\nMissingCSRF.type = \"MissingCSRF\";\nconst clientErrors = new Set([\n    \"CredentialsSignin\",\n    \"OAuthAccountNotLinked\",\n    \"OAuthCallbackError\",\n    \"AccessDenied\",\n    \"Verification\",\n    \"MissingCSRF\",\n    \"AccountNotLinked\",\n    \"WebAuthnVerificationError\",\n]);\n/**\n * Used to only allow sending a certain subset of errors to the client.\n * Errors are always logged on the server, but to prevent leaking sensitive information,\n * only a subset of errors are sent to the client as-is.\n * @internal\n */\nfunction isClientError(error) {\n    if (error instanceof AuthError)\n        return clientErrors.has(error.type);\n    return false;\n}\n/**\n * Thrown when multiple providers have `enableConditionalUI` set to `true`.\n * Only one provider can have this option enabled at a time.\n */\nclass DuplicateConditionalUI extends AuthError {\n}\nDuplicateConditionalUI.type = \"DuplicateConditionalUI\";\n/**\n * Thrown when a WebAuthn provider has `enableConditionalUI` set to `true` but no formField has `webauthn` in its autocomplete param.\n *\n * The `webauthn` autocomplete param is required for conditional UI to work.\n */\nclass MissingWebAuthnAutocomplete extends AuthError {\n}\nMissingWebAuthnAutocomplete.type = \"MissingWebAuthnAutocomplete\";\n/**\n * Thrown when a WebAuthn provider fails to verify a client response.\n */\nclass WebAuthnVerificationError extends AuthError {\n}\nWebAuthnVerificationError.type = \"WebAuthnVerificationError\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link accounts to existing accounts if the user is not signed in.\n */\nclass AccountNotLinked extends SignInError {\n}\nAccountNotLinked.type = \"AccountNotLinked\";\n/**\n * Thrown when an experimental feature is used but not enabled.\n */\nclass ExperimentalFeatureNotEnabled extends AuthError {\n}\nExperimentalFeatureNotEnabled.type = \"ExperimentalFeatureNotEnabled\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   createActionURL: () => (/* reexport safe */ _lib_utils_env_js__WEBPACK_IMPORTED_MODULE_3__.createActionURL),\n/* harmony export */   isAuthAction: () => (/* reexport safe */ _lib_utils_actions_js__WEBPACK_IMPORTED_MODULE_7__.isAuthAction),\n/* harmony export */   raw: () => (/* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.raw),\n/* harmony export */   setEnvDefaults: () => (/* reexport safe */ _lib_utils_env_js__WEBPACK_IMPORTED_MODULE_3__.setEnvDefaults),\n/* harmony export */   skipCSRFCheck: () => (/* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.skipCSRFCheck)\n/* harmony export */ });\n/* harmony import */ var _lib_utils_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/utils/assert.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/assert.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/index.js\");\n/* harmony import */ var _lib_utils_env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/utils/env.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/env.js\");\n/* harmony import */ var _lib_pages_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/pages/index.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/index.js\");\n/* harmony import */ var _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/utils/logger.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/utils/web.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _lib_utils_actions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/utils/actions.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/actions.js\");\n/**\n *\n * :::warning Experimental\n * `@auth/core` is under active development.\n * :::\n *\n * This is the main entry point to the Auth.js library.\n *\n * Based on the {@link https://developer.mozilla.org/en-US/docs/Web/API/Request Request}\n * and {@link https://developer.mozilla.org/en-US/docs/Web/API/Response Response} Web standard APIs.\n * Primarily used to implement [framework](https://authjs.dev/getting-started/integrations)-specific packages,\n * but it can also be used directly.\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/core\n * ```\n *\n * ## Usage\n *\n * ```ts\n * import { Auth } from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await Auth(request, {...})\n *\n * console.log(response instanceof Response) // true\n * ```\n *\n * ## Resources\n *\n * - [Getting started](https://authjs.dev/getting-started)\n * - [Guides](https://authjs.dev/guides)\n *\n * @module @auth/core\n */\n\n\n\n\n\n\n\n\n\n/**\n * Core functionality provided by Auth.js.\n *\n * Receives a standard {@link Request} and returns a {@link Response}.\n *\n * @example\n * ```ts\n * import Auth from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await AuthHandler(request, {\n *   providers: [Google],\n *   secret: \"...\",\n *   trustHost: true,\n * })\n *```\n * @see [Documentation](https://authjs.dev)\n */\nasync function Auth(request, config) {\n    (0,_lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.setLogger)(config.logger, config.debug);\n    const internalRequest = await (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__.toInternalRequest)(request, config);\n    // There was an error parsing the request\n    if (!internalRequest)\n        return Response.json(`Bad request.`, { status: 400 });\n    const warningsOrError = (0,_lib_utils_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertConfig)(internalRequest, config);\n    if (Array.isArray(warningsOrError)) {\n        warningsOrError.forEach(_lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.warn);\n    }\n    else if (warningsOrError) {\n        // If there's an error in the user config, bail out early\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.error(warningsOrError);\n        const htmlPages = new Set([\n            \"signin\",\n            \"signout\",\n            \"error\",\n            \"verify-request\",\n        ]);\n        if (!htmlPages.has(internalRequest.action) ||\n            internalRequest.method !== \"GET\") {\n            const message = \"There was a problem with the server configuration. Check the server logs for more information.\";\n            return Response.json({ message }, { status: 500 });\n        }\n        const { pages, theme } = config;\n        // If this is true, the config required auth on the error page\n        // which could cause a redirect loop\n        const authOnErrorPage = pages?.error &&\n            internalRequest.url.searchParams\n                .get(\"callbackUrl\")\n                ?.startsWith(pages.error);\n        // Either there was no error page configured or the configured one contains infinite redirects\n        if (!pages?.error || authOnErrorPage) {\n            if (authOnErrorPage) {\n                _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_1__.ErrorPageLoop(`The error page ${pages?.error} should not require authentication`));\n            }\n            const page = (0,_lib_pages_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({ theme }).error(\"Configuration\");\n            return (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__.toResponse)(page);\n        }\n        return Response.redirect(`${pages.error}?error=Configuration`);\n    }\n    const isRedirect = request.headers?.has(\"X-Auth-Return-Redirect\");\n    const isRaw = config.raw === _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.raw;\n    try {\n        const internalResponse = await (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.AuthInternal)(internalRequest, config);\n        if (isRaw)\n            return internalResponse;\n        const response = (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__.toResponse)(internalResponse);\n        const url = response.headers.get(\"Location\");\n        if (!isRedirect || !url)\n            return response;\n        return Response.json({ url }, { headers: response.headers });\n    }\n    catch (e) {\n        const error = e;\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.error(error);\n        const isAuthError = error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthError;\n        if (isAuthError && isRaw && !isRedirect)\n            throw error;\n        // If the CSRF check failed for POST/session, return a 400 status code.\n        // We should not redirect to a page as this is an API route\n        if (request.method === \"POST\" && internalRequest.action === \"session\")\n            return Response.json(null, { status: 400 });\n        const isClientSafeErrorType = (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.isClientError)(error);\n        const type = isClientSafeErrorType ? error.type : \"Configuration\";\n        const params = new URLSearchParams({ error: type });\n        if (error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_1__.CredentialsSignin)\n            params.set(\"code\", error.code);\n        const pageKind = (isAuthError && error.kind) || \"error\";\n        const pagePath = config.pages?.[pageKind] ?? `${config.basePath}/${pageKind.toLowerCase()}`;\n        const url = `${internalRequest.url.origin}${pagePath}?${params}`;\n        if (isRedirect)\n            return Response.json({ url });\n        return Response.redirect(url);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/jwt.js":
/*!***************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/jwt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   getToken: () => (/* binding */ getToken)\n/* harmony export */ });\n/* harmony import */ var _panva_hkdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @panva/hkdf */ \"(rsc)/./node_modules/@panva/hkdf/dist/node/esm/index.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var _lib_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/utils/cookie.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\n/**\n *\n *\n * This module contains functions and types\n * to encode and decode {@link https://authjs.dev/concepts/session-strategies#jwt-session JWT}s\n * issued and used by Auth.js.\n *\n * The JWT issued by Auth.js is _encrypted by default_, using the _A256CBC-HS512_ algorithm ({@link https://www.rfc-editor.org/rfc/rfc7518.html#section-5.2.5 JWE}).\n * It uses the `AUTH_SECRET` environment variable or the passed `secret` propery to derive a suitable encryption key.\n *\n * :::info Note\n * Auth.js JWTs are meant to be used by the same app that issued them.\n * If you need JWT authentication for your third-party API, you should rely on your Identity Provider instead.\n * :::\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/core\n * ```\n *\n * You can then import this submodule from `@auth/core/jwt`.\n *\n * ## Usage\n *\n * :::warning Warning\n * This module *will* be refactored/changed. We do not recommend relying on it right now.\n * :::\n *\n *\n * ## Resources\n *\n * - [What is a JWT session strategy](https://authjs.dev/concepts/session-strategies#jwt-session)\n * - [RFC7519 - JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519)\n *\n * @module jwt\n */\n\n\n\n\n\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60; // 30 days\nconst now = () => (Date.now() / 1000) | 0;\nconst alg = \"dir\";\nconst enc = \"A256CBC-HS512\";\n/** Issues a JWT. By default, the JWT is encrypted using \"A256CBC-HS512\". */\nasync function encode(params) {\n    const { token = {}, secret, maxAge = DEFAULT_MAX_AGE, salt } = params;\n    const secrets = Array.isArray(secret) ? secret : [secret];\n    const encryptionSecret = await getDerivedEncryptionKey(enc, secrets[0], salt);\n    const thumbprint = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.calculateJwkThumbprint)({ kty: \"oct\", k: jose__WEBPACK_IMPORTED_MODULE_1__.base64url.encode(encryptionSecret) }, `sha${encryptionSecret.byteLength << 3}`);\n    // @ts-expect-error `jose` allows any object as payload.\n    return await new jose__WEBPACK_IMPORTED_MODULE_1__.EncryptJWT(token)\n        .setProtectedHeader({ alg, enc, kid: thumbprint })\n        .setIssuedAt()\n        .setExpirationTime(now() + maxAge)\n        .setJti(crypto.randomUUID())\n        .encrypt(encryptionSecret);\n}\n/** Decodes a Auth.js issued JWT. */\nasync function decode(params) {\n    const { token, secret, salt } = params;\n    const secrets = Array.isArray(secret) ? secret : [secret];\n    if (!token)\n        return null;\n    const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtDecrypt)(token, async ({ kid, enc }) => {\n        for (const secret of secrets) {\n            const encryptionSecret = await getDerivedEncryptionKey(enc, secret, salt);\n            if (kid === undefined)\n                return encryptionSecret;\n            const thumbprint = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.calculateJwkThumbprint)({ kty: \"oct\", k: jose__WEBPACK_IMPORTED_MODULE_1__.base64url.encode(encryptionSecret) }, `sha${encryptionSecret.byteLength << 3}`);\n            if (kid === thumbprint)\n                return encryptionSecret;\n        }\n        throw new Error(\"no matching decryption secret\");\n    }, {\n        clockTolerance: 15,\n        keyManagementAlgorithms: [alg],\n        contentEncryptionAlgorithms: [enc, \"A256GCM\"],\n    });\n    return payload;\n}\nasync function getToken(params) {\n    const { secureCookie, cookieName = secureCookie\n        ? \"__Secure-authjs.session-token\"\n        : \"authjs.session-token\", decode: _decode = decode, salt = cookieName, secret, logger = console, raw, req, } = params;\n    if (!req)\n        throw new Error(\"Must pass `req` to JWT getToken()\");\n    if (!secret)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.MissingSecret(\"Must pass `secret` if not set to JWT getToken()\");\n    const headers = req.headers instanceof Headers ? req.headers : new Headers(req.headers);\n    const sessionStore = new _lib_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__.SessionStore({ name: cookieName, options: { secure: secureCookie } }, (0,cookie__WEBPACK_IMPORTED_MODULE_4__.parse)(headers.get(\"cookie\") ?? \"\"), logger);\n    let token = sessionStore.value;\n    const authorizationHeader = headers.get(\"authorization\");\n    if (!token && authorizationHeader?.split(\" \")[0] === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token)\n        return null;\n    if (raw)\n        return token;\n    try {\n        return await _decode({ token, secret, salt });\n    }\n    catch {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(enc, keyMaterial, salt) {\n    let length;\n    switch (enc) {\n        case \"A256CBC-HS512\":\n            length = 64;\n            break;\n        case \"A256GCM\":\n            length = 32;\n            break;\n        default:\n            throw new Error(\"Unsupported JWT Content Encryption Algorithm\");\n    }\n    return await (0,_panva_hkdf__WEBPACK_IMPORTED_MODULE_0__.hkdf)(\"sha256\", keyMaterial, salt, `Auth.js Generated Encryption Key (${salt})`, length);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/jwt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/handle-login.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/handle-login.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleLoginOrRegister: () => (/* binding */ handleLoginOrRegister)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/date.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/date.js\");\n\n\n/**\n * This function handles the complex flow of signing users in, and either creating,\n * linking (or not linking) accounts depending on if the user is currently logged\n * in, if they have account already and the authentication mechanism they are using.\n *\n * It prevents insecure behaviour, such as linking OAuth accounts unless a user is\n * signed in and authenticated with an existing valid account.\n *\n * All verification (e.g. OAuth flows or email address verification flows) are\n * done prior to this handler being called to avoid additional complexity in this\n * handler.\n */\nasync function handleLoginOrRegister(sessionToken, _profile, _account, options) {\n    // Input validation\n    if (!_account?.providerAccountId || !_account.type)\n        throw new Error(\"Missing or invalid provider account\");\n    if (![\"email\", \"oauth\", \"oidc\", \"webauthn\"].includes(_account.type))\n        throw new Error(\"Provider not supported\");\n    const { adapter, jwt, events, session: { strategy: sessionStrategy, generateSessionToken }, } = options;\n    // If no adapter is configured then we don't have a database and cannot\n    // persist data; in this mode we just return a dummy session object.\n    if (!adapter) {\n        return { user: _profile, account: _account };\n    }\n    const profile = _profile;\n    let account = _account;\n    const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession, } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                const salt = options.cookies.sessionToken.name;\n                session = await jwt.decode({ ...jwt, token: sessionToken, salt });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            }\n            catch {\n                // If session can't be verified, treat as no session\n            }\n        }\n        else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        // If signing in with an email, check if an account with the same email address exists already\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            // If they are not already signed in as the same user, this flow will\n            // sign them out of the current session and sign them in as the new user\n            if (user?.id !== userByEmail.id && !useJwtSession && sessionToken) {\n                // Delete existing session if they are currently signed in as another user.\n                // This will switch user accounts for the session in cases where the user was\n                // already logged in with a different account.\n                await deleteSession(sessionToken);\n            }\n            // Update emailVerified property on the user object\n            user = await updateUser({\n                id: userByEmail.id,\n                emailVerified: new Date(),\n            });\n            await events.updateUser?.({ user });\n        }\n        else {\n            // Create user account if there isn't one for the email address already\n            user = await createUser({ ...profile, emailVerified: new Date() });\n            await events.createUser?.({ user });\n            isNewUser = true;\n        }\n        // Create new session\n        session = useJwtSession\n            ? {}\n            : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: user.id,\n                expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge),\n            });\n        return { session, user, isNewUser };\n    }\n    else if (account.type === \"webauthn\") {\n        // Check if the account exists\n        const userByAccount = await getUserByAccount({\n            providerAccountId: account.providerAccountId,\n            provider: account.provider,\n        });\n        if (userByAccount) {\n            if (user) {\n                // If the user is already signed in with this account, we don't need to do anything\n                if (userByAccount.id === user.id) {\n                    const currentAccount = { ...account, userId: user.id };\n                    return { session, user, isNewUser, account: currentAccount };\n                }\n                // If the user is currently signed in, but the new account they are signing in\n                // with is already associated with another user, then we cannot link them\n                // and need to return an error.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccountNotLinked(\"The account is already associated with another user\", { provider: account.provider });\n            }\n            // If there is no active session, but the account being signed in with is already\n            // associated with a valid user then create session to sign the user in.\n            session = useJwtSession\n                ? {}\n                : await createSession({\n                    sessionToken: generateSessionToken(),\n                    userId: userByAccount.id,\n                    expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge),\n                });\n            const currentAccount = {\n                ...account,\n                userId: userByAccount.id,\n            };\n            return {\n                session,\n                user: userByAccount,\n                isNewUser,\n                account: currentAccount,\n            };\n        }\n        else {\n            // If the account doesn't exist, we'll create it\n            if (user) {\n                // If the user is already signed in and the account isn't already associated\n                // with another user account then we can go ahead and link the accounts safely.\n                await linkAccount({ ...account, userId: user.id });\n                await events.linkAccount?.({ user, account, profile });\n                // As they are already signed in, we don't need to do anything after linking them\n                const currentAccount = { ...account, userId: user.id };\n                return { session, user, isNewUser, account: currentAccount };\n            }\n            // If the user is not signed in and it looks like a new account then we\n            // check there also isn't an user account already associated with the same\n            // email address as the one in the request.\n            const userByEmail = profile.email\n                ? await getUserByEmail(profile.email)\n                : null;\n            if (userByEmail) {\n                // We don't trust user-provided email addresses, so we don't want to link accounts\n                // if the email address associated with the new account is already associated with\n                // an existing account.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccountNotLinked(\"Another account already exists with the same e-mail address\", { provider: account.provider });\n            }\n            else {\n                // If the current user is not logged in and the profile isn't linked to any user\n                // accounts (by email or provider account id)...\n                //\n                // If no account matching the same [provider].id or .email exists, we can\n                // create a new account for the user, link it to the OAuth account and\n                // create a new session for them so they are signed in with it.\n                user = await createUser({ ...profile });\n            }\n            await events.createUser?.({ user });\n            await linkAccount({ ...account, userId: user.id });\n            await events.linkAccount?.({ user, account, profile });\n            session = useJwtSession\n                ? {}\n                : await createSession({\n                    sessionToken: generateSessionToken(),\n                    userId: user.id,\n                    expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge),\n                });\n            const currentAccount = { ...account, userId: user.id };\n            return { session, user, isNewUser: true, account: currentAccount };\n        }\n    }\n    // If signing in with OAuth account, check to see if the account exists already\n    const userByAccount = await getUserByAccount({\n        providerAccountId: account.providerAccountId,\n        provider: account.provider,\n    });\n    if (userByAccount) {\n        if (user) {\n            // If the user is already signed in with this account, we don't need to do anything\n            if (userByAccount.id === user.id) {\n                return { session, user, isNewUser };\n            }\n            // If the user is currently signed in, but the new account they are signing in\n            // with is already associated with another user, then we cannot link them\n            // and need to return an error.\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthAccountNotLinked(\"The account is already associated with another user\", { provider: account.provider });\n        }\n        // If there is no active session, but the account being signed in with is already\n        // associated with a valid user then create session to sign the user in.\n        session = useJwtSession\n            ? {}\n            : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: userByAccount.id,\n                expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge),\n            });\n        return { session, user: userByAccount, isNewUser };\n    }\n    else {\n        const { provider: p } = options;\n        const { type, provider, providerAccountId, userId, ...tokenSet } = account;\n        const defaults = { providerAccountId, provider, type, userId };\n        account = Object.assign(p.account(tokenSet) ?? {}, defaults);\n        if (user) {\n            // If the user is already signed in and the OAuth account isn't already associated\n            // with another user account then we can go ahead and link the accounts safely.\n            await linkAccount({ ...account, userId: user.id });\n            await events.linkAccount?.({ user, account, profile });\n            // As they are already signed in, we don't need to do anything after linking them\n            return { session, user, isNewUser };\n        }\n        // If the user is not signed in and it looks like a new OAuth account then we\n        // check there also isn't an user account already associated with the same\n        // email address as the one in the OAuth profile.\n        //\n        // This step is often overlooked in OAuth implementations, but covers the following cases:\n        //\n        // 1. It makes it harder for someone to accidentally create two accounts.\n        //    e.g. by signin in with email, then again with an oauth account connected to the same email.\n        // 2. It makes it harder to hijack a user account using a 3rd party OAuth account.\n        //    e.g. by creating an oauth account then changing the email address associated with it.\n        //\n        // It's quite common for services to automatically link accounts in this case, but it's\n        // better practice to require the user to sign in *then* link accounts to be sure\n        // someone is not exploiting a problem with a third party OAuth service.\n        //\n        // OAuth providers should require email address verification to prevent this, but in\n        // practice that is not always the case; this helps protect against that.\n        const userByEmail = profile.email\n            ? await getUserByEmail(profile.email)\n            : null;\n        if (userByEmail) {\n            const provider = options.provider;\n            if (provider?.allowDangerousEmailAccountLinking) {\n                // If you trust the oauth provider to correctly verify email addresses, you can opt-in to\n                // account linking even when the user is not signed-in.\n                user = userByEmail;\n            }\n            else {\n                // We end up here when we don't have an account with the same [provider].id *BUT*\n                // we do already have an account with the same email address as the one in the\n                // OAuth profile the user has just tried to sign in with.\n                //\n                // We don't want to have two accounts with the same email address, and we don't\n                // want to link them in case it's not safe to do so, so instead we prompt the user\n                // to sign in via email to verify their identity and then link the accounts.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthAccountNotLinked(\"Another account already exists with the same e-mail address\", { provider: account.provider });\n            }\n        }\n        else {\n            // If the current user is not logged in and the profile isn't linked to any user\n            // accounts (by email or provider account id)...\n            //\n            // If no account matching the same [provider].id or .email exists, we can\n            // create a new account for the user, link it to the OAuth account and\n            // create a new session for them so they are signed in with it.\n            user = await createUser({ ...profile, emailVerified: null });\n        }\n        await events.createUser?.({ user });\n        await linkAccount({ ...account, userId: user.id });\n        await events.linkAccount?.({ user, account, profile });\n        session = useJwtSession\n            ? {}\n            : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: user.id,\n                expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge),\n            });\n        return { session, user, isNewUser: true };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2NhbGxiYWNrL2hhbmRsZS1sb2dpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkU7QUFDOUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpQ0FBaUMsaURBQWlELElBQUk7QUFDbEc7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtSUFBbUk7QUFDL0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxtQ0FBbUM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix3Q0FBd0MsTUFBTTtBQUM5QztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsdUNBQXVDO0FBQzdFLHdDQUF3QyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsd0RBQVE7QUFDakMsYUFBYTtBQUNiLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0MsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdEQUFnQiwwREFBMEQsNEJBQTRCO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsd0RBQVE7QUFDckMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDZCQUE2QjtBQUNqRSw2Q0FBNkMsd0JBQXdCO0FBQ3JFO0FBQ0EseUNBQXlDO0FBQ3pDLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdEQUFnQixrRUFBa0UsNEJBQTRCO0FBQ3hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsWUFBWTtBQUN0RDtBQUNBLHdDQUF3QyxNQUFNO0FBQzlDLGdDQUFnQyw2QkFBNkI7QUFDN0QseUNBQXlDLHdCQUF3QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHdEQUFRO0FBQ3JDLGlCQUFpQjtBQUNqQixxQ0FBcUM7QUFDckMscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw2REFBcUIsMERBQTBELDRCQUE0QjtBQUNqSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFRO0FBQ2pDLGFBQWE7QUFDYixpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGdCQUFnQixjQUFjO0FBQzlCLGdCQUFnQix5REFBeUQ7QUFDekUsMkJBQTJCO0FBQzNCLHlEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNkJBQTZCO0FBQzdELHlDQUF5Qyx3QkFBd0I7QUFDakU7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNkRBQXFCLGtFQUFrRSw0QkFBNEI7QUFDN0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGlDQUFpQztBQUN2RTtBQUNBLG9DQUFvQyxNQUFNO0FBQzFDLDRCQUE0Qiw2QkFBNkI7QUFDekQscUNBQXFDLHdCQUF3QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFRO0FBQ2pDLGFBQWE7QUFDYixpQkFBaUI7QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvY2FsbGJhY2svaGFuZGxlLWxvZ2luLmpzPzMzNzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWNjb3VudE5vdExpbmtlZCwgT0F1dGhBY2NvdW50Tm90TGlua2VkIH0gZnJvbSBcIi4uLy4uLy4uL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgZnJvbURhdGUgfSBmcm9tIFwiLi4vLi4vdXRpbHMvZGF0ZS5qc1wiO1xuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIGNvbXBsZXggZmxvdyBvZiBzaWduaW5nIHVzZXJzIGluLCBhbmQgZWl0aGVyIGNyZWF0aW5nLFxuICogbGlua2luZyAob3Igbm90IGxpbmtpbmcpIGFjY291bnRzIGRlcGVuZGluZyBvbiBpZiB0aGUgdXNlciBpcyBjdXJyZW50bHkgbG9nZ2VkXG4gKiBpbiwgaWYgdGhleSBoYXZlIGFjY291bnQgYWxyZWFkeSBhbmQgdGhlIGF1dGhlbnRpY2F0aW9uIG1lY2hhbmlzbSB0aGV5IGFyZSB1c2luZy5cbiAqXG4gKiBJdCBwcmV2ZW50cyBpbnNlY3VyZSBiZWhhdmlvdXIsIHN1Y2ggYXMgbGlua2luZyBPQXV0aCBhY2NvdW50cyB1bmxlc3MgYSB1c2VyIGlzXG4gKiBzaWduZWQgaW4gYW5kIGF1dGhlbnRpY2F0ZWQgd2l0aCBhbiBleGlzdGluZyB2YWxpZCBhY2NvdW50LlxuICpcbiAqIEFsbCB2ZXJpZmljYXRpb24gKGUuZy4gT0F1dGggZmxvd3Mgb3IgZW1haWwgYWRkcmVzcyB2ZXJpZmljYXRpb24gZmxvd3MpIGFyZVxuICogZG9uZSBwcmlvciB0byB0aGlzIGhhbmRsZXIgYmVpbmcgY2FsbGVkIHRvIGF2b2lkIGFkZGl0aW9uYWwgY29tcGxleGl0eSBpbiB0aGlzXG4gKiBoYW5kbGVyLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlTG9naW5PclJlZ2lzdGVyKHNlc3Npb25Ub2tlbiwgX3Byb2ZpbGUsIF9hY2NvdW50LCBvcHRpb25zKSB7XG4gICAgLy8gSW5wdXQgdmFsaWRhdGlvblxuICAgIGlmICghX2FjY291bnQ/LnByb3ZpZGVyQWNjb3VudElkIHx8ICFfYWNjb3VudC50eXBlKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIG9yIGludmFsaWQgcHJvdmlkZXIgYWNjb3VudFwiKTtcbiAgICBpZiAoIVtcImVtYWlsXCIsIFwib2F1dGhcIiwgXCJvaWRjXCIsIFwid2ViYXV0aG5cIl0uaW5jbHVkZXMoX2FjY291bnQudHlwZSkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlByb3ZpZGVyIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgY29uc3QgeyBhZGFwdGVyLCBqd3QsIGV2ZW50cywgc2Vzc2lvbjogeyBzdHJhdGVneTogc2Vzc2lvblN0cmF0ZWd5LCBnZW5lcmF0ZVNlc3Npb25Ub2tlbiB9LCB9ID0gb3B0aW9ucztcbiAgICAvLyBJZiBubyBhZGFwdGVyIGlzIGNvbmZpZ3VyZWQgdGhlbiB3ZSBkb24ndCBoYXZlIGEgZGF0YWJhc2UgYW5kIGNhbm5vdFxuICAgIC8vIHBlcnNpc3QgZGF0YTsgaW4gdGhpcyBtb2RlIHdlIGp1c3QgcmV0dXJuIGEgZHVtbXkgc2Vzc2lvbiBvYmplY3QuXG4gICAgaWYgKCFhZGFwdGVyKSB7XG4gICAgICAgIHJldHVybiB7IHVzZXI6IF9wcm9maWxlLCBhY2NvdW50OiBfYWNjb3VudCB9O1xuICAgIH1cbiAgICBjb25zdCBwcm9maWxlID0gX3Byb2ZpbGU7XG4gICAgbGV0IGFjY291bnQgPSBfYWNjb3VudDtcbiAgICBjb25zdCB7IGNyZWF0ZVVzZXIsIHVwZGF0ZVVzZXIsIGdldFVzZXIsIGdldFVzZXJCeUFjY291bnQsIGdldFVzZXJCeUVtYWlsLCBsaW5rQWNjb3VudCwgY3JlYXRlU2Vzc2lvbiwgZ2V0U2Vzc2lvbkFuZFVzZXIsIGRlbGV0ZVNlc3Npb24sIH0gPSBhZGFwdGVyO1xuICAgIGxldCBzZXNzaW9uID0gbnVsbDtcbiAgICBsZXQgdXNlciA9IG51bGw7XG4gICAgbGV0IGlzTmV3VXNlciA9IGZhbHNlO1xuICAgIGNvbnN0IHVzZUp3dFNlc3Npb24gPSBzZXNzaW9uU3RyYXRlZ3kgPT09IFwiand0XCI7XG4gICAgaWYgKHNlc3Npb25Ub2tlbikge1xuICAgICAgICBpZiAodXNlSnd0U2Vzc2lvbikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBzYWx0ID0gb3B0aW9ucy5jb29raWVzLnNlc3Npb25Ub2tlbi5uYW1lO1xuICAgICAgICAgICAgICAgIHNlc3Npb24gPSBhd2FpdCBqd3QuZGVjb2RlKHsgLi4uand0LCB0b2tlbjogc2Vzc2lvblRva2VuLCBzYWx0IH0pO1xuICAgICAgICAgICAgICAgIGlmIChzZXNzaW9uICYmIFwic3ViXCIgaW4gc2Vzc2lvbiAmJiBzZXNzaW9uLnN1Yikge1xuICAgICAgICAgICAgICAgICAgICB1c2VyID0gYXdhaXQgZ2V0VXNlcihzZXNzaW9uLnN1Yik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgICAgIC8vIElmIHNlc3Npb24gY2FuJ3QgYmUgdmVyaWZpZWQsIHRyZWF0IGFzIG5vIHNlc3Npb25cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXJBbmRTZXNzaW9uID0gYXdhaXQgZ2V0U2Vzc2lvbkFuZFVzZXIoc2Vzc2lvblRva2VuKTtcbiAgICAgICAgICAgIGlmICh1c2VyQW5kU2Vzc2lvbikge1xuICAgICAgICAgICAgICAgIHNlc3Npb24gPSB1c2VyQW5kU2Vzc2lvbi5zZXNzaW9uO1xuICAgICAgICAgICAgICAgIHVzZXIgPSB1c2VyQW5kU2Vzc2lvbi51c2VyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChhY2NvdW50LnR5cGUgPT09IFwiZW1haWxcIikge1xuICAgICAgICAvLyBJZiBzaWduaW5nIGluIHdpdGggYW4gZW1haWwsIGNoZWNrIGlmIGFuIGFjY291bnQgd2l0aCB0aGUgc2FtZSBlbWFpbCBhZGRyZXNzIGV4aXN0cyBhbHJlYWR5XG4gICAgICAgIGNvbnN0IHVzZXJCeUVtYWlsID0gYXdhaXQgZ2V0VXNlckJ5RW1haWwocHJvZmlsZS5lbWFpbCk7XG4gICAgICAgIGlmICh1c2VyQnlFbWFpbCkge1xuICAgICAgICAgICAgLy8gSWYgdGhleSBhcmUgbm90IGFscmVhZHkgc2lnbmVkIGluIGFzIHRoZSBzYW1lIHVzZXIsIHRoaXMgZmxvdyB3aWxsXG4gICAgICAgICAgICAvLyBzaWduIHRoZW0gb3V0IG9mIHRoZSBjdXJyZW50IHNlc3Npb24gYW5kIHNpZ24gdGhlbSBpbiBhcyB0aGUgbmV3IHVzZXJcbiAgICAgICAgICAgIGlmICh1c2VyPy5pZCAhPT0gdXNlckJ5RW1haWwuaWQgJiYgIXVzZUp3dFNlc3Npb24gJiYgc2Vzc2lvblRva2VuKSB7XG4gICAgICAgICAgICAgICAgLy8gRGVsZXRlIGV4aXN0aW5nIHNlc3Npb24gaWYgdGhleSBhcmUgY3VycmVudGx5IHNpZ25lZCBpbiBhcyBhbm90aGVyIHVzZXIuXG4gICAgICAgICAgICAgICAgLy8gVGhpcyB3aWxsIHN3aXRjaCB1c2VyIGFjY291bnRzIGZvciB0aGUgc2Vzc2lvbiBpbiBjYXNlcyB3aGVyZSB0aGUgdXNlciB3YXNcbiAgICAgICAgICAgICAgICAvLyBhbHJlYWR5IGxvZ2dlZCBpbiB3aXRoIGEgZGlmZmVyZW50IGFjY291bnQuXG4gICAgICAgICAgICAgICAgYXdhaXQgZGVsZXRlU2Vzc2lvbihzZXNzaW9uVG9rZW4pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVXBkYXRlIGVtYWlsVmVyaWZpZWQgcHJvcGVydHkgb24gdGhlIHVzZXIgb2JqZWN0XG4gICAgICAgICAgICB1c2VyID0gYXdhaXQgdXBkYXRlVXNlcih7XG4gICAgICAgICAgICAgICAgaWQ6IHVzZXJCeUVtYWlsLmlkLFxuICAgICAgICAgICAgICAgIGVtYWlsVmVyaWZpZWQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGF3YWl0IGV2ZW50cy51cGRhdGVVc2VyPy4oeyB1c2VyIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIHVzZXIgYWNjb3VudCBpZiB0aGVyZSBpc24ndCBvbmUgZm9yIHRoZSBlbWFpbCBhZGRyZXNzIGFscmVhZHlcbiAgICAgICAgICAgIHVzZXIgPSBhd2FpdCBjcmVhdGVVc2VyKHsgLi4ucHJvZmlsZSwgZW1haWxWZXJpZmllZDogbmV3IERhdGUoKSB9KTtcbiAgICAgICAgICAgIGF3YWl0IGV2ZW50cy5jcmVhdGVVc2VyPy4oeyB1c2VyIH0pO1xuICAgICAgICAgICAgaXNOZXdVc2VyID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDcmVhdGUgbmV3IHNlc3Npb25cbiAgICAgICAgc2Vzc2lvbiA9IHVzZUp3dFNlc3Npb25cbiAgICAgICAgICAgID8ge31cbiAgICAgICAgICAgIDogYXdhaXQgY3JlYXRlU2Vzc2lvbih7XG4gICAgICAgICAgICAgICAgc2Vzc2lvblRva2VuOiBnZW5lcmF0ZVNlc3Npb25Ub2tlbigpLFxuICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci5pZCxcbiAgICAgICAgICAgICAgICBleHBpcmVzOiBmcm9tRGF0ZShvcHRpb25zLnNlc3Npb24ubWF4QWdlKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4geyBzZXNzaW9uLCB1c2VyLCBpc05ld1VzZXIgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoYWNjb3VudC50eXBlID09PSBcIndlYmF1dGhuXCIpIHtcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGFjY291bnQgZXhpc3RzXG4gICAgICAgIGNvbnN0IHVzZXJCeUFjY291bnQgPSBhd2FpdCBnZXRVc2VyQnlBY2NvdW50KHtcbiAgICAgICAgICAgIHByb3ZpZGVyQWNjb3VudElkOiBhY2NvdW50LnByb3ZpZGVyQWNjb3VudElkLFxuICAgICAgICAgICAgcHJvdmlkZXI6IGFjY291bnQucHJvdmlkZXIsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodXNlckJ5QWNjb3VudCkge1xuICAgICAgICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBpcyBhbHJlYWR5IHNpZ25lZCBpbiB3aXRoIHRoaXMgYWNjb3VudCwgd2UgZG9uJ3QgbmVlZCB0byBkbyBhbnl0aGluZ1xuICAgICAgICAgICAgICAgIGlmICh1c2VyQnlBY2NvdW50LmlkID09PSB1c2VyLmlkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRBY2NvdW50ID0geyAuLi5hY2NvdW50LCB1c2VySWQ6IHVzZXIuaWQgfTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgc2Vzc2lvbiwgdXNlciwgaXNOZXdVc2VyLCBhY2NvdW50OiBjdXJyZW50QWNjb3VudCB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBpcyBjdXJyZW50bHkgc2lnbmVkIGluLCBidXQgdGhlIG5ldyBhY2NvdW50IHRoZXkgYXJlIHNpZ25pbmcgaW5cbiAgICAgICAgICAgICAgICAvLyB3aXRoIGlzIGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIGFub3RoZXIgdXNlciwgdGhlbiB3ZSBjYW5ub3QgbGluayB0aGVtXG4gICAgICAgICAgICAgICAgLy8gYW5kIG5lZWQgdG8gcmV0dXJuIGFuIGVycm9yLlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBBY2NvdW50Tm90TGlua2VkKFwiVGhlIGFjY291bnQgaXMgYWxyZWFkeSBhc3NvY2lhdGVkIHdpdGggYW5vdGhlciB1c2VyXCIsIHsgcHJvdmlkZXI6IGFjY291bnQucHJvdmlkZXIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBJZiB0aGVyZSBpcyBubyBhY3RpdmUgc2Vzc2lvbiwgYnV0IHRoZSBhY2NvdW50IGJlaW5nIHNpZ25lZCBpbiB3aXRoIGlzIGFscmVhZHlcbiAgICAgICAgICAgIC8vIGFzc29jaWF0ZWQgd2l0aCBhIHZhbGlkIHVzZXIgdGhlbiBjcmVhdGUgc2Vzc2lvbiB0byBzaWduIHRoZSB1c2VyIGluLlxuICAgICAgICAgICAgc2Vzc2lvbiA9IHVzZUp3dFNlc3Npb25cbiAgICAgICAgICAgICAgICA/IHt9XG4gICAgICAgICAgICAgICAgOiBhd2FpdCBjcmVhdGVTZXNzaW9uKHtcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblRva2VuOiBnZW5lcmF0ZVNlc3Npb25Ub2tlbigpLFxuICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJCeUFjY291bnQuaWQsXG4gICAgICAgICAgICAgICAgICAgIGV4cGlyZXM6IGZyb21EYXRlKG9wdGlvbnMuc2Vzc2lvbi5tYXhBZ2UpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgY3VycmVudEFjY291bnQgPSB7XG4gICAgICAgICAgICAgICAgLi4uYWNjb3VudCxcbiAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJCeUFjY291bnQuaWQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uLFxuICAgICAgICAgICAgICAgIHVzZXI6IHVzZXJCeUFjY291bnQsXG4gICAgICAgICAgICAgICAgaXNOZXdVc2VyLFxuICAgICAgICAgICAgICAgIGFjY291bnQ6IGN1cnJlbnRBY2NvdW50LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIElmIHRoZSBhY2NvdW50IGRvZXNuJ3QgZXhpc3QsIHdlJ2xsIGNyZWF0ZSBpdFxuICAgICAgICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBpcyBhbHJlYWR5IHNpZ25lZCBpbiBhbmQgdGhlIGFjY291bnQgaXNuJ3QgYWxyZWFkeSBhc3NvY2lhdGVkXG4gICAgICAgICAgICAgICAgLy8gd2l0aCBhbm90aGVyIHVzZXIgYWNjb3VudCB0aGVuIHdlIGNhbiBnbyBhaGVhZCBhbmQgbGluayB0aGUgYWNjb3VudHMgc2FmZWx5LlxuICAgICAgICAgICAgICAgIGF3YWl0IGxpbmtBY2NvdW50KHsgLi4uYWNjb3VudCwgdXNlcklkOiB1c2VyLmlkIH0pO1xuICAgICAgICAgICAgICAgIGF3YWl0IGV2ZW50cy5saW5rQWNjb3VudD8uKHsgdXNlciwgYWNjb3VudCwgcHJvZmlsZSB9KTtcbiAgICAgICAgICAgICAgICAvLyBBcyB0aGV5IGFyZSBhbHJlYWR5IHNpZ25lZCBpbiwgd2UgZG9uJ3QgbmVlZCB0byBkbyBhbnl0aGluZyBhZnRlciBsaW5raW5nIHRoZW1cbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50QWNjb3VudCA9IHsgLi4uYWNjb3VudCwgdXNlcklkOiB1c2VyLmlkIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgc2Vzc2lvbiwgdXNlciwgaXNOZXdVc2VyLCBhY2NvdW50OiBjdXJyZW50QWNjb3VudCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSWYgdGhlIHVzZXIgaXMgbm90IHNpZ25lZCBpbiBhbmQgaXQgbG9va3MgbGlrZSBhIG5ldyBhY2NvdW50IHRoZW4gd2VcbiAgICAgICAgICAgIC8vIGNoZWNrIHRoZXJlIGFsc28gaXNuJ3QgYW4gdXNlciBhY2NvdW50IGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIHRoZSBzYW1lXG4gICAgICAgICAgICAvLyBlbWFpbCBhZGRyZXNzIGFzIHRoZSBvbmUgaW4gdGhlIHJlcXVlc3QuXG4gICAgICAgICAgICBjb25zdCB1c2VyQnlFbWFpbCA9IHByb2ZpbGUuZW1haWxcbiAgICAgICAgICAgICAgICA/IGF3YWl0IGdldFVzZXJCeUVtYWlsKHByb2ZpbGUuZW1haWwpXG4gICAgICAgICAgICAgICAgOiBudWxsO1xuICAgICAgICAgICAgaWYgKHVzZXJCeUVtYWlsKSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgZG9uJ3QgdHJ1c3QgdXNlci1wcm92aWRlZCBlbWFpbCBhZGRyZXNzZXMsIHNvIHdlIGRvbid0IHdhbnQgdG8gbGluayBhY2NvdW50c1xuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBlbWFpbCBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgbmV3IGFjY291bnQgaXMgYWxyZWFkeSBhc3NvY2lhdGVkIHdpdGhcbiAgICAgICAgICAgICAgICAvLyBhbiBleGlzdGluZyBhY2NvdW50LlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBBY2NvdW50Tm90TGlua2VkKFwiQW5vdGhlciBhY2NvdW50IGFscmVhZHkgZXhpc3RzIHdpdGggdGhlIHNhbWUgZS1tYWlsIGFkZHJlc3NcIiwgeyBwcm92aWRlcjogYWNjb3VudC5wcm92aWRlciB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBjdXJyZW50IHVzZXIgaXMgbm90IGxvZ2dlZCBpbiBhbmQgdGhlIHByb2ZpbGUgaXNuJ3QgbGlua2VkIHRvIGFueSB1c2VyXG4gICAgICAgICAgICAgICAgLy8gYWNjb3VudHMgKGJ5IGVtYWlsIG9yIHByb3ZpZGVyIGFjY291bnQgaWQpLi4uXG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAvLyBJZiBubyBhY2NvdW50IG1hdGNoaW5nIHRoZSBzYW1lIFtwcm92aWRlcl0uaWQgb3IgLmVtYWlsIGV4aXN0cywgd2UgY2FuXG4gICAgICAgICAgICAgICAgLy8gY3JlYXRlIGEgbmV3IGFjY291bnQgZm9yIHRoZSB1c2VyLCBsaW5rIGl0IHRvIHRoZSBPQXV0aCBhY2NvdW50IGFuZFxuICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBzZXNzaW9uIGZvciB0aGVtIHNvIHRoZXkgYXJlIHNpZ25lZCBpbiB3aXRoIGl0LlxuICAgICAgICAgICAgICAgIHVzZXIgPSBhd2FpdCBjcmVhdGVVc2VyKHsgLi4ucHJvZmlsZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IGV2ZW50cy5jcmVhdGVVc2VyPy4oeyB1c2VyIH0pO1xuICAgICAgICAgICAgYXdhaXQgbGlua0FjY291bnQoeyAuLi5hY2NvdW50LCB1c2VySWQ6IHVzZXIuaWQgfSk7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMubGlua0FjY291bnQ/Lih7IHVzZXIsIGFjY291bnQsIHByb2ZpbGUgfSk7XG4gICAgICAgICAgICBzZXNzaW9uID0gdXNlSnd0U2Vzc2lvblxuICAgICAgICAgICAgICAgID8ge31cbiAgICAgICAgICAgICAgICA6IGF3YWl0IGNyZWF0ZVNlc3Npb24oe1xuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uVG9rZW46IGdlbmVyYXRlU2Vzc2lvblRva2VuKCksXG4gICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci5pZCxcbiAgICAgICAgICAgICAgICAgICAgZXhwaXJlczogZnJvbURhdGUob3B0aW9ucy5zZXNzaW9uLm1heEFnZSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50QWNjb3VudCA9IHsgLi4uYWNjb3VudCwgdXNlcklkOiB1c2VyLmlkIH07XG4gICAgICAgICAgICByZXR1cm4geyBzZXNzaW9uLCB1c2VyLCBpc05ld1VzZXI6IHRydWUsIGFjY291bnQ6IGN1cnJlbnRBY2NvdW50IH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgc2lnbmluZyBpbiB3aXRoIE9BdXRoIGFjY291bnQsIGNoZWNrIHRvIHNlZSBpZiB0aGUgYWNjb3VudCBleGlzdHMgYWxyZWFkeVxuICAgIGNvbnN0IHVzZXJCeUFjY291bnQgPSBhd2FpdCBnZXRVc2VyQnlBY2NvdW50KHtcbiAgICAgICAgcHJvdmlkZXJBY2NvdW50SWQ6IGFjY291bnQucHJvdmlkZXJBY2NvdW50SWQsXG4gICAgICAgIHByb3ZpZGVyOiBhY2NvdW50LnByb3ZpZGVyLFxuICAgIH0pO1xuICAgIGlmICh1c2VyQnlBY2NvdW50KSB7XG4gICAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBpcyBhbHJlYWR5IHNpZ25lZCBpbiB3aXRoIHRoaXMgYWNjb3VudCwgd2UgZG9uJ3QgbmVlZCB0byBkbyBhbnl0aGluZ1xuICAgICAgICAgICAgaWYgKHVzZXJCeUFjY291bnQuaWQgPT09IHVzZXIuaWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBzZXNzaW9uLCB1c2VyLCBpc05ld1VzZXIgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIHRoZSB1c2VyIGlzIGN1cnJlbnRseSBzaWduZWQgaW4sIGJ1dCB0aGUgbmV3IGFjY291bnQgdGhleSBhcmUgc2lnbmluZyBpblxuICAgICAgICAgICAgLy8gd2l0aCBpcyBhbHJlYWR5IGFzc29jaWF0ZWQgd2l0aCBhbm90aGVyIHVzZXIsIHRoZW4gd2UgY2Fubm90IGxpbmsgdGhlbVxuICAgICAgICAgICAgLy8gYW5kIG5lZWQgdG8gcmV0dXJuIGFuIGVycm9yLlxuICAgICAgICAgICAgdGhyb3cgbmV3IE9BdXRoQWNjb3VudE5vdExpbmtlZChcIlRoZSBhY2NvdW50IGlzIGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIGFub3RoZXIgdXNlclwiLCB7IHByb3ZpZGVyOiBhY2NvdW50LnByb3ZpZGVyIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoZXJlIGlzIG5vIGFjdGl2ZSBzZXNzaW9uLCBidXQgdGhlIGFjY291bnQgYmVpbmcgc2lnbmVkIGluIHdpdGggaXMgYWxyZWFkeVxuICAgICAgICAvLyBhc3NvY2lhdGVkIHdpdGggYSB2YWxpZCB1c2VyIHRoZW4gY3JlYXRlIHNlc3Npb24gdG8gc2lnbiB0aGUgdXNlciBpbi5cbiAgICAgICAgc2Vzc2lvbiA9IHVzZUp3dFNlc3Npb25cbiAgICAgICAgICAgID8ge31cbiAgICAgICAgICAgIDogYXdhaXQgY3JlYXRlU2Vzc2lvbih7XG4gICAgICAgICAgICAgICAgc2Vzc2lvblRva2VuOiBnZW5lcmF0ZVNlc3Npb25Ub2tlbigpLFxuICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlckJ5QWNjb3VudC5pZCxcbiAgICAgICAgICAgICAgICBleHBpcmVzOiBmcm9tRGF0ZShvcHRpb25zLnNlc3Npb24ubWF4QWdlKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4geyBzZXNzaW9uLCB1c2VyOiB1c2VyQnlBY2NvdW50LCBpc05ld1VzZXIgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHsgcHJvdmlkZXI6IHAgfSA9IG9wdGlvbnM7XG4gICAgICAgIGNvbnN0IHsgdHlwZSwgcHJvdmlkZXIsIHByb3ZpZGVyQWNjb3VudElkLCB1c2VySWQsIC4uLnRva2VuU2V0IH0gPSBhY2NvdW50O1xuICAgICAgICBjb25zdCBkZWZhdWx0cyA9IHsgcHJvdmlkZXJBY2NvdW50SWQsIHByb3ZpZGVyLCB0eXBlLCB1c2VySWQgfTtcbiAgICAgICAgYWNjb3VudCA9IE9iamVjdC5hc3NpZ24ocC5hY2NvdW50KHRva2VuU2V0KSA/PyB7fSwgZGVmYXVsdHMpO1xuICAgICAgICBpZiAodXNlcikge1xuICAgICAgICAgICAgLy8gSWYgdGhlIHVzZXIgaXMgYWxyZWFkeSBzaWduZWQgaW4gYW5kIHRoZSBPQXV0aCBhY2NvdW50IGlzbid0IGFscmVhZHkgYXNzb2NpYXRlZFxuICAgICAgICAgICAgLy8gd2l0aCBhbm90aGVyIHVzZXIgYWNjb3VudCB0aGVuIHdlIGNhbiBnbyBhaGVhZCBhbmQgbGluayB0aGUgYWNjb3VudHMgc2FmZWx5LlxuICAgICAgICAgICAgYXdhaXQgbGlua0FjY291bnQoeyAuLi5hY2NvdW50LCB1c2VySWQ6IHVzZXIuaWQgfSk7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMubGlua0FjY291bnQ/Lih7IHVzZXIsIGFjY291bnQsIHByb2ZpbGUgfSk7XG4gICAgICAgICAgICAvLyBBcyB0aGV5IGFyZSBhbHJlYWR5IHNpZ25lZCBpbiwgd2UgZG9uJ3QgbmVlZCB0byBkbyBhbnl0aGluZyBhZnRlciBsaW5raW5nIHRoZW1cbiAgICAgICAgICAgIHJldHVybiB7IHNlc3Npb24sIHVzZXIsIGlzTmV3VXNlciB9O1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoZSB1c2VyIGlzIG5vdCBzaWduZWQgaW4gYW5kIGl0IGxvb2tzIGxpa2UgYSBuZXcgT0F1dGggYWNjb3VudCB0aGVuIHdlXG4gICAgICAgIC8vIGNoZWNrIHRoZXJlIGFsc28gaXNuJ3QgYW4gdXNlciBhY2NvdW50IGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIHRoZSBzYW1lXG4gICAgICAgIC8vIGVtYWlsIGFkZHJlc3MgYXMgdGhlIG9uZSBpbiB0aGUgT0F1dGggcHJvZmlsZS5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gVGhpcyBzdGVwIGlzIG9mdGVuIG92ZXJsb29rZWQgaW4gT0F1dGggaW1wbGVtZW50YXRpb25zLCBidXQgY292ZXJzIHRoZSBmb2xsb3dpbmcgY2FzZXM6XG4gICAgICAgIC8vXG4gICAgICAgIC8vIDEuIEl0IG1ha2VzIGl0IGhhcmRlciBmb3Igc29tZW9uZSB0byBhY2NpZGVudGFsbHkgY3JlYXRlIHR3byBhY2NvdW50cy5cbiAgICAgICAgLy8gICAgZS5nLiBieSBzaWduaW4gaW4gd2l0aCBlbWFpbCwgdGhlbiBhZ2FpbiB3aXRoIGFuIG9hdXRoIGFjY291bnQgY29ubmVjdGVkIHRvIHRoZSBzYW1lIGVtYWlsLlxuICAgICAgICAvLyAyLiBJdCBtYWtlcyBpdCBoYXJkZXIgdG8gaGlqYWNrIGEgdXNlciBhY2NvdW50IHVzaW5nIGEgM3JkIHBhcnR5IE9BdXRoIGFjY291bnQuXG4gICAgICAgIC8vICAgIGUuZy4gYnkgY3JlYXRpbmcgYW4gb2F1dGggYWNjb3VudCB0aGVuIGNoYW5naW5nIHRoZSBlbWFpbCBhZGRyZXNzIGFzc29jaWF0ZWQgd2l0aCBpdC5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gSXQncyBxdWl0ZSBjb21tb24gZm9yIHNlcnZpY2VzIHRvIGF1dG9tYXRpY2FsbHkgbGluayBhY2NvdW50cyBpbiB0aGlzIGNhc2UsIGJ1dCBpdCdzXG4gICAgICAgIC8vIGJldHRlciBwcmFjdGljZSB0byByZXF1aXJlIHRoZSB1c2VyIHRvIHNpZ24gaW4gKnRoZW4qIGxpbmsgYWNjb3VudHMgdG8gYmUgc3VyZVxuICAgICAgICAvLyBzb21lb25lIGlzIG5vdCBleHBsb2l0aW5nIGEgcHJvYmxlbSB3aXRoIGEgdGhpcmQgcGFydHkgT0F1dGggc2VydmljZS5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gT0F1dGggcHJvdmlkZXJzIHNob3VsZCByZXF1aXJlIGVtYWlsIGFkZHJlc3MgdmVyaWZpY2F0aW9uIHRvIHByZXZlbnQgdGhpcywgYnV0IGluXG4gICAgICAgIC8vIHByYWN0aWNlIHRoYXQgaXMgbm90IGFsd2F5cyB0aGUgY2FzZTsgdGhpcyBoZWxwcyBwcm90ZWN0IGFnYWluc3QgdGhhdC5cbiAgICAgICAgY29uc3QgdXNlckJ5RW1haWwgPSBwcm9maWxlLmVtYWlsXG4gICAgICAgICAgICA/IGF3YWl0IGdldFVzZXJCeUVtYWlsKHByb2ZpbGUuZW1haWwpXG4gICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIGlmICh1c2VyQnlFbWFpbCkge1xuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBvcHRpb25zLnByb3ZpZGVyO1xuICAgICAgICAgICAgaWYgKHByb3ZpZGVyPy5hbGxvd0Rhbmdlcm91c0VtYWlsQWNjb3VudExpbmtpbmcpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB5b3UgdHJ1c3QgdGhlIG9hdXRoIHByb3ZpZGVyIHRvIGNvcnJlY3RseSB2ZXJpZnkgZW1haWwgYWRkcmVzc2VzLCB5b3UgY2FuIG9wdC1pbiB0b1xuICAgICAgICAgICAgICAgIC8vIGFjY291bnQgbGlua2luZyBldmVuIHdoZW4gdGhlIHVzZXIgaXMgbm90IHNpZ25lZC1pbi5cbiAgICAgICAgICAgICAgICB1c2VyID0gdXNlckJ5RW1haWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBXZSBlbmQgdXAgaGVyZSB3aGVuIHdlIGRvbid0IGhhdmUgYW4gYWNjb3VudCB3aXRoIHRoZSBzYW1lIFtwcm92aWRlcl0uaWQgKkJVVCpcbiAgICAgICAgICAgICAgICAvLyB3ZSBkbyBhbHJlYWR5IGhhdmUgYW4gYWNjb3VudCB3aXRoIHRoZSBzYW1lIGVtYWlsIGFkZHJlc3MgYXMgdGhlIG9uZSBpbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBPQXV0aCBwcm9maWxlIHRoZSB1c2VyIGhhcyBqdXN0IHRyaWVkIHRvIHNpZ24gaW4gd2l0aC5cbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gaGF2ZSB0d28gYWNjb3VudHMgd2l0aCB0aGUgc2FtZSBlbWFpbCBhZGRyZXNzLCBhbmQgd2UgZG9uJ3RcbiAgICAgICAgICAgICAgICAvLyB3YW50IHRvIGxpbmsgdGhlbSBpbiBjYXNlIGl0J3Mgbm90IHNhZmUgdG8gZG8gc28sIHNvIGluc3RlYWQgd2UgcHJvbXB0IHRoZSB1c2VyXG4gICAgICAgICAgICAgICAgLy8gdG8gc2lnbiBpbiB2aWEgZW1haWwgdG8gdmVyaWZ5IHRoZWlyIGlkZW50aXR5IGFuZCB0aGVuIGxpbmsgdGhlIGFjY291bnRzLlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBPQXV0aEFjY291bnROb3RMaW5rZWQoXCJBbm90aGVyIGFjY291bnQgYWxyZWFkeSBleGlzdHMgd2l0aCB0aGUgc2FtZSBlLW1haWwgYWRkcmVzc1wiLCB7IHByb3ZpZGVyOiBhY2NvdW50LnByb3ZpZGVyIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gSWYgdGhlIGN1cnJlbnQgdXNlciBpcyBub3QgbG9nZ2VkIGluIGFuZCB0aGUgcHJvZmlsZSBpc24ndCBsaW5rZWQgdG8gYW55IHVzZXJcbiAgICAgICAgICAgIC8vIGFjY291bnRzIChieSBlbWFpbCBvciBwcm92aWRlciBhY2NvdW50IGlkKS4uLlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIElmIG5vIGFjY291bnQgbWF0Y2hpbmcgdGhlIHNhbWUgW3Byb3ZpZGVyXS5pZCBvciAuZW1haWwgZXhpc3RzLCB3ZSBjYW5cbiAgICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBhY2NvdW50IGZvciB0aGUgdXNlciwgbGluayBpdCB0byB0aGUgT0F1dGggYWNjb3VudCBhbmRcbiAgICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBzZXNzaW9uIGZvciB0aGVtIHNvIHRoZXkgYXJlIHNpZ25lZCBpbiB3aXRoIGl0LlxuICAgICAgICAgICAgdXNlciA9IGF3YWl0IGNyZWF0ZVVzZXIoeyAuLi5wcm9maWxlLCBlbWFpbFZlcmlmaWVkOiBudWxsIH0pO1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IGV2ZW50cy5jcmVhdGVVc2VyPy4oeyB1c2VyIH0pO1xuICAgICAgICBhd2FpdCBsaW5rQWNjb3VudCh7IC4uLmFjY291bnQsIHVzZXJJZDogdXNlci5pZCB9KTtcbiAgICAgICAgYXdhaXQgZXZlbnRzLmxpbmtBY2NvdW50Py4oeyB1c2VyLCBhY2NvdW50LCBwcm9maWxlIH0pO1xuICAgICAgICBzZXNzaW9uID0gdXNlSnd0U2Vzc2lvblxuICAgICAgICAgICAgPyB7fVxuICAgICAgICAgICAgOiBhd2FpdCBjcmVhdGVTZXNzaW9uKHtcbiAgICAgICAgICAgICAgICBzZXNzaW9uVG9rZW46IGdlbmVyYXRlU2Vzc2lvblRva2VuKCksXG4gICAgICAgICAgICAgICAgdXNlcklkOiB1c2VyLmlkLFxuICAgICAgICAgICAgICAgIGV4cGlyZXM6IGZyb21EYXRlKG9wdGlvbnMuc2Vzc2lvbi5tYXhBZ2UpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7IHNlc3Npb24sIHVzZXIsIGlzTmV3VXNlcjogdHJ1ZSB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/handle-login.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callback: () => (/* binding */ callback)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _handle_login_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handle-login.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/handle-login.js\");\n/* harmony import */ var _oauth_callback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oauth/callback.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/callback.js\");\n/* harmony import */ var _oauth_checks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./oauth/checks.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/web.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/webauthn-utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-utils.js\");\n// TODO: Make this file smaller\n\n\n\n\n\n\n/** Handle callbacks from login services */\nasync function callback(request, options, sessionStore, cookies) {\n    if (!options.provider)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(\"Callback route called without provider\");\n    const { query, body, method, headers } = request;\n    const { provider, adapter, url, callbackUrl, pages, jwt, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger, } = options;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    try {\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            const { proxyRedirect, randomState } = (0,_oauth_checks_js__WEBPACK_IMPORTED_MODULE_3__.handleState)(query, provider, options.isOnRedirectProxy);\n            if (proxyRedirect) {\n                logger.debug(\"proxy redirect\", { proxyRedirect, randomState });\n                return { redirect: proxyRedirect };\n            }\n            const authorizationResult = await (0,_oauth_callback_js__WEBPACK_IMPORTED_MODULE_2__.handleOAuth)(query, request.cookies, options, randomState);\n            if (authorizationResult.cookies.length) {\n                cookies.push(...authorizationResult.cookies);\n            }\n            logger.debug(\"authorization result\", authorizationResult);\n            const { user: userFromProvider, account, profile: OAuthProfile, } = authorizationResult;\n            // If we don't have a profile object then either something went wrong\n            // or the user cancelled signing in. We don't know which, so we just\n            // direct the user to the signin page for now. We could do something\n            // else in future.\n            // TODO: Handle user cancelling signin\n            if (!userFromProvider || !account || !OAuthProfile) {\n                return { redirect: `${url}/signin`, cookies };\n            }\n            // Check if user is allowed to sign in\n            // Attempt to get Profile from OAuth provider details before invoking\n            // signIn callback - but if no user object is returned, that is fine\n            // (that just means it's a new user signing in for the first time).\n            let userByAccount;\n            if (adapter) {\n                const { getUserByAccount } = adapter;\n                userByAccount = await getUserByAccount({\n                    providerAccountId: account.providerAccountId,\n                    provider: provider.id,\n                });\n            }\n            const redirect = await handleAuthorized({\n                user: userByAccount ?? userFromProvider,\n                account,\n                profile: OAuthProfile,\n            }, options);\n            if (redirect)\n                return { redirect, cookies };\n            const { user, session, isNewUser } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, userFromProvider, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: user.id?.toString(),\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    profile: OAuthProfile,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\",\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                }\n                else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({ ...jwt, token, salt });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires,\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            }\n            else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires,\n                    },\n                });\n            }\n            await events.signIn?.({\n                user,\n                account,\n                profile: OAuthProfile,\n                isNewUser,\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl })}`,\n                    cookies,\n                };\n            }\n            return { redirect: callbackUrl, cookies };\n        }\n        else if (provider.type === \"email\") {\n            const token = query?.token;\n            const identifier = query?.email;\n            if (!token || !identifier) {\n                const e = new TypeError(\"Missing token or email. The sign-in URL was manually opened without token/identifier or the link was not sent correctly in the email.\", { cause: { hasToken: !!token, hasEmail: !!identifier } });\n                e.name = \"Configuration\";\n                throw e;\n            }\n            const secret = provider.secret ?? options.secret;\n            // @ts-expect-error -- Verified in `assertConfig`.\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_4__.createHash)(`${token}${secret}`),\n            });\n            const hasInvite = !!invite;\n            const expired = invite ? invite.expires.valueOf() < Date.now() : undefined;\n            const invalidInvite = !hasInvite || expired;\n            if (invalidInvite)\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.Verification({ hasInvite, expired });\n            const user = (await adapter.getUserByEmail(identifier)) ?? {\n                id: crypto.randomUUID(),\n                email: identifier,\n                emailVerified: null,\n            };\n            const account = {\n                providerAccountId: user.email,\n                userId: user.id,\n                type: \"email\",\n                provider: provider.id,\n            };\n            const redirect = await handleAuthorized({ user, account }, options);\n            if (redirect)\n                return { redirect, cookies };\n            // Sign user in\n            const { user: loggedInUser, session, isNewUser, } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, user, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: loggedInUser.name,\n                    email: loggedInUser.email,\n                    picture: loggedInUser.image,\n                    sub: loggedInUser.id?.toString(),\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user: loggedInUser,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\",\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                }\n                else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({ ...jwt, token, salt });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires,\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            }\n            else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires,\n                    },\n                });\n            }\n            await events.signIn?.({ user: loggedInUser, account, isNewUser });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl })}`,\n                    cookies,\n                };\n            }\n            // Callback URL is already verified at this point, so safe to use if specified\n            return { redirect: callbackUrl, cookies };\n        }\n        else if (provider.type === \"credentials\" && method === \"POST\") {\n            const credentials = body ?? {};\n            // TODO: Forward the original request as is, instead of reconstructing it\n            Object.entries(query ?? {}).forEach(([k, v]) => url.searchParams.set(k, v));\n            const userFromAuthorize = await provider.authorize(credentials, \n            // prettier-ignore\n            new Request(url, { headers, method, body: JSON.stringify(body) }));\n            const user = userFromAuthorize;\n            if (!user) {\n                console.error(\"Read more at https://errors.authjs.dev/#credentialssignin\");\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.CredentialsSignin();\n            }\n            else\n                user.id = user.id?.toString() ?? crypto.randomUUID();\n            const account = {\n                providerAccountId: user.id,\n                type: \"credentials\",\n                provider: provider.id,\n            };\n            const redirect = await handleAuthorized({ user, account, credentials }, options);\n            if (redirect)\n                return { redirect, cookies };\n            const defaultToken = {\n                name: user.name,\n                email: user.email,\n                picture: user.image,\n                sub: user.id,\n            };\n            const token = await callbacks.jwt({\n                token: defaultToken,\n                user,\n                account,\n                isNewUser: false,\n                trigger: \"signIn\",\n            });\n            // Clear cookies if token is null\n            if (token === null) {\n                cookies.push(...sessionStore.clean());\n            }\n            else {\n                const salt = options.cookies.sessionToken.name;\n                // Encode token\n                const newToken = await jwt.encode({ ...jwt, token, salt });\n                // Set cookie expiry date\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires,\n                });\n                cookies.push(...sessionCookies);\n            }\n            await events.signIn?.({ user, account });\n            return { redirect: callbackUrl, cookies };\n        }\n        else if (provider.type === \"webauthn\" && method === \"POST\") {\n            // Get callback action from request. It should be either \"authenticate\" or \"register\"\n            const action = request.body?.action;\n            if (typeof action !== \"string\" ||\n                (action !== \"authenticate\" && action !== \"register\")) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Invalid action parameter\");\n            }\n            // Return an error if the adapter is missing or if the provider\n            // is not a webauthn provider.\n            const localOptions = (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__.assertInternalOptionsWebAuthn)(options);\n            // Verify request to get user, account and authenticator\n            let user;\n            let account;\n            let authenticator;\n            switch (action) {\n                case \"authenticate\": {\n                    const verified = await (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyAuthenticate)(localOptions, request, cookies);\n                    user = verified.user;\n                    account = verified.account;\n                    break;\n                }\n                case \"register\": {\n                    const verified = await (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyRegister)(options, request, cookies);\n                    user = verified.user;\n                    account = verified.account;\n                    authenticator = verified.authenticator;\n                    break;\n                }\n            }\n            // Check if user is allowed to sign in\n            await handleAuthorized({ user, account }, options);\n            // Sign user in, creating them and their account if needed\n            const { user: loggedInUser, isNewUser, session, account: currentAccount, } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, user, account, options);\n            if (!currentAccount) {\n                // This is mostly for type checking. It should never actually happen.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Error creating or finding account\");\n            }\n            // Create new authenticator if needed\n            if (authenticator && loggedInUser.id) {\n                await localOptions.adapter.createAuthenticator({\n                    ...authenticator,\n                    userId: loggedInUser.id,\n                });\n            }\n            // Do the session registering dance\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: loggedInUser.name,\n                    email: loggedInUser.email,\n                    picture: loggedInUser.image,\n                    sub: loggedInUser.id?.toString(),\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user: loggedInUser,\n                    account: currentAccount,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\",\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                }\n                else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({ ...jwt, token, salt });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires,\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            }\n            else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires,\n                    },\n                });\n            }\n            await events.signIn?.({\n                user: loggedInUser,\n                account: currentAccount,\n                isNewUser,\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl })}`,\n                    cookies,\n                };\n            }\n            // Callback URL is already verified at this point, so safe to use if specified\n            return { redirect: callbackUrl, cookies };\n        }\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(`Callback for provider type (${provider.type}) is not supported`);\n    }\n    catch (e) {\n        if (e instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError)\n            throw e;\n        const error = new _errors_js__WEBPACK_IMPORTED_MODULE_0__.CallbackRouteError(e, { provider: provider.id });\n        logger.debug(\"callback route error details\", { method, query, body });\n        throw error;\n    }\n}\nasync function handleAuthorized(params, config) {\n    let authorized;\n    const { signIn, redirect } = config.callbacks;\n    try {\n        authorized = await signIn(params);\n    }\n    catch (e) {\n        if (e instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError)\n            throw e;\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccessDenied(e);\n    }\n    if (!authorized)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccessDenied(\"AccessDenied\");\n    if (typeof authorized !== \"string\")\n        return;\n    return await redirect({ url: authorized, baseUrl: config.url.origin });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/callback.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/callback.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAndAccount: () => (/* binding */ getUserAndAccount),\n/* harmony export */   handleOAuth: () => (/* binding */ handleOAuth)\n/* harmony export */ });\n/* harmony import */ var _checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checks.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! oauth4webapi */ \"(rsc)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\n\n\n/**\n * Handles the following OAuth steps.\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n * https://openid.net/specs/openid-connect-core-1_0.html#UserInfoRequest\n *\n * @note Although requesting userinfo is not required by the OAuth2.0 spec,\n * we fetch it anyway. This is because we always want a user profile.\n */\nasync function handleOAuth(query, cookies, options, randomState) {\n    const { logger, provider } = options;\n    let as;\n    const { token, userinfo } = provider;\n    // Falls back to authjs.dev if the user only passed params\n    if ((!token?.url || token.url.host === \"authjs.dev\") &&\n        (!userinfo?.url || userinfo.url.host === \"authjs.dev\")) {\n        // We assume that issuer is always defined as this has been asserted earlier\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.discoveryRequest(issuer);\n        const discoveredAs = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!discoveredAs.token_endpoint)\n            throw new TypeError(\"TODO: Authorization server did not provide a token endpoint.\");\n        if (!discoveredAs.userinfo_endpoint)\n            throw new TypeError(\"TODO: Authorization server did not provide a userinfo endpoint.\");\n        as = discoveredAs;\n    }\n    else {\n        as = {\n            issuer: provider.issuer ?? \"https://authjs.dev\", // TODO: review fallback issuer\n            token_endpoint: token?.url.toString(),\n            userinfo_endpoint: userinfo?.url.toString(),\n        };\n    }\n    const client = {\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        ...provider.client,\n    };\n    const resCookies = [];\n    const state = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.state.use(cookies, resCookies, options, randomState);\n    const codeGrantParams = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.validateAuthResponse(as, client, new URLSearchParams(query), provider.checks.includes(\"state\") ? state : oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.skipStateCheck);\n    /** https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1 */\n    if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(codeGrantParams)) {\n        const cause = { providerId: provider.id, ...codeGrantParams };\n        logger.debug(\"OAuthCallbackError\", cause);\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.OAuthCallbackError(\"OAuth Provider returned an error\", cause);\n    }\n    const codeVerifier = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.pkce.use(cookies, resCookies, options);\n    let redirect_uri = provider.callbackUrl;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n    }\n    let codeGrantResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.authorizationCodeGrantRequest(as, client, codeGrantParams, redirect_uri, codeVerifier ?? \"auth\", // TODO: review fallback code verifier,\n    {\n        [oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.customFetch]: (...args) => {\n            if (!provider.checks.includes(\"pkce\") &&\n                args[1]?.body instanceof URLSearchParams) {\n                args[1].body.delete(\"code_verifier\");\n            }\n            return fetch(...args);\n        },\n    });\n    if (provider.token?.conform) {\n        codeGrantResponse =\n            (await provider.token.conform(codeGrantResponse.clone())) ??\n                codeGrantResponse;\n    }\n    let challenges;\n    if ((challenges = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.parseWwwAuthenticateChallenges(codeGrantResponse))) {\n        for (const challenge of challenges) {\n            console.log(\"challenge\", challenge);\n        }\n        throw new Error(\"TODO: Handle www-authenticate challenges as needed\");\n    }\n    let profile = {};\n    let tokens;\n    if (provider.type === \"oidc\") {\n        const nonce = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.nonce.use(cookies, resCookies, options);\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processAuthorizationCodeOpenIDResponse(as, client, codeGrantResponse, nonce ?? oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.expectNoNonce);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(result)) {\n            console.log(\"error\", result);\n            throw new Error(\"TODO: Handle OIDC response body error\");\n        }\n        profile = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.getValidatedIdTokenClaims(result);\n        tokens = result;\n    }\n    else {\n        tokens = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processAuthorizationCodeOAuth2Response(as, client, codeGrantResponse);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(tokens)) {\n            console.log(\"error\", tokens);\n            throw new Error(\"TODO: Handle OAuth 2.0 response body error\");\n        }\n        if (userinfo?.request) {\n            const _profile = await userinfo.request({ tokens, provider });\n            if (_profile instanceof Object)\n                profile = _profile;\n        }\n        else if (userinfo?.url) {\n            const userinfoResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.userInfoRequest(as, client, tokens.access_token);\n            profile = await userinfoResponse.json();\n        }\n        else {\n            throw new TypeError(\"No userinfo endpoint configured\");\n        }\n    }\n    if (tokens.expires_in) {\n        tokens.expires_at =\n            Math.floor(Date.now() / 1000) + Number(tokens.expires_in);\n    }\n    const profileResult = await getUserAndAccount(profile, provider, tokens, logger);\n    return { ...profileResult, profile, cookies: resCookies };\n}\n/**\n * Returns the user and account that is going to be created in the database.\n * @internal\n */\nasync function getUserAndAccount(OAuthProfile, provider, tokens, logger) {\n    try {\n        const userFromProfile = await provider.profile(OAuthProfile, tokens);\n        const user = {\n            ...userFromProfile,\n            id: crypto.randomUUID(),\n            email: userFromProfile.email?.toLowerCase(),\n        };\n        return {\n            user,\n            account: {\n                ...tokens,\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: userFromProfile.id ?? crypto.randomUUID(),\n            },\n        };\n    }\n    catch (e) {\n        // If we didn't get a response either there was a problem with the provider\n        // response *or* the user cancelled the action with the provider.\n        //\n        // Unfortunately, we can't tell which - at least not in a way that works for\n        // all providers, so we return an empty object; the user should then be\n        // redirected back to the sign up page. We log the error to help developers\n        // who might be trying to debug this when configuring a new provider.\n        logger.debug(\"getProfile error details\", OAuthProfile);\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_1__.OAuthProfileParseError(e, { provider: provider.id }));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeState: () => (/* binding */ decodeState),\n/* harmony export */   handleState: () => (/* binding */ handleState),\n/* harmony export */   nonce: () => (/* binding */ nonce),\n/* harmony export */   pkce: () => (/* binding */ pkce),\n/* harmony export */   signCookie: () => (/* binding */ signCookie),\n/* harmony export */   state: () => (/* binding */ state),\n/* harmony export */   webauthnChallenge: () => (/* binding */ webauthnChallenge)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! oauth4webapi */ \"(rsc)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _jwt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../jwt.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/jwt.js\");\n\n\n\n\n/** Returns a signed cookie. */\nasync function signCookie(type, value, maxAge, options, data) {\n    const { cookies, logger } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, { value, maxAge });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    const token = { value };\n    if (type === \"state\" && data)\n        token.data = data;\n    const name = cookies[type].name;\n    return {\n        name,\n        value: await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.encode)({ ...options.jwt, maxAge, token, salt: name }),\n        options: { ...cookies[type].options, expires },\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst pkce = {\n    async create(options) {\n        const code_verifier = oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomCodeVerifier();\n        const value = await oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.calculatePKCECodeChallenge(code_verifier);\n        const maxAge = PKCE_MAX_AGE;\n        const cookie = await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options);\n        return { cookie, value };\n    },\n    /**\n     * Returns code_verifier if the provider is configured to use PKCE,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the code_verifier is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc7636\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce\n     */\n    async use(cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"pkce\"))\n            return;\n        const codeVerifier = cookies?.[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"PKCE code_verifier cookie was missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: codeVerifier,\n            salt: options.cookies.pkceCodeVerifier.name,\n        });\n        if (!value?.value)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"PKCE code_verifier value could not be parsed.\");\n        // Clear the pkce code verifier cookie after use\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: { ...options.cookies.pkceCodeVerifier.options, maxAge: 0 },\n        });\n        return value.value;\n    },\n};\nconst STATE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nfunction decodeState(value) {\n    try {\n        const decoder = new TextDecoder();\n        return JSON.parse(decoder.decode(jose__WEBPACK_IMPORTED_MODULE_0__.base64url.decode(value)));\n    }\n    catch { }\n}\nconst state = {\n    async create(options, data) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\")) {\n            if (data) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State data was provided but the provider is not configured to use state.\");\n            }\n            return;\n        }\n        const encodedState = jose__WEBPACK_IMPORTED_MODULE_0__.base64url.encode(JSON.stringify({ ...data, random: oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomState() }));\n        const maxAge = STATE_MAX_AGE;\n        const cookie = await signCookie(\"state\", encodedState, maxAge, options, data);\n        return { cookie, value: encodedState };\n    },\n    /**\n     * Returns state if the provider is configured to use state,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the state is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n     */\n    async use(cookies, resCookies, options, paramRandom) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\"))\n            return;\n        const state = cookies?.[options.cookies.state.name];\n        if (!state)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State cookie was missing.\");\n        // IDEA: Let the user do something with the returned state\n        const encodedState = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: state,\n            salt: options.cookies.state.name,\n        });\n        if (!encodedState?.value)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State (cookie) value could not be parsed.\");\n        const decodedState = decodeState(encodedState.value);\n        if (!decodedState)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State (encoded) value could not be parsed.\");\n        if (decodedState.random !== paramRandom)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(`Random state values did not match. Expected: ${decodedState.random}. Got: ${paramRandom}`);\n        // Clear the state cookie after use\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: { ...options.cookies.state.options, maxAge: 0 },\n        });\n        return encodedState.value;\n    },\n};\nconst NONCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst nonce = {\n    async create(options) {\n        if (!options.provider.checks.includes(\"nonce\"))\n            return;\n        const value = oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomNonce();\n        const maxAge = NONCE_MAX_AGE;\n        const cookie = await signCookie(\"nonce\", value, maxAge, options);\n        return { cookie, value };\n    },\n    /**\n     * Returns nonce if the provider is configured to use nonce,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the nonce is missing or invalid.\n     * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce\n     */\n    async use(cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"nonce\"))\n            return;\n        const nonce = cookies?.[options.cookies.nonce.name];\n        if (!nonce)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Nonce cookie was missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: nonce,\n            salt: options.cookies.nonce.name,\n        });\n        if (!value?.value)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Nonce value could not be parsed.\");\n        // Clear the nonce cookie after use\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: { ...options.cookies.nonce.options, maxAge: 0 },\n        });\n        return value.value;\n    },\n};\n/**\n * When the authorization flow contains a state, we check if it's a redirect proxy\n * and if so, we return the random state and the original redirect URL.\n */\nfunction handleState(query, provider, isOnRedirectProxy) {\n    let randomState;\n    let proxyRedirect;\n    if (provider.redirectProxyUrl && !query?.state) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Missing state in query, but required for redirect proxy\");\n    }\n    const state = decodeState(query?.state);\n    randomState = state?.random;\n    if (isOnRedirectProxy) {\n        if (!state?.origin)\n            return { randomState };\n        proxyRedirect = `${state.origin}?${new URLSearchParams(query)}`;\n    }\n    return { randomState, proxyRedirect };\n}\nconst WEBAUTHN_CHALLENGE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst webauthnChallenge = {\n    async create(options, challenge, registerData) {\n        const maxAge = WEBAUTHN_CHALLENGE_MAX_AGE;\n        const data = { challenge, registerData };\n        const cookie = await signCookie(\"webauthnChallenge\", JSON.stringify(data), maxAge, options);\n        return { cookie };\n    },\n    /**\n     * Returns challenge if present,\n     */\n    async use(options, cookies, resCookies) {\n        const challenge = cookies?.[options.cookies.webauthnChallenge.name];\n        if (!challenge)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Challenge cookie missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: challenge,\n            salt: options.cookies.webauthnChallenge.name,\n        });\n        if (!value?.value)\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Challenge value could not be parsed.\");\n        // Clear the pkce code verifier cookie after use\n        const cookie = {\n            name: options.cookies.webauthnChallenge.name,\n            value: \"\",\n            options: { ...options.cookies.webauthnChallenge.options, maxAge: 0 },\n        };\n        resCookies.push(cookie);\n        return JSON.parse(value.value);\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2NhbGxiYWNrL29hdXRoL2NoZWNrcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNLO0FBQ21CO0FBQ0Q7QUFDcEQ7QUFDTztBQUNQLFlBQVksa0JBQWtCO0FBQzlCLDJCQUEyQixtQkFBbUIsS0FBSyxlQUFlO0FBQ2xFO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwrQ0FBTSxHQUFHLDJDQUEyQztBQUN6RSxtQkFBbUIsbUNBQW1DO0FBQ3REO0FBQ0E7QUFDQSw4QkFBOEI7QUFDdkI7QUFDUDtBQUNBLDhCQUE4QixvRUFBNEI7QUFDMUQsNEJBQTRCLG9FQUE0QjtBQUN4RDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFdBQVc7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0RBQVk7QUFDbEMsNEJBQTRCLCtDQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHNCQUFzQixvREFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix3REFBd0Q7QUFDL0UsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0JBQStCO0FBQ3hCO0FBQ1A7QUFDQTtBQUNBLHlDQUF5QyxrREFBcUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQixXQUFXO0FBQzNCO0FBQ0E7QUFDQSwwQkFBMEIsb0RBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGtEQUFxQixrQkFBa0IsaUJBQWlCLDZEQUFxQixJQUFJO0FBQzlHO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsV0FBVztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixvREFBWTtBQUNsQztBQUNBLG1DQUFtQywrQ0FBTTtBQUN6QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxzQkFBc0Isb0RBQVk7QUFDbEM7QUFDQTtBQUNBLHNCQUFzQixvREFBWTtBQUNsQztBQUNBLHNCQUFzQixvREFBWSxpREFBaUQsb0JBQW9CLFNBQVMsWUFBWTtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw2Q0FBNkM7QUFDcEUsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0JBQStCO0FBQ3hCO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDZEQUFxQjtBQUMzQztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFdBQVc7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0RBQVk7QUFDbEMsNEJBQTRCLCtDQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHNCQUFzQixvREFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw2Q0FBNkM7QUFDcEUsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvREFBWTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLDJCQUEyQixhQUFhLEdBQUcsMkJBQTJCO0FBQ3RFO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsNENBQTRDO0FBQ3JDO0FBQ1A7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLGlCQUFpQjtBQUNqQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG9EQUFZO0FBQ2xDLDRCQUE0QiwrQ0FBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxzQkFBc0Isb0RBQVk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIseURBQXlEO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvY2FsbGJhY2svb2F1dGgvY2hlY2tzLmpzP2MyNjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgam9zZSBmcm9tIFwiam9zZVwiO1xuaW1wb3J0ICogYXMgbyBmcm9tIFwib2F1dGg0d2ViYXBpXCI7XG5pbXBvcnQgeyBJbnZhbGlkQ2hlY2sgfSBmcm9tIFwiLi4vLi4vLi4vLi4vZXJyb3JzLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGUsIGVuY29kZSB9IGZyb20gXCIuLi8uLi8uLi8uLi9qd3QuanNcIjtcbi8qKiBSZXR1cm5zIGEgc2lnbmVkIGNvb2tpZS4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduQ29va2llKHR5cGUsIHZhbHVlLCBtYXhBZ2UsIG9wdGlvbnMsIGRhdGEpIHtcbiAgICBjb25zdCB7IGNvb2tpZXMsIGxvZ2dlciB9ID0gb3B0aW9ucztcbiAgICBsb2dnZXIuZGVidWcoYENSRUFURV8ke3R5cGUudG9VcHBlckNhc2UoKX1gLCB7IHZhbHVlLCBtYXhBZ2UgfSk7XG4gICAgY29uc3QgZXhwaXJlcyA9IG5ldyBEYXRlKCk7XG4gICAgZXhwaXJlcy5zZXRUaW1lKGV4cGlyZXMuZ2V0VGltZSgpICsgbWF4QWdlICogMTAwMCk7XG4gICAgY29uc3QgdG9rZW4gPSB7IHZhbHVlIH07XG4gICAgaWYgKHR5cGUgPT09IFwic3RhdGVcIiAmJiBkYXRhKVxuICAgICAgICB0b2tlbi5kYXRhID0gZGF0YTtcbiAgICBjb25zdCBuYW1lID0gY29va2llc1t0eXBlXS5uYW1lO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIHZhbHVlOiBhd2FpdCBlbmNvZGUoeyAuLi5vcHRpb25zLmp3dCwgbWF4QWdlLCB0b2tlbiwgc2FsdDogbmFtZSB9KSxcbiAgICAgICAgb3B0aW9uczogeyAuLi5jb29raWVzW3R5cGVdLm9wdGlvbnMsIGV4cGlyZXMgfSxcbiAgICB9O1xufVxuY29uc3QgUEtDRV9NQVhfQUdFID0gNjAgKiAxNTsgLy8gMTUgbWludXRlcyBpbiBzZWNvbmRzXG5leHBvcnQgY29uc3QgcGtjZSA9IHtcbiAgICBhc3luYyBjcmVhdGUob3B0aW9ucykge1xuICAgICAgICBjb25zdCBjb2RlX3ZlcmlmaWVyID0gby5nZW5lcmF0ZVJhbmRvbUNvZGVWZXJpZmllcigpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IG8uY2FsY3VsYXRlUEtDRUNvZGVDaGFsbGVuZ2UoY29kZV92ZXJpZmllcik7XG4gICAgICAgIGNvbnN0IG1heEFnZSA9IFBLQ0VfTUFYX0FHRTtcbiAgICAgICAgY29uc3QgY29va2llID0gYXdhaXQgc2lnbkNvb2tpZShcInBrY2VDb2RlVmVyaWZpZXJcIiwgY29kZV92ZXJpZmllciwgbWF4QWdlLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHsgY29va2llLCB2YWx1ZSB9O1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBjb2RlX3ZlcmlmaWVyIGlmIHRoZSBwcm92aWRlciBpcyBjb25maWd1cmVkIHRvIHVzZSBQS0NFLFxuICAgICAqIGFuZCBjbGVhcnMgdGhlIGNvbnRhaW5lciBjb29raWUgYWZ0ZXJ3YXJkcy5cbiAgICAgKiBBbiBlcnJvciBpcyB0aHJvd24gaWYgdGhlIGNvZGVfdmVyaWZpZXIgaXMgbWlzc2luZyBvciBpbnZhbGlkLlxuICAgICAqIEBzZWUgaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3JmYzc2MzZcbiAgICAgKiBAc2VlIGh0dHBzOi8vZGFuaWVsZmV0dC5kZS8yMDIwLzA1LzE2L3BrY2UtdnMtbm9uY2UtZXF1aXZhbGVudC1vci1ub3QvI3BrY2VcbiAgICAgKi9cbiAgICBhc3luYyB1c2UoY29va2llcywgcmVzQ29va2llcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHByb3ZpZGVyIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoIXByb3ZpZGVyPy5jaGVja3M/LmluY2x1ZGVzKFwicGtjZVwiKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgY29kZVZlcmlmaWVyID0gY29va2llcz8uW29wdGlvbnMuY29va2llcy5wa2NlQ29kZVZlcmlmaWVyLm5hbWVdO1xuICAgICAgICBpZiAoIWNvZGVWZXJpZmllcilcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJQS0NFIGNvZGVfdmVyaWZpZXIgY29va2llIHdhcyBtaXNzaW5nLlwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBkZWNvZGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucy5qd3QsXG4gICAgICAgICAgICB0b2tlbjogY29kZVZlcmlmaWVyLFxuICAgICAgICAgICAgc2FsdDogb3B0aW9ucy5jb29raWVzLnBrY2VDb2RlVmVyaWZpZXIubmFtZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdmFsdWU/LnZhbHVlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIlBLQ0UgY29kZV92ZXJpZmllciB2YWx1ZSBjb3VsZCBub3QgYmUgcGFyc2VkLlwiKTtcbiAgICAgICAgLy8gQ2xlYXIgdGhlIHBrY2UgY29kZSB2ZXJpZmllciBjb29raWUgYWZ0ZXIgdXNlXG4gICAgICAgIHJlc0Nvb2tpZXMucHVzaCh7XG4gICAgICAgICAgICBuYW1lOiBvcHRpb25zLmNvb2tpZXMucGtjZUNvZGVWZXJpZmllci5uYW1lLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBvcHRpb25zOiB7IC4uLm9wdGlvbnMuY29va2llcy5wa2NlQ29kZVZlcmlmaWVyLm9wdGlvbnMsIG1heEFnZTogMCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnZhbHVlO1xuICAgIH0sXG59O1xuY29uc3QgU1RBVEVfTUFYX0FHRSA9IDYwICogMTU7IC8vIDE1IG1pbnV0ZXMgaW4gc2Vjb25kc1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0YXRlKHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkZWNvZGVyLmRlY29kZShqb3NlLmJhc2U2NHVybC5kZWNvZGUodmFsdWUpKSk7XG4gICAgfVxuICAgIGNhdGNoIHsgfVxufVxuZXhwb3J0IGNvbnN0IHN0YXRlID0ge1xuICAgIGFzeW5jIGNyZWF0ZShvcHRpb25zLCBkYXRhKSB7XG4gICAgICAgIGNvbnN0IHsgcHJvdmlkZXIgfSA9IG9wdGlvbnM7XG4gICAgICAgIGlmICghcHJvdmlkZXIuY2hlY2tzLmluY2x1ZGVzKFwic3RhdGVcIikpIHtcbiAgICAgICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIlN0YXRlIGRhdGEgd2FzIHByb3ZpZGVkIGJ1dCB0aGUgcHJvdmlkZXIgaXMgbm90IGNvbmZpZ3VyZWQgdG8gdXNlIHN0YXRlLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbmNvZGVkU3RhdGUgPSBqb3NlLmJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoeyAuLi5kYXRhLCByYW5kb206IG8uZ2VuZXJhdGVSYW5kb21TdGF0ZSgpIH0pKTtcbiAgICAgICAgY29uc3QgbWF4QWdlID0gU1RBVEVfTUFYX0FHRTtcbiAgICAgICAgY29uc3QgY29va2llID0gYXdhaXQgc2lnbkNvb2tpZShcInN0YXRlXCIsIGVuY29kZWRTdGF0ZSwgbWF4QWdlLCBvcHRpb25zLCBkYXRhKTtcbiAgICAgICAgcmV0dXJuIHsgY29va2llLCB2YWx1ZTogZW5jb2RlZFN0YXRlIH07XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHN0YXRlIGlmIHRoZSBwcm92aWRlciBpcyBjb25maWd1cmVkIHRvIHVzZSBzdGF0ZSxcbiAgICAgKiBhbmQgY2xlYXJzIHRoZSBjb250YWluZXIgY29va2llIGFmdGVyd2FyZHMuXG4gICAgICogQW4gZXJyb3IgaXMgdGhyb3duIGlmIHRoZSBzdGF0ZSBpcyBtaXNzaW5nIG9yIGludmFsaWQuXG4gICAgICogQHNlZSBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNjc0OSNzZWN0aW9uLTEwLjEyXG4gICAgICogQHNlZSBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNjc0OSNzZWN0aW9uLTQuMS4xXG4gICAgICovXG4gICAgYXN5bmMgdXNlKGNvb2tpZXMsIHJlc0Nvb2tpZXMsIG9wdGlvbnMsIHBhcmFtUmFuZG9tKSB7XG4gICAgICAgIGNvbnN0IHsgcHJvdmlkZXIgfSA9IG9wdGlvbnM7XG4gICAgICAgIGlmICghcHJvdmlkZXIuY2hlY2tzLmluY2x1ZGVzKFwic3RhdGVcIikpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHN0YXRlID0gY29va2llcz8uW29wdGlvbnMuY29va2llcy5zdGF0ZS5uYW1lXTtcbiAgICAgICAgaWYgKCFzdGF0ZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJTdGF0ZSBjb29raWUgd2FzIG1pc3NpbmcuXCIpO1xuICAgICAgICAvLyBJREVBOiBMZXQgdGhlIHVzZXIgZG8gc29tZXRoaW5nIHdpdGggdGhlIHJldHVybmVkIHN0YXRlXG4gICAgICAgIGNvbnN0IGVuY29kZWRTdGF0ZSA9IGF3YWl0IGRlY29kZSh7XG4gICAgICAgICAgICAuLi5vcHRpb25zLmp3dCxcbiAgICAgICAgICAgIHRva2VuOiBzdGF0ZSxcbiAgICAgICAgICAgIHNhbHQ6IG9wdGlvbnMuY29va2llcy5zdGF0ZS5uYW1lLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFlbmNvZGVkU3RhdGU/LnZhbHVlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIlN0YXRlIChjb29raWUpIHZhbHVlIGNvdWxkIG5vdCBiZSBwYXJzZWQuXCIpO1xuICAgICAgICBjb25zdCBkZWNvZGVkU3RhdGUgPSBkZWNvZGVTdGF0ZShlbmNvZGVkU3RhdGUudmFsdWUpO1xuICAgICAgICBpZiAoIWRlY29kZWRTdGF0ZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJTdGF0ZSAoZW5jb2RlZCkgdmFsdWUgY291bGQgbm90IGJlIHBhcnNlZC5cIik7XG4gICAgICAgIGlmIChkZWNvZGVkU3RhdGUucmFuZG9tICE9PSBwYXJhbVJhbmRvbSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soYFJhbmRvbSBzdGF0ZSB2YWx1ZXMgZGlkIG5vdCBtYXRjaC4gRXhwZWN0ZWQ6ICR7ZGVjb2RlZFN0YXRlLnJhbmRvbX0uIEdvdDogJHtwYXJhbVJhbmRvbX1gKTtcbiAgICAgICAgLy8gQ2xlYXIgdGhlIHN0YXRlIGNvb2tpZSBhZnRlciB1c2VcbiAgICAgICAgcmVzQ29va2llcy5wdXNoKHtcbiAgICAgICAgICAgIG5hbWU6IG9wdGlvbnMuY29va2llcy5zdGF0ZS5uYW1lLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBvcHRpb25zOiB7IC4uLm9wdGlvbnMuY29va2llcy5zdGF0ZS5vcHRpb25zLCBtYXhBZ2U6IDAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBlbmNvZGVkU3RhdGUudmFsdWU7XG4gICAgfSxcbn07XG5jb25zdCBOT05DRV9NQVhfQUdFID0gNjAgKiAxNTsgLy8gMTUgbWludXRlcyBpbiBzZWNvbmRzXG5leHBvcnQgY29uc3Qgbm9uY2UgPSB7XG4gICAgYXN5bmMgY3JlYXRlKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFvcHRpb25zLnByb3ZpZGVyLmNoZWNrcy5pbmNsdWRlcyhcIm5vbmNlXCIpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IG8uZ2VuZXJhdGVSYW5kb21Ob25jZSgpO1xuICAgICAgICBjb25zdCBtYXhBZ2UgPSBOT05DRV9NQVhfQUdFO1xuICAgICAgICBjb25zdCBjb29raWUgPSBhd2FpdCBzaWduQ29va2llKFwibm9uY2VcIiwgdmFsdWUsIG1heEFnZSwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiB7IGNvb2tpZSwgdmFsdWUgfTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIFJldHVybnMgbm9uY2UgaWYgdGhlIHByb3ZpZGVyIGlzIGNvbmZpZ3VyZWQgdG8gdXNlIG5vbmNlLFxuICAgICAqIGFuZCBjbGVhcnMgdGhlIGNvbnRhaW5lciBjb29raWUgYWZ0ZXJ3YXJkcy5cbiAgICAgKiBBbiBlcnJvciBpcyB0aHJvd24gaWYgdGhlIG5vbmNlIGlzIG1pc3Npbmcgb3IgaW52YWxpZC5cbiAgICAgKiBAc2VlIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI05vbmNlTm90ZXNcbiAgICAgKiBAc2VlIGh0dHBzOi8vZGFuaWVsZmV0dC5kZS8yMDIwLzA1LzE2L3BrY2UtdnMtbm9uY2UtZXF1aXZhbGVudC1vci1ub3QvI25vbmNlXG4gICAgICovXG4gICAgYXN5bmMgdXNlKGNvb2tpZXMsIHJlc0Nvb2tpZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBwcm92aWRlciB9ID0gb3B0aW9ucztcbiAgICAgICAgaWYgKCFwcm92aWRlcj8uY2hlY2tzPy5pbmNsdWRlcyhcIm5vbmNlXCIpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBub25jZSA9IGNvb2tpZXM/LltvcHRpb25zLmNvb2tpZXMubm9uY2UubmFtZV07XG4gICAgICAgIGlmICghbm9uY2UpXG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENoZWNrKFwiTm9uY2UgY29va2llIHdhcyBtaXNzaW5nLlwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBkZWNvZGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucy5qd3QsXG4gICAgICAgICAgICB0b2tlbjogbm9uY2UsXG4gICAgICAgICAgICBzYWx0OiBvcHRpb25zLmNvb2tpZXMubm9uY2UubmFtZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdmFsdWU/LnZhbHVlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIk5vbmNlIHZhbHVlIGNvdWxkIG5vdCBiZSBwYXJzZWQuXCIpO1xuICAgICAgICAvLyBDbGVhciB0aGUgbm9uY2UgY29va2llIGFmdGVyIHVzZVxuICAgICAgICByZXNDb29raWVzLnB1c2goe1xuICAgICAgICAgICAgbmFtZTogb3B0aW9ucy5jb29raWVzLm5vbmNlLm5hbWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICAgIG9wdGlvbnM6IHsgLi4ub3B0aW9ucy5jb29raWVzLm5vbmNlLm9wdGlvbnMsIG1heEFnZTogMCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnZhbHVlO1xuICAgIH0sXG59O1xuLyoqXG4gKiBXaGVuIHRoZSBhdXRob3JpemF0aW9uIGZsb3cgY29udGFpbnMgYSBzdGF0ZSwgd2UgY2hlY2sgaWYgaXQncyBhIHJlZGlyZWN0IHByb3h5XG4gKiBhbmQgaWYgc28sIHdlIHJldHVybiB0aGUgcmFuZG9tIHN0YXRlIGFuZCB0aGUgb3JpZ2luYWwgcmVkaXJlY3QgVVJMLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlU3RhdGUocXVlcnksIHByb3ZpZGVyLCBpc09uUmVkaXJlY3RQcm94eSkge1xuICAgIGxldCByYW5kb21TdGF0ZTtcbiAgICBsZXQgcHJveHlSZWRpcmVjdDtcbiAgICBpZiAocHJvdmlkZXIucmVkaXJlY3RQcm94eVVybCAmJiAhcXVlcnk/LnN0YXRlKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJNaXNzaW5nIHN0YXRlIGluIHF1ZXJ5LCBidXQgcmVxdWlyZWQgZm9yIHJlZGlyZWN0IHByb3h5XCIpO1xuICAgIH1cbiAgICBjb25zdCBzdGF0ZSA9IGRlY29kZVN0YXRlKHF1ZXJ5Py5zdGF0ZSk7XG4gICAgcmFuZG9tU3RhdGUgPSBzdGF0ZT8ucmFuZG9tO1xuICAgIGlmIChpc09uUmVkaXJlY3RQcm94eSkge1xuICAgICAgICBpZiAoIXN0YXRlPy5vcmlnaW4pXG4gICAgICAgICAgICByZXR1cm4geyByYW5kb21TdGF0ZSB9O1xuICAgICAgICBwcm94eVJlZGlyZWN0ID0gYCR7c3RhdGUub3JpZ2lufT8ke25ldyBVUkxTZWFyY2hQYXJhbXMocXVlcnkpfWA7XG4gICAgfVxuICAgIHJldHVybiB7IHJhbmRvbVN0YXRlLCBwcm94eVJlZGlyZWN0IH07XG59XG5jb25zdCBXRUJBVVRITl9DSEFMTEVOR0VfTUFYX0FHRSA9IDYwICogMTU7IC8vIDE1IG1pbnV0ZXMgaW4gc2Vjb25kc1xuZXhwb3J0IGNvbnN0IHdlYmF1dGhuQ2hhbGxlbmdlID0ge1xuICAgIGFzeW5jIGNyZWF0ZShvcHRpb25zLCBjaGFsbGVuZ2UsIHJlZ2lzdGVyRGF0YSkge1xuICAgICAgICBjb25zdCBtYXhBZ2UgPSBXRUJBVVRITl9DSEFMTEVOR0VfTUFYX0FHRTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHsgY2hhbGxlbmdlLCByZWdpc3RlckRhdGEgfTtcbiAgICAgICAgY29uc3QgY29va2llID0gYXdhaXQgc2lnbkNvb2tpZShcIndlYmF1dGhuQ2hhbGxlbmdlXCIsIEpTT04uc3RyaW5naWZ5KGRhdGEpLCBtYXhBZ2UsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4geyBjb29raWUgfTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIFJldHVybnMgY2hhbGxlbmdlIGlmIHByZXNlbnQsXG4gICAgICovXG4gICAgYXN5bmMgdXNlKG9wdGlvbnMsIGNvb2tpZXMsIHJlc0Nvb2tpZXMpIHtcbiAgICAgICAgY29uc3QgY2hhbGxlbmdlID0gY29va2llcz8uW29wdGlvbnMuY29va2llcy53ZWJhdXRobkNoYWxsZW5nZS5uYW1lXTtcbiAgICAgICAgaWYgKCFjaGFsbGVuZ2UpXG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENoZWNrKFwiQ2hhbGxlbmdlIGNvb2tpZSBtaXNzaW5nLlwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBkZWNvZGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucy5qd3QsXG4gICAgICAgICAgICB0b2tlbjogY2hhbGxlbmdlLFxuICAgICAgICAgICAgc2FsdDogb3B0aW9ucy5jb29raWVzLndlYmF1dGhuQ2hhbGxlbmdlLm5hbWUsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXZhbHVlPy52YWx1ZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJDaGFsbGVuZ2UgdmFsdWUgY291bGQgbm90IGJlIHBhcnNlZC5cIik7XG4gICAgICAgIC8vIENsZWFyIHRoZSBwa2NlIGNvZGUgdmVyaWZpZXIgY29va2llIGFmdGVyIHVzZVxuICAgICAgICBjb25zdCBjb29raWUgPSB7XG4gICAgICAgICAgICBuYW1lOiBvcHRpb25zLmNvb2tpZXMud2ViYXV0aG5DaGFsbGVuZ2UubmFtZSxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgICAgb3B0aW9uczogeyAuLi5vcHRpb25zLmNvb2tpZXMud2ViYXV0aG5DaGFsbGVuZ2Uub3B0aW9ucywgbWF4QWdlOiAwIH0sXG4gICAgICAgIH07XG4gICAgICAgIHJlc0Nvb2tpZXMucHVzaChjb29raWUpO1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh2YWx1ZS52YWx1ZSk7XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCSRFToken: () => (/* binding */ createCSRFToken),\n/* harmony export */   validateCSRF: () => (/* binding */ validateCSRF)\n/* harmony export */ });\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/web.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\n\n/**\n * Ensure CSRF Token cookie is set for any subsequent requests.\n * Used as part of the strategy for mitigation for CSRF tokens.\n *\n * Creates a cookie like 'next-auth.csrf-token' with the value 'token|hash',\n * where 'token' is the CSRF token and 'hash' is a hash made of the token and\n * the secret, and the two values are joined by a pipe '|'. By storing the\n * value and the hash of the value (with the secret used as a salt) we can\n * verify the cookie was set by the server and not by a malicious attacker.\n *\n * For more details, see the following OWASP links:\n * https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie\n * https://owasp.org/www-chapter-london/assets/slides/David_Johansson-Double_Defeat_of_Double-Submit_Cookie.pdf\n */\nasync function createCSRFToken({ options, cookieValue, isPost, bodyValue, }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${csrfToken}${options.secret}`);\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            // If hash matches then we trust the CSRF token value\n            // If this is a POST request and the CSRF Token in the POST request matches\n            // the cookie we have already verified is the one we have set, then the token is verified!\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return { csrfTokenVerified, csrfToken };\n        }\n    }\n    // New CSRF token\n    const csrfToken = (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(32);\n    const csrfTokenHash = await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${csrfToken}${options.secret}`);\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return { cookie, csrfToken };\n}\nfunction validateCSRF(action, verified) {\n    if (verified)\n        return;\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingCSRF(`CSRF token was missing during an action ${action}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2NhbGxiYWNrL29hdXRoL2NzcmYtdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRTtBQUNiO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQ0FBaUMsMENBQTBDO0FBQ2xGO0FBQ0E7QUFDQSw0Q0FBNEMseURBQVUsSUFBSSxVQUFVLEVBQUUsZUFBZTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBWTtBQUNsQyxnQ0FBZ0MseURBQVUsSUFBSSxVQUFVLEVBQUUsZUFBZTtBQUN6RSxzQkFBc0IsVUFBVSxHQUFHLGNBQWM7QUFDakQsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0EsY0FBYyxtREFBVyw0Q0FBNEMsT0FBTztBQUM1RSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvY2FsbGJhY2svb2F1dGgvY3NyZi10b2tlbi5qcz81ZThlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUhhc2gsIHJhbmRvbVN0cmluZyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy93ZWIuanNcIjtcbmltcG9ydCB7IE1pc3NpbmdDU1JGIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2Vycm9ycy5qc1wiO1xuLyoqXG4gKiBFbnN1cmUgQ1NSRiBUb2tlbiBjb29raWUgaXMgc2V0IGZvciBhbnkgc3Vic2VxdWVudCByZXF1ZXN0cy5cbiAqIFVzZWQgYXMgcGFydCBvZiB0aGUgc3RyYXRlZ3kgZm9yIG1pdGlnYXRpb24gZm9yIENTUkYgdG9rZW5zLlxuICpcbiAqIENyZWF0ZXMgYSBjb29raWUgbGlrZSAnbmV4dC1hdXRoLmNzcmYtdG9rZW4nIHdpdGggdGhlIHZhbHVlICd0b2tlbnxoYXNoJyxcbiAqIHdoZXJlICd0b2tlbicgaXMgdGhlIENTUkYgdG9rZW4gYW5kICdoYXNoJyBpcyBhIGhhc2ggbWFkZSBvZiB0aGUgdG9rZW4gYW5kXG4gKiB0aGUgc2VjcmV0LCBhbmQgdGhlIHR3byB2YWx1ZXMgYXJlIGpvaW5lZCBieSBhIHBpcGUgJ3wnLiBCeSBzdG9yaW5nIHRoZVxuICogdmFsdWUgYW5kIHRoZSBoYXNoIG9mIHRoZSB2YWx1ZSAod2l0aCB0aGUgc2VjcmV0IHVzZWQgYXMgYSBzYWx0KSB3ZSBjYW5cbiAqIHZlcmlmeSB0aGUgY29va2llIHdhcyBzZXQgYnkgdGhlIHNlcnZlciBhbmQgbm90IGJ5IGEgbWFsaWNpb3VzIGF0dGFja2VyLlxuICpcbiAqIEZvciBtb3JlIGRldGFpbHMsIHNlZSB0aGUgZm9sbG93aW5nIE9XQVNQIGxpbmtzOlxuICogaHR0cHM6Ly9jaGVhdHNoZWV0c2VyaWVzLm93YXNwLm9yZy9jaGVhdHNoZWV0cy9Dcm9zcy1TaXRlX1JlcXVlc3RfRm9yZ2VyeV9QcmV2ZW50aW9uX0NoZWF0X1NoZWV0Lmh0bWwjZG91YmxlLXN1Ym1pdC1jb29raWVcbiAqIGh0dHBzOi8vb3dhc3Aub3JnL3d3dy1jaGFwdGVyLWxvbmRvbi9hc3NldHMvc2xpZGVzL0RhdmlkX0pvaGFuc3Nvbi1Eb3VibGVfRGVmZWF0X29mX0RvdWJsZS1TdWJtaXRfQ29va2llLnBkZlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ1NSRlRva2VuKHsgb3B0aW9ucywgY29va2llVmFsdWUsIGlzUG9zdCwgYm9keVZhbHVlLCB9KSB7XG4gICAgaWYgKGNvb2tpZVZhbHVlKSB7XG4gICAgICAgIGNvbnN0IFtjc3JmVG9rZW4sIGNzcmZUb2tlbkhhc2hdID0gY29va2llVmFsdWUuc3BsaXQoXCJ8XCIpO1xuICAgICAgICBjb25zdCBleHBlY3RlZENzcmZUb2tlbkhhc2ggPSBhd2FpdCBjcmVhdGVIYXNoKGAke2NzcmZUb2tlbn0ke29wdGlvbnMuc2VjcmV0fWApO1xuICAgICAgICBpZiAoY3NyZlRva2VuSGFzaCA9PT0gZXhwZWN0ZWRDc3JmVG9rZW5IYXNoKSB7XG4gICAgICAgICAgICAvLyBJZiBoYXNoIG1hdGNoZXMgdGhlbiB3ZSB0cnVzdCB0aGUgQ1NSRiB0b2tlbiB2YWx1ZVxuICAgICAgICAgICAgLy8gSWYgdGhpcyBpcyBhIFBPU1QgcmVxdWVzdCBhbmQgdGhlIENTUkYgVG9rZW4gaW4gdGhlIFBPU1QgcmVxdWVzdCBtYXRjaGVzXG4gICAgICAgICAgICAvLyB0aGUgY29va2llIHdlIGhhdmUgYWxyZWFkeSB2ZXJpZmllZCBpcyB0aGUgb25lIHdlIGhhdmUgc2V0LCB0aGVuIHRoZSB0b2tlbiBpcyB2ZXJpZmllZCFcbiAgICAgICAgICAgIGNvbnN0IGNzcmZUb2tlblZlcmlmaWVkID0gaXNQb3N0ICYmIGNzcmZUb2tlbiA9PT0gYm9keVZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIHsgY3NyZlRva2VuVmVyaWZpZWQsIGNzcmZUb2tlbiB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIE5ldyBDU1JGIHRva2VuXG4gICAgY29uc3QgY3NyZlRva2VuID0gcmFuZG9tU3RyaW5nKDMyKTtcbiAgICBjb25zdCBjc3JmVG9rZW5IYXNoID0gYXdhaXQgY3JlYXRlSGFzaChgJHtjc3JmVG9rZW59JHtvcHRpb25zLnNlY3JldH1gKTtcbiAgICBjb25zdCBjb29raWUgPSBgJHtjc3JmVG9rZW59fCR7Y3NyZlRva2VuSGFzaH1gO1xuICAgIHJldHVybiB7IGNvb2tpZSwgY3NyZlRva2VuIH07XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVDU1JGKGFjdGlvbiwgdmVyaWZpZWQpIHtcbiAgICBpZiAodmVyaWZpZWQpXG4gICAgICAgIHJldHVybjtcbiAgICB0aHJvdyBuZXcgTWlzc2luZ0NTUkYoYENTUkYgdG9rZW4gd2FzIG1pc3NpbmcgZHVyaW5nIGFuIGFjdGlvbiAke2FjdGlvbn1gKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callback: () => (/* reexport safe */ _callback_index_js__WEBPACK_IMPORTED_MODULE_0__.callback),\n/* harmony export */   session: () => (/* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_1__.session),\n/* harmony export */   signIn: () => (/* reexport safe */ _signin_index_js__WEBPACK_IMPORTED_MODULE_2__.signIn),\n/* harmony export */   signOut: () => (/* reexport safe */ _signout_js__WEBPACK_IMPORTED_MODULE_3__.signOut),\n/* harmony export */   webAuthnOptions: () => (/* reexport safe */ _webauthn_options_js__WEBPACK_IMPORTED_MODULE_4__.webAuthnOptions)\n/* harmony export */ });\n/* harmony import */ var _callback_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callback/index.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/index.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/session.js\");\n/* harmony import */ var _signin_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signin/index.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/index.js\");\n/* harmony import */ var _signout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signout.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signout.js\");\n/* harmony import */ var _webauthn_options_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webauthn-options.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/webauthn-options.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDUjtBQUNJO0FBQ0o7QUFDaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2luZGV4LmpzP2ZkMWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY2FsbGJhY2sgfSBmcm9tIFwiLi9jYWxsYmFjay9pbmRleC5qc1wiO1xuZXhwb3J0IHsgc2Vzc2lvbiB9IGZyb20gXCIuL3Nlc3Npb24uanNcIjtcbmV4cG9ydCB7IHNpZ25JbiB9IGZyb20gXCIuL3NpZ25pbi9pbmRleC5qc1wiO1xuZXhwb3J0IHsgc2lnbk91dCB9IGZyb20gXCIuL3NpZ25vdXQuanNcIjtcbmV4cG9ydCB7IHdlYkF1dGhuT3B0aW9ucyB9IGZyb20gXCIuL3dlYmF1dGhuLW9wdGlvbnMuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/session.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/session.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   session: () => (/* binding */ session)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/date.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/date.js\");\n\n\n/** Return a session object filtered via `callbacks.session` */\nasync function session(options, sessionStore, cookies, isUpdate, newSession) {\n    const { adapter, jwt, events, callbacks, logger, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, } = options;\n    const response = {\n        body: null,\n        headers: { \"Content-Type\": \"application/json\" },\n        cookies,\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken)\n        return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            const salt = options.cookies.sessionToken.name;\n            const payload = await jwt.decode({ ...jwt, token: sessionToken, salt });\n            if (!payload)\n                throw new Error(\"Invalid JWT\");\n            // @ts-expect-error\n            const token = await callbacks.jwt({\n                token: payload,\n                ...(isUpdate && { trigger: \"update\" }),\n                session: newSession,\n            });\n            const newExpires = (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(sessionMaxAge);\n            if (token !== null) {\n                // By default, only exposes a limited subset of information to the client\n                // as needed for presentation purposes (e.g. \"you are logged in as...\").\n                const session = {\n                    user: { name: token.name, email: token.email, image: token.picture },\n                    expires: newExpires.toISOString(),\n                };\n                // @ts-expect-error\n                const newSession = await callbacks.session({ session, token });\n                // Return session payload as response\n                response.body = newSession;\n                // Refresh JWT expiry by re-signing it, with an updated expiry date\n                const newToken = await jwt.encode({ ...jwt, token, salt });\n                // Set cookie, to also update expiry date on cookie\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: newExpires,\n                });\n                response.cookies?.push(...sessionCookies);\n                await events.session?.({ session: newSession, token });\n            }\n            else {\n                response.cookies?.push(...sessionStore.clean());\n            }\n        }\n        catch (e) {\n            logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTSessionError(e));\n            // If the JWT is not verifiable remove the broken session cookie(s).\n            response.cookies?.push(...sessionStore.clean());\n        }\n        return response;\n    }\n    // Retrieve session from database\n    try {\n        const { getSessionAndUser, deleteSession, updateSession } = adapter;\n        let userAndSession = await getSessionAndUser(sessionToken);\n        // If session has expired, clean up the database\n        if (userAndSession &&\n            userAndSession.session.expires.valueOf() < Date.now()) {\n            await deleteSession(sessionToken);\n            userAndSession = null;\n        }\n        if (userAndSession) {\n            const { user, session } = userAndSession;\n            const sessionUpdateAge = options.session.updateAge;\n            // Calculate last updated date to throttle write updates to database\n            // Formula: ({expiry date} - sessionMaxAge) + sessionUpdateAge\n            //     e.g. ({expiry date} - 30 days) + 1 hour\n            const sessionIsDueToBeUpdatedDate = session.expires.valueOf() -\n                sessionMaxAge * 1000 +\n                sessionUpdateAge * 1000;\n            const newExpires = (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(sessionMaxAge);\n            // Trigger update of session expiry date and write to database, only\n            // if the session was last updated more than {sessionUpdateAge} ago\n            if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                await updateSession({\n                    sessionToken: sessionToken,\n                    expires: newExpires,\n                });\n            }\n            // Pass Session through to the session callback\n            const sessionPayload = await callbacks.session({\n                // TODO: user already passed below,\n                // remove from session object in https://github.com/nextauthjs/next-auth/pull/9702\n                // @ts-expect-error\n                session: { ...session, user },\n                user,\n                newSession,\n                ...(isUpdate ? { trigger: \"update\" } : {}),\n            });\n            // Return session payload as response\n            response.body = sessionPayload;\n            // Set cookie again to update expiry\n            response.cookies?.push({\n                name: options.cookies.sessionToken.name,\n                value: sessionToken,\n                options: {\n                    ...options.cookies.sessionToken.options,\n                    expires: newExpires,\n                },\n            });\n            // @ts-expect-error\n            await events.session?.({ session: sessionPayload });\n        }\n        else if (sessionToken) {\n            // If `sessionToken` was found set but it's not valid for a session then\n            // remove the sessionToken cookie from browser.\n            response.cookies?.push(...sessionStore.clean());\n        }\n    }\n    catch (e) {\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.SessionTokenError(e));\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/authorization-url.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/authorization-url.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthorizationUrl: () => (/* binding */ getAuthorizationUrl)\n/* harmony export */ });\n/* harmony import */ var _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../callback/oauth/checks.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! oauth4webapi */ \"(rsc)/./node_modules/oauth4webapi/build/index.js\");\n\n\n/**\n * Generates an authorization/request token URL.\n *\n * [OAuth 2](https://www.oauth.com/oauth2-servers/authorization/the-authorization-request/)\n */\nasync function getAuthorizationUrl(query, options) {\n    const { logger, provider } = options;\n    let url = provider.authorization?.url;\n    let as;\n    // Falls back to authjs.dev if the user only passed params\n    if (!url || url.host === \"authjs.dev\") {\n        // If url is undefined, we assume that issuer is always defined\n        // We check this in assert.ts\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_1__.discoveryRequest(issuer);\n        const as = await oauth4webapi__WEBPACK_IMPORTED_MODULE_1__.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!as.authorization_endpoint) {\n            throw new TypeError(\"Authorization server did not provide an authorization endpoint.\");\n        }\n        url = new URL(as.authorization_endpoint);\n    }\n    const authParams = url.searchParams;\n    let redirect_uri = provider.callbackUrl;\n    let data;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n        data = { origin: provider.callbackUrl };\n        logger.debug(\"using redirect proxy\", { redirect_uri, data });\n    }\n    const params = Object.assign({\n        response_type: \"code\",\n        // clientId can technically be undefined, should we check this in assert.ts or rely on the Authorization Server to do it?\n        client_id: provider.clientId,\n        redirect_uri,\n        // @ts-expect-error TODO:\n        ...provider.authorization?.params,\n    }, Object.fromEntries(provider.authorization?.url.searchParams ?? []), query);\n    for (const k in params)\n        authParams.set(k, params[k]);\n    const cookies = [];\n    const state = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.state.create(options, data);\n    if (state) {\n        authParams.set(\"state\", state.value);\n        cookies.push(state.cookie);\n    }\n    if (provider.checks?.includes(\"pkce\")) {\n        if (as && !as.code_challenge_methods_supported?.includes(\"S256\")) {\n            // We assume S256 PKCE support, if the server does not advertise that,\n            // a random `nonce` must be used for CSRF protection.\n            if (provider.type === \"oidc\")\n                provider.checks = [\"nonce\"];\n        }\n        else {\n            const { value, cookie } = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.pkce.create(options);\n            authParams.set(\"code_challenge\", value);\n            authParams.set(\"code_challenge_method\", \"S256\");\n            cookies.push(cookie);\n        }\n    }\n    const nonce = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.nonce.create(options);\n    if (nonce) {\n        authParams.set(\"nonce\", nonce.value);\n        cookies.push(nonce.cookie);\n    }\n    // TODO: This does not work in normalizeOAuth because authorization endpoint can come from discovery\n    // Need to make normalizeOAuth async\n    if (provider.type === \"oidc\" && !url.searchParams.has(\"scope\")) {\n        url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    logger.debug(\"authorization url is ready\", { url, cookies, provider });\n    return { redirect: url.toString(), cookies };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9hdXRob3JpemF0aW9uLXVybC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Q7QUFDcEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxtQkFBbUI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywwREFBa0I7QUFDMUQseUJBQXlCLGtFQUEwQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiwrQ0FBK0Msb0JBQW9CO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDREQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0IsUUFBUSwyREFBVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDREQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCx3QkFBd0I7QUFDekUsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9zaWduaW4vYXV0aG9yaXphdGlvbi11cmwuanM/Mzk5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjaGVja3MgZnJvbSBcIi4uL2NhbGxiYWNrL29hdXRoL2NoZWNrcy5qc1wiO1xuaW1wb3J0ICogYXMgbyBmcm9tIFwib2F1dGg0d2ViYXBpXCI7XG4vKipcbiAqIEdlbmVyYXRlcyBhbiBhdXRob3JpemF0aW9uL3JlcXVlc3QgdG9rZW4gVVJMLlxuICpcbiAqIFtPQXV0aCAyXShodHRwczovL3d3dy5vYXV0aC5jb20vb2F1dGgyLXNlcnZlcnMvYXV0aG9yaXphdGlvbi90aGUtYXV0aG9yaXphdGlvbi1yZXF1ZXN0LylcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEF1dGhvcml6YXRpb25VcmwocXVlcnksIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGxvZ2dlciwgcHJvdmlkZXIgfSA9IG9wdGlvbnM7XG4gICAgbGV0IHVybCA9IHByb3ZpZGVyLmF1dGhvcml6YXRpb24/LnVybDtcbiAgICBsZXQgYXM7XG4gICAgLy8gRmFsbHMgYmFjayB0byBhdXRoanMuZGV2IGlmIHRoZSB1c2VyIG9ubHkgcGFzc2VkIHBhcmFtc1xuICAgIGlmICghdXJsIHx8IHVybC5ob3N0ID09PSBcImF1dGhqcy5kZXZcIikge1xuICAgICAgICAvLyBJZiB1cmwgaXMgdW5kZWZpbmVkLCB3ZSBhc3N1bWUgdGhhdCBpc3N1ZXIgaXMgYWx3YXlzIGRlZmluZWRcbiAgICAgICAgLy8gV2UgY2hlY2sgdGhpcyBpbiBhc3NlcnQudHNcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgY29uc3QgaXNzdWVyID0gbmV3IFVSTChwcm92aWRlci5pc3N1ZXIpO1xuICAgICAgICBjb25zdCBkaXNjb3ZlcnlSZXNwb25zZSA9IGF3YWl0IG8uZGlzY292ZXJ5UmVxdWVzdChpc3N1ZXIpO1xuICAgICAgICBjb25zdCBhcyA9IGF3YWl0IG8ucHJvY2Vzc0Rpc2NvdmVyeVJlc3BvbnNlKGlzc3VlciwgZGlzY292ZXJ5UmVzcG9uc2UpO1xuICAgICAgICBpZiAoIWFzLmF1dGhvcml6YXRpb25fZW5kcG9pbnQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJBdXRob3JpemF0aW9uIHNlcnZlciBkaWQgbm90IHByb3ZpZGUgYW4gYXV0aG9yaXphdGlvbiBlbmRwb2ludC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdXJsID0gbmV3IFVSTChhcy5hdXRob3JpemF0aW9uX2VuZHBvaW50KTtcbiAgICB9XG4gICAgY29uc3QgYXV0aFBhcmFtcyA9IHVybC5zZWFyY2hQYXJhbXM7XG4gICAgbGV0IHJlZGlyZWN0X3VyaSA9IHByb3ZpZGVyLmNhbGxiYWNrVXJsO1xuICAgIGxldCBkYXRhO1xuICAgIGlmICghb3B0aW9ucy5pc09uUmVkaXJlY3RQcm94eSAmJiBwcm92aWRlci5yZWRpcmVjdFByb3h5VXJsKSB7XG4gICAgICAgIHJlZGlyZWN0X3VyaSA9IHByb3ZpZGVyLnJlZGlyZWN0UHJveHlVcmw7XG4gICAgICAgIGRhdGEgPSB7IG9yaWdpbjogcHJvdmlkZXIuY2FsbGJhY2tVcmwgfTtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwidXNpbmcgcmVkaXJlY3QgcHJveHlcIiwgeyByZWRpcmVjdF91cmksIGRhdGEgfSk7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICByZXNwb25zZV90eXBlOiBcImNvZGVcIixcbiAgICAgICAgLy8gY2xpZW50SWQgY2FuIHRlY2huaWNhbGx5IGJlIHVuZGVmaW5lZCwgc2hvdWxkIHdlIGNoZWNrIHRoaXMgaW4gYXNzZXJ0LnRzIG9yIHJlbHkgb24gdGhlIEF1dGhvcml6YXRpb24gU2VydmVyIHRvIGRvIGl0P1xuICAgICAgICBjbGllbnRfaWQ6IHByb3ZpZGVyLmNsaWVudElkLFxuICAgICAgICByZWRpcmVjdF91cmksXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzpcbiAgICAgICAgLi4ucHJvdmlkZXIuYXV0aG9yaXphdGlvbj8ucGFyYW1zLFxuICAgIH0sIE9iamVjdC5mcm9tRW50cmllcyhwcm92aWRlci5hdXRob3JpemF0aW9uPy51cmwuc2VhcmNoUGFyYW1zID8/IFtdKSwgcXVlcnkpO1xuICAgIGZvciAoY29uc3QgayBpbiBwYXJhbXMpXG4gICAgICAgIGF1dGhQYXJhbXMuc2V0KGssIHBhcmFtc1trXSk7XG4gICAgY29uc3QgY29va2llcyA9IFtdO1xuICAgIGNvbnN0IHN0YXRlID0gYXdhaXQgY2hlY2tzLnN0YXRlLmNyZWF0ZShvcHRpb25zLCBkYXRhKTtcbiAgICBpZiAoc3RhdGUpIHtcbiAgICAgICAgYXV0aFBhcmFtcy5zZXQoXCJzdGF0ZVwiLCBzdGF0ZS52YWx1ZSk7XG4gICAgICAgIGNvb2tpZXMucHVzaChzdGF0ZS5jb29raWUpO1xuICAgIH1cbiAgICBpZiAocHJvdmlkZXIuY2hlY2tzPy5pbmNsdWRlcyhcInBrY2VcIikpIHtcbiAgICAgICAgaWYgKGFzICYmICFhcy5jb2RlX2NoYWxsZW5nZV9tZXRob2RzX3N1cHBvcnRlZD8uaW5jbHVkZXMoXCJTMjU2XCIpKSB7XG4gICAgICAgICAgICAvLyBXZSBhc3N1bWUgUzI1NiBQS0NFIHN1cHBvcnQsIGlmIHRoZSBzZXJ2ZXIgZG9lcyBub3QgYWR2ZXJ0aXNlIHRoYXQsXG4gICAgICAgICAgICAvLyBhIHJhbmRvbSBgbm9uY2VgIG11c3QgYmUgdXNlZCBmb3IgQ1NSRiBwcm90ZWN0aW9uLlxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyLnR5cGUgPT09IFwib2lkY1wiKVxuICAgICAgICAgICAgICAgIHByb3ZpZGVyLmNoZWNrcyA9IFtcIm5vbmNlXCJdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgeyB2YWx1ZSwgY29va2llIH0gPSBhd2FpdCBjaGVja3MucGtjZS5jcmVhdGUob3B0aW9ucyk7XG4gICAgICAgICAgICBhdXRoUGFyYW1zLnNldChcImNvZGVfY2hhbGxlbmdlXCIsIHZhbHVlKTtcbiAgICAgICAgICAgIGF1dGhQYXJhbXMuc2V0KFwiY29kZV9jaGFsbGVuZ2VfbWV0aG9kXCIsIFwiUzI1NlwiKTtcbiAgICAgICAgICAgIGNvb2tpZXMucHVzaChjb29raWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG5vbmNlID0gYXdhaXQgY2hlY2tzLm5vbmNlLmNyZWF0ZShvcHRpb25zKTtcbiAgICBpZiAobm9uY2UpIHtcbiAgICAgICAgYXV0aFBhcmFtcy5zZXQoXCJub25jZVwiLCBub25jZS52YWx1ZSk7XG4gICAgICAgIGNvb2tpZXMucHVzaChub25jZS5jb29raWUpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBUaGlzIGRvZXMgbm90IHdvcmsgaW4gbm9ybWFsaXplT0F1dGggYmVjYXVzZSBhdXRob3JpemF0aW9uIGVuZHBvaW50IGNhbiBjb21lIGZyb20gZGlzY292ZXJ5XG4gICAgLy8gTmVlZCB0byBtYWtlIG5vcm1hbGl6ZU9BdXRoIGFzeW5jXG4gICAgaWYgKHByb3ZpZGVyLnR5cGUgPT09IFwib2lkY1wiICYmICF1cmwuc2VhcmNoUGFyYW1zLmhhcyhcInNjb3BlXCIpKSB7XG4gICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KFwic2NvcGVcIiwgXCJvcGVuaWQgcHJvZmlsZSBlbWFpbFwiKTtcbiAgICB9XG4gICAgbG9nZ2VyLmRlYnVnKFwiYXV0aG9yaXphdGlvbiB1cmwgaXMgcmVhZHlcIiwgeyB1cmwsIGNvb2tpZXMsIHByb3ZpZGVyIH0pO1xuICAgIHJldHVybiB7IHJlZGlyZWN0OiB1cmwudG9TdHJpbmcoKSwgY29va2llcyB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/authorization-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signIn: () => (/* binding */ signIn)\n/* harmony export */ });\n/* harmony import */ var _authorization_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authorization-url.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/authorization-url.js\");\n/* harmony import */ var _send_token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./send-token.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/send-token.js\");\n\n\nasync function signIn(request, cookies, options) {\n    const signInUrl = `${options.url.origin}${options.basePath}/signin`;\n    if (!options.provider)\n        return { redirect: signInUrl, cookies };\n    switch (options.provider.type) {\n        case \"oauth\":\n        case \"oidc\": {\n            const { redirect, cookies: authCookies } = await (0,_authorization_url_js__WEBPACK_IMPORTED_MODULE_0__.getAuthorizationUrl)(request.query, options);\n            if (authCookies)\n                cookies.push(...authCookies);\n            return { redirect, cookies };\n        }\n        case \"email\": {\n            const response = await (0,_send_token_js__WEBPACK_IMPORTED_MODULE_1__.sendToken)(request, options);\n            return { ...response, cookies };\n        }\n        default:\n            return { redirect: signInUrl, cookies };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkQ7QUFDakI7QUFDckM7QUFDUCx5QkFBeUIsbUJBQW1CLEVBQUUsaUJBQWlCO0FBQy9EO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQ0FBaUMsUUFBUSwwRUFBbUI7QUFDaEY7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsbUNBQW1DLHlEQUFTO0FBQzVDLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9pbmRleC5qcz9iN2E1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEF1dGhvcml6YXRpb25VcmwgfSBmcm9tIFwiLi9hdXRob3JpemF0aW9uLXVybC5qc1wiO1xuaW1wb3J0IHsgc2VuZFRva2VuIH0gZnJvbSBcIi4vc2VuZC10b2tlbi5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25JbihyZXF1ZXN0LCBjb29raWVzLCBvcHRpb25zKSB7XG4gICAgY29uc3Qgc2lnbkluVXJsID0gYCR7b3B0aW9ucy51cmwub3JpZ2lufSR7b3B0aW9ucy5iYXNlUGF0aH0vc2lnbmluYDtcbiAgICBpZiAoIW9wdGlvbnMucHJvdmlkZXIpXG4gICAgICAgIHJldHVybiB7IHJlZGlyZWN0OiBzaWduSW5VcmwsIGNvb2tpZXMgfTtcbiAgICBzd2l0Y2ggKG9wdGlvbnMucHJvdmlkZXIudHlwZSkge1xuICAgICAgICBjYXNlIFwib2F1dGhcIjpcbiAgICAgICAgY2FzZSBcIm9pZGNcIjoge1xuICAgICAgICAgICAgY29uc3QgeyByZWRpcmVjdCwgY29va2llczogYXV0aENvb2tpZXMgfSA9IGF3YWl0IGdldEF1dGhvcml6YXRpb25VcmwocmVxdWVzdC5xdWVyeSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAoYXV0aENvb2tpZXMpXG4gICAgICAgICAgICAgICAgY29va2llcy5wdXNoKC4uLmF1dGhDb29raWVzKTtcbiAgICAgICAgICAgIHJldHVybiB7IHJlZGlyZWN0LCBjb29raWVzIH07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImVtYWlsXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc2VuZFRva2VuKHJlcXVlc3QsIG9wdGlvbnMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgLi4ucmVzcG9uc2UsIGNvb2tpZXMgfTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHsgcmVkaXJlY3Q6IHNpZ25JblVybCwgY29va2llcyB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/send-token.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/send-token.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendToken: () => (/* binding */ sendToken)\n/* harmony export */ });\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/web.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\n\n/**\n * Starts an e-mail login flow, by generating a token,\n * and sending it to the user's e-mail (with the help of a DB adapter).\n * At the end, it returns a redirect to the `verify-request` page.\n */\nasync function sendToken(request, options) {\n    const { body } = request;\n    const { provider, callbacks, adapter } = options;\n    const normalizer = provider.normalizeIdentifier ?? defaultNormalizer;\n    const email = normalizer(body?.email);\n    const defaultUser = { id: crypto.randomUUID(), email, emailVerified: null };\n    const user = (await adapter.getUserByEmail(email)) ?? defaultUser;\n    const account = {\n        providerAccountId: email,\n        userId: user.id,\n        type: \"email\",\n        provider: provider.id,\n    };\n    let authorized;\n    try {\n        authorized = await callbacks.signIn({\n            user,\n            account,\n            email: { verificationRequest: true },\n        });\n    }\n    catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AccessDenied(e);\n    }\n    if (!authorized)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AccessDenied(\"AccessDenied\");\n    if (typeof authorized === \"string\") {\n        return {\n            redirect: await callbacks.redirect({\n                url: authorized,\n                baseUrl: options.url.origin,\n            }),\n        };\n    }\n    const { callbackUrl, theme } = options;\n    const token = (await provider.generateVerificationToken?.()) ?? (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(32);\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + (provider.maxAge ?? ONE_DAY_IN_SECONDS) * 1000);\n    const secret = provider.secret ?? options.secret;\n    const baseUrl = new URL(options.basePath, options.url.origin);\n    const sendRequest = provider.sendVerificationRequest({\n        identifier: email,\n        token,\n        expires,\n        url: `${baseUrl}/callback/${provider.id}?${new URLSearchParams({\n            callbackUrl,\n            token,\n            email,\n        })}`,\n        provider,\n        theme,\n        request: (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.toRequest)(request),\n    });\n    const createToken = adapter.createVerificationToken?.({\n        identifier: email,\n        token: await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${token}${secret}`),\n        expires,\n    });\n    await Promise.all([sendRequest, createToken]);\n    return {\n        redirect: `${baseUrl}/verify-request?${new URLSearchParams({\n            provider: provider.id,\n            type: provider.type,\n        })}`,\n    };\n}\nfunction defaultNormalizer(email) {\n    if (!email)\n        throw new Error(\"Missing email from request body.\");\n    // Get the first two elements only,\n    // separated by `@` from user input.\n    let [local, domain] = email.toLowerCase().trim().split(\"@\");\n    // The part before \"@\" can contain a \",\"\n    // but we remove it on the domain part\n    domain = domain.split(\",\")[0];\n    return `${local}@${domain}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9zZW5kLXRva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RTtBQUN2QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLE9BQU87QUFDbkIsWUFBWSwrQkFBK0I7QUFDM0M7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMkJBQTJCO0FBQ2hELFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCLG9EQUFZO0FBQzlCO0FBQ0E7QUFDQSxrQkFBa0Isb0RBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakMsb0VBQW9FLDJEQUFZO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsUUFBUSxZQUFZLFlBQVksR0FBRztBQUNuRDtBQUNBO0FBQ0E7QUFDQSxTQUFTLEVBQUU7QUFDWDtBQUNBO0FBQ0EsaUJBQWlCLHdEQUFTO0FBQzFCLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCLHlEQUFVLElBQUksTUFBTSxFQUFFLE9BQU87QUFDbEQ7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHFCQUFxQixRQUFRLGtCQUFrQjtBQUMvQztBQUNBO0FBQ0EsU0FBUyxFQUFFO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsTUFBTSxHQUFHLE9BQU87QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9zZW5kLXRva2VuLmpzPzg5NTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlSGFzaCwgcmFuZG9tU3RyaW5nLCB0b1JlcXVlc3QgfSBmcm9tIFwiLi4vLi4vdXRpbHMvd2ViLmpzXCI7XG5pbXBvcnQgeyBBY2Nlc3NEZW5pZWQgfSBmcm9tIFwiLi4vLi4vLi4vZXJyb3JzLmpzXCI7XG4vKipcbiAqIFN0YXJ0cyBhbiBlLW1haWwgbG9naW4gZmxvdywgYnkgZ2VuZXJhdGluZyBhIHRva2VuLFxuICogYW5kIHNlbmRpbmcgaXQgdG8gdGhlIHVzZXIncyBlLW1haWwgKHdpdGggdGhlIGhlbHAgb2YgYSBEQiBhZGFwdGVyKS5cbiAqIEF0IHRoZSBlbmQsIGl0IHJldHVybnMgYSByZWRpcmVjdCB0byB0aGUgYHZlcmlmeS1yZXF1ZXN0YCBwYWdlLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZFRva2VuKHJlcXVlc3QsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGJvZHkgfSA9IHJlcXVlc3Q7XG4gICAgY29uc3QgeyBwcm92aWRlciwgY2FsbGJhY2tzLCBhZGFwdGVyIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IG5vcm1hbGl6ZXIgPSBwcm92aWRlci5ub3JtYWxpemVJZGVudGlmaWVyID8/IGRlZmF1bHROb3JtYWxpemVyO1xuICAgIGNvbnN0IGVtYWlsID0gbm9ybWFsaXplcihib2R5Py5lbWFpbCk7XG4gICAgY29uc3QgZGVmYXVsdFVzZXIgPSB7IGlkOiBjcnlwdG8ucmFuZG9tVVVJRCgpLCBlbWFpbCwgZW1haWxWZXJpZmllZDogbnVsbCB9O1xuICAgIGNvbnN0IHVzZXIgPSAoYXdhaXQgYWRhcHRlci5nZXRVc2VyQnlFbWFpbChlbWFpbCkpID8/IGRlZmF1bHRVc2VyO1xuICAgIGNvbnN0IGFjY291bnQgPSB7XG4gICAgICAgIHByb3ZpZGVyQWNjb3VudElkOiBlbWFpbCxcbiAgICAgICAgdXNlcklkOiB1c2VyLmlkLFxuICAgICAgICB0eXBlOiBcImVtYWlsXCIsXG4gICAgICAgIHByb3ZpZGVyOiBwcm92aWRlci5pZCxcbiAgICB9O1xuICAgIGxldCBhdXRob3JpemVkO1xuICAgIHRyeSB7XG4gICAgICAgIGF1dGhvcml6ZWQgPSBhd2FpdCBjYWxsYmFja3Muc2lnbkluKHtcbiAgICAgICAgICAgIHVzZXIsXG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgZW1haWw6IHsgdmVyaWZpY2F0aW9uUmVxdWVzdDogdHJ1ZSB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEFjY2Vzc0RlbmllZChlKTtcbiAgICB9XG4gICAgaWYgKCFhdXRob3JpemVkKVxuICAgICAgICB0aHJvdyBuZXcgQWNjZXNzRGVuaWVkKFwiQWNjZXNzRGVuaWVkXCIpO1xuICAgIGlmICh0eXBlb2YgYXV0aG9yaXplZCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVkaXJlY3Q6IGF3YWl0IGNhbGxiYWNrcy5yZWRpcmVjdCh7XG4gICAgICAgICAgICAgICAgdXJsOiBhdXRob3JpemVkLFxuICAgICAgICAgICAgICAgIGJhc2VVcmw6IG9wdGlvbnMudXJsLm9yaWdpbixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCB7IGNhbGxiYWNrVXJsLCB0aGVtZSB9ID0gb3B0aW9ucztcbiAgICBjb25zdCB0b2tlbiA9IChhd2FpdCBwcm92aWRlci5nZW5lcmF0ZVZlcmlmaWNhdGlvblRva2VuPy4oKSkgPz8gcmFuZG9tU3RyaW5nKDMyKTtcbiAgICBjb25zdCBPTkVfREFZX0lOX1NFQ09ORFMgPSA4NjQwMDtcbiAgICBjb25zdCBleHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIChwcm92aWRlci5tYXhBZ2UgPz8gT05FX0RBWV9JTl9TRUNPTkRTKSAqIDEwMDApO1xuICAgIGNvbnN0IHNlY3JldCA9IHByb3ZpZGVyLnNlY3JldCA/PyBvcHRpb25zLnNlY3JldDtcbiAgICBjb25zdCBiYXNlVXJsID0gbmV3IFVSTChvcHRpb25zLmJhc2VQYXRoLCBvcHRpb25zLnVybC5vcmlnaW4pO1xuICAgIGNvbnN0IHNlbmRSZXF1ZXN0ID0gcHJvdmlkZXIuc2VuZFZlcmlmaWNhdGlvblJlcXVlc3Qoe1xuICAgICAgICBpZGVudGlmaWVyOiBlbWFpbCxcbiAgICAgICAgdG9rZW4sXG4gICAgICAgIGV4cGlyZXMsXG4gICAgICAgIHVybDogYCR7YmFzZVVybH0vY2FsbGJhY2svJHtwcm92aWRlci5pZH0/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgICAgICAgIGNhbGxiYWNrVXJsLFxuICAgICAgICAgICAgdG9rZW4sXG4gICAgICAgICAgICBlbWFpbCxcbiAgICAgICAgfSl9YCxcbiAgICAgICAgcHJvdmlkZXIsXG4gICAgICAgIHRoZW1lLFxuICAgICAgICByZXF1ZXN0OiB0b1JlcXVlc3QocmVxdWVzdCksXG4gICAgfSk7XG4gICAgY29uc3QgY3JlYXRlVG9rZW4gPSBhZGFwdGVyLmNyZWF0ZVZlcmlmaWNhdGlvblRva2VuPy4oe1xuICAgICAgICBpZGVudGlmaWVyOiBlbWFpbCxcbiAgICAgICAgdG9rZW46IGF3YWl0IGNyZWF0ZUhhc2goYCR7dG9rZW59JHtzZWNyZXR9YCksXG4gICAgICAgIGV4cGlyZXMsXG4gICAgfSk7XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoW3NlbmRSZXF1ZXN0LCBjcmVhdGVUb2tlbl0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlZGlyZWN0OiBgJHtiYXNlVXJsfS92ZXJpZnktcmVxdWVzdD8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyLmlkLFxuICAgICAgICAgICAgdHlwZTogcHJvdmlkZXIudHlwZSxcbiAgICAgICAgfSl9YCxcbiAgICB9O1xufVxuZnVuY3Rpb24gZGVmYXVsdE5vcm1hbGl6ZXIoZW1haWwpIHtcbiAgICBpZiAoIWVtYWlsKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGVtYWlsIGZyb20gcmVxdWVzdCBib2R5LlwiKTtcbiAgICAvLyBHZXQgdGhlIGZpcnN0IHR3byBlbGVtZW50cyBvbmx5LFxuICAgIC8vIHNlcGFyYXRlZCBieSBgQGAgZnJvbSB1c2VyIGlucHV0LlxuICAgIGxldCBbbG9jYWwsIGRvbWFpbl0gPSBlbWFpbC50b0xvd2VyQ2FzZSgpLnRyaW0oKS5zcGxpdChcIkBcIik7XG4gICAgLy8gVGhlIHBhcnQgYmVmb3JlIFwiQFwiIGNhbiBjb250YWluIGEgXCIsXCJcbiAgICAvLyBidXQgd2UgcmVtb3ZlIGl0IG9uIHRoZSBkb21haW4gcGFydFxuICAgIGRvbWFpbiA9IGRvbWFpbi5zcGxpdChcIixcIilbMF07XG4gICAgcmV0dXJuIGAke2xvY2FsfUAke2RvbWFpbn1gO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signin/send-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/signout.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\n/**\n * Destroys the session.\n * If the session strategy is database,\n * The session is also deleted from the database.\n * In any case, the session cookie is cleared and\n * {@link AuthConfig[\"events\"].signOut} is emitted.\n */\nasync function signOut(cookies, sessionStore, options) {\n    const { jwt, events, callbackUrl: redirect, logger, session } = options;\n    const sessionToken = sessionStore.value;\n    if (!sessionToken)\n        return { redirect, cookies };\n    try {\n        if (session.strategy === \"jwt\") {\n            const salt = options.cookies.sessionToken.name;\n            const token = await jwt.decode({ ...jwt, token: sessionToken, salt });\n            await events.signOut?.({ token });\n        }\n        else {\n            const session = await options.adapter?.deleteSession(sessionToken);\n            await events.signOut?.({ session });\n        }\n    }\n    catch (e) {\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.SignOutError(e));\n    }\n    cookies.push(...sessionStore.clean());\n    return { redirect, cookies };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25vdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksb0NBQW9DO0FBQ3hDO0FBQ087QUFDUCxZQUFZLHNEQUFzRDtBQUNsRTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxtQ0FBbUM7QUFDaEYscUNBQXFDLE9BQU87QUFDNUM7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVM7QUFDOUM7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG9EQUFZO0FBQ3JDO0FBQ0E7QUFDQSxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25vdXQuanM/ZjlhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaWduT3V0RXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3JzLmpzXCI7XG4vKipcbiAqIERlc3Ryb3lzIHRoZSBzZXNzaW9uLlxuICogSWYgdGhlIHNlc3Npb24gc3RyYXRlZ3kgaXMgZGF0YWJhc2UsXG4gKiBUaGUgc2Vzc2lvbiBpcyBhbHNvIGRlbGV0ZWQgZnJvbSB0aGUgZGF0YWJhc2UuXG4gKiBJbiBhbnkgY2FzZSwgdGhlIHNlc3Npb24gY29va2llIGlzIGNsZWFyZWQgYW5kXG4gKiB7QGxpbmsgQXV0aENvbmZpZ1tcImV2ZW50c1wiXS5zaWduT3V0fSBpcyBlbWl0dGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk91dChjb29raWVzLCBzZXNzaW9uU3RvcmUsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGp3dCwgZXZlbnRzLCBjYWxsYmFja1VybDogcmVkaXJlY3QsIGxvZ2dlciwgc2Vzc2lvbiB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBzZXNzaW9uVG9rZW4gPSBzZXNzaW9uU3RvcmUudmFsdWU7XG4gICAgaWYgKCFzZXNzaW9uVG9rZW4pXG4gICAgICAgIHJldHVybiB7IHJlZGlyZWN0LCBjb29raWVzIH07XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHNlc3Npb24uc3RyYXRlZ3kgPT09IFwiand0XCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHNhbHQgPSBvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLm5hbWU7XG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGp3dC5kZWNvZGUoeyAuLi5qd3QsIHRva2VuOiBzZXNzaW9uVG9rZW4sIHNhbHQgfSk7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMuc2lnbk91dD8uKHsgdG9rZW4gfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgb3B0aW9ucy5hZGFwdGVyPy5kZWxldGVTZXNzaW9uKHNlc3Npb25Ub2tlbik7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMuc2lnbk91dD8uKHsgc2Vzc2lvbiB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBsb2dnZXIuZXJyb3IobmV3IFNpZ25PdXRFcnJvcihlKSk7XG4gICAgfVxuICAgIGNvb2tpZXMucHVzaCguLi5zZXNzaW9uU3RvcmUuY2xlYW4oKSk7XG4gICAgcmV0dXJuIHsgcmVkaXJlY3QsIGNvb2tpZXMgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/webauthn-options.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/actions/webauthn-options.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webAuthnOptions: () => (/* binding */ webAuthnOptions)\n/* harmony export */ });\n/* harmony import */ var _utils_session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/session.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/session.js\");\n/* harmony import */ var _utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/webauthn-utils.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-utils.js\");\n\n\n/**\n * Returns authentication or registration options for a WebAuthn flow\n * depending on the parameters provided.\n */\nasync function webAuthnOptions(request, options, sessionStore, cookies) {\n    // Return an error if the adapter is missing or if the provider\n    // is not a webauthn provider.\n    const narrowOptions = (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertInternalOptionsWebAuthn)(options);\n    const { provider } = narrowOptions;\n    // Extract the action from the query parameters\n    const { action } = (request.query ?? {});\n    // Action must be either \"register\", \"authenticate\", or undefined\n    if (action !== \"register\" &&\n        action !== \"authenticate\" &&\n        typeof action !== \"undefined\") {\n        return {\n            status: 400,\n            body: { error: \"Invalid action\" },\n            cookies,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n    }\n    // Get the user info from the session\n    const sessionUser = await (0,_utils_session_js__WEBPACK_IMPORTED_MODULE_0__.getLoggedInUser)(options, sessionStore);\n    // Extract user info from request\n    // If session user exists, we don't need to call getUserInfo\n    const getUserInfoResponse = sessionUser\n        ? {\n            user: sessionUser,\n            exists: true,\n        }\n        : await provider.getUserInfo(options, request);\n    const userInfo = getUserInfoResponse?.user;\n    // Make a decision on what kind of webauthn options to return\n    const decision = (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.inferWebAuthnOptions)(action, !!sessionUser, getUserInfoResponse);\n    switch (decision) {\n        case \"authenticate\":\n            return (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.getAuthenticationResponse)(narrowOptions, request, userInfo, cookies);\n        case \"register\":\n            if (typeof userInfo?.email === \"string\") {\n                return (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.getRegistrationResponse)(narrowOptions, request, userInfo, cookies);\n            }\n        default:\n            return {\n                status: 400,\n                body: { error: \"Invalid request\" },\n                cookies,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3dlYmF1dGhuLW9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQ2dHO0FBQ3RKO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsMEJBQTBCLHVGQUE2QjtBQUN2RCxZQUFZLFdBQVc7QUFDdkI7QUFDQSxZQUFZLFNBQVMsc0JBQXNCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5QkFBeUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrRUFBZTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw4RUFBb0I7QUFDekM7QUFDQTtBQUNBLG1CQUFtQixtRkFBeUI7QUFDNUM7QUFDQTtBQUNBLHVCQUF1QixpRkFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMEJBQTBCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3dlYmF1dGhuLW9wdGlvbnMuanM/NTJiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2dnZWRJblVzZXIgfSBmcm9tIFwiLi4vdXRpbHMvc2Vzc2lvbi5qc1wiO1xuaW1wb3J0IHsgYXNzZXJ0SW50ZXJuYWxPcHRpb25zV2ViQXV0aG4sIGluZmVyV2ViQXV0aG5PcHRpb25zLCBnZXRBdXRoZW50aWNhdGlvblJlc3BvbnNlLCBnZXRSZWdpc3RyYXRpb25SZXNwb25zZSwgfSBmcm9tIFwiLi4vdXRpbHMvd2ViYXV0aG4tdXRpbHMuanNcIjtcbi8qKlxuICogUmV0dXJucyBhdXRoZW50aWNhdGlvbiBvciByZWdpc3RyYXRpb24gb3B0aW9ucyBmb3IgYSBXZWJBdXRobiBmbG93XG4gKiBkZXBlbmRpbmcgb24gdGhlIHBhcmFtZXRlcnMgcHJvdmlkZWQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3ZWJBdXRobk9wdGlvbnMocmVxdWVzdCwgb3B0aW9ucywgc2Vzc2lvblN0b3JlLCBjb29raWVzKSB7XG4gICAgLy8gUmV0dXJuIGFuIGVycm9yIGlmIHRoZSBhZGFwdGVyIGlzIG1pc3Npbmcgb3IgaWYgdGhlIHByb3ZpZGVyXG4gICAgLy8gaXMgbm90IGEgd2ViYXV0aG4gcHJvdmlkZXIuXG4gICAgY29uc3QgbmFycm93T3B0aW9ucyA9IGFzc2VydEludGVybmFsT3B0aW9uc1dlYkF1dGhuKG9wdGlvbnMpO1xuICAgIGNvbnN0IHsgcHJvdmlkZXIgfSA9IG5hcnJvd09wdGlvbnM7XG4gICAgLy8gRXh0cmFjdCB0aGUgYWN0aW9uIGZyb20gdGhlIHF1ZXJ5IHBhcmFtZXRlcnNcbiAgICBjb25zdCB7IGFjdGlvbiB9ID0gKHJlcXVlc3QucXVlcnkgPz8ge30pO1xuICAgIC8vIEFjdGlvbiBtdXN0IGJlIGVpdGhlciBcInJlZ2lzdGVyXCIsIFwiYXV0aGVudGljYXRlXCIsIG9yIHVuZGVmaW5lZFxuICAgIGlmIChhY3Rpb24gIT09IFwicmVnaXN0ZXJcIiAmJlxuICAgICAgICBhY3Rpb24gIT09IFwiYXV0aGVudGljYXRlXCIgJiZcbiAgICAgICAgdHlwZW9mIGFjdGlvbiAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICBib2R5OiB7IGVycm9yOiBcIkludmFsaWQgYWN0aW9uXCIgfSxcbiAgICAgICAgICAgIGNvb2tpZXMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBHZXQgdGhlIHVzZXIgaW5mbyBmcm9tIHRoZSBzZXNzaW9uXG4gICAgY29uc3Qgc2Vzc2lvblVzZXIgPSBhd2FpdCBnZXRMb2dnZWRJblVzZXIob3B0aW9ucywgc2Vzc2lvblN0b3JlKTtcbiAgICAvLyBFeHRyYWN0IHVzZXIgaW5mbyBmcm9tIHJlcXVlc3RcbiAgICAvLyBJZiBzZXNzaW9uIHVzZXIgZXhpc3RzLCB3ZSBkb24ndCBuZWVkIHRvIGNhbGwgZ2V0VXNlckluZm9cbiAgICBjb25zdCBnZXRVc2VySW5mb1Jlc3BvbnNlID0gc2Vzc2lvblVzZXJcbiAgICAgICAgPyB7XG4gICAgICAgICAgICB1c2VyOiBzZXNzaW9uVXNlcixcbiAgICAgICAgICAgIGV4aXN0czogdHJ1ZSxcbiAgICAgICAgfVxuICAgICAgICA6IGF3YWl0IHByb3ZpZGVyLmdldFVzZXJJbmZvKG9wdGlvbnMsIHJlcXVlc3QpO1xuICAgIGNvbnN0IHVzZXJJbmZvID0gZ2V0VXNlckluZm9SZXNwb25zZT8udXNlcjtcbiAgICAvLyBNYWtlIGEgZGVjaXNpb24gb24gd2hhdCBraW5kIG9mIHdlYmF1dGhuIG9wdGlvbnMgdG8gcmV0dXJuXG4gICAgY29uc3QgZGVjaXNpb24gPSBpbmZlcldlYkF1dGhuT3B0aW9ucyhhY3Rpb24sICEhc2Vzc2lvblVzZXIsIGdldFVzZXJJbmZvUmVzcG9uc2UpO1xuICAgIHN3aXRjaCAoZGVjaXNpb24pIHtcbiAgICAgICAgY2FzZSBcImF1dGhlbnRpY2F0ZVwiOlxuICAgICAgICAgICAgcmV0dXJuIGdldEF1dGhlbnRpY2F0aW9uUmVzcG9uc2UobmFycm93T3B0aW9ucywgcmVxdWVzdCwgdXNlckluZm8sIGNvb2tpZXMpO1xuICAgICAgICBjYXNlIFwicmVnaXN0ZXJcIjpcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdXNlckluZm8/LmVtYWlsID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldFJlZ2lzdHJhdGlvblJlc3BvbnNlKG5hcnJvd09wdGlvbnMsIHJlcXVlc3QsIHVzZXJJbmZvLCBjb29raWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgYm9keTogeyBlcnJvcjogXCJJbnZhbGlkIHJlcXVlc3RcIiB9LFxuICAgICAgICAgICAgICAgIGNvb2tpZXMsXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/webauthn-options.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthInternal: () => (/* binding */ AuthInternal),\n/* harmony export */   raw: () => (/* binding */ raw),\n/* harmony export */   skipCSRFCheck: () => (/* binding */ skipCSRFCheck)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_cookie_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/cookie.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/init.js\");\n/* harmony import */ var _pages_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/index.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/index.js\");\n/* harmony import */ var _actions_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions/index.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/index.js\");\n/* harmony import */ var _actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions/callback/oauth/csrf-token.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\");\n\n\n\n\n\n\n/** @internal */\nasync function AuthInternal(request, authOptions) {\n    const { action, providerId, error, method } = request;\n    const csrfDisabled = authOptions.skipCSRFCheck === skipCSRFCheck;\n    const { options, cookies } = await (0,_init_js__WEBPACK_IMPORTED_MODULE_2__.init)({\n        authOptions,\n        action,\n        providerId,\n        url: request.url,\n        callbackUrl: request.body?.callbackUrl ?? request.query?.callbackUrl,\n        csrfToken: request.body?.csrfToken,\n        cookies: request.cookies,\n        isPost: method === \"POST\",\n        csrfDisabled,\n    });\n    const sessionStore = new _utils_cookie_js__WEBPACK_IMPORTED_MODULE_1__.SessionStore(options.cookies.sessionToken, request.cookies, options.logger);\n    if (method === \"GET\") {\n        const render = (0,_pages_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({ ...options, query: request.query, cookies });\n        switch (action) {\n            case \"callback\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.callback(request, options, sessionStore, cookies);\n            case \"csrf\":\n                return render.csrf(csrfDisabled, options, cookies);\n            case \"error\":\n                return render.error(error);\n            case \"providers\":\n                return render.providers(options.providers);\n            case \"session\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.session(options, sessionStore, cookies);\n            case \"signin\":\n                return render.signin(providerId, error);\n            case \"signout\":\n                return render.signout();\n            case \"verify-request\":\n                return render.verifyRequest();\n            case \"webauthn-options\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.webAuthnOptions(request, options, sessionStore, cookies);\n            default:\n        }\n    }\n    else {\n        const { csrfTokenVerified } = options;\n        switch (action) {\n            case \"callback\":\n                if (options.provider.type === \"credentials\")\n                    // Verified CSRF Token required for credentials providers only\n                    (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.callback(request, options, sessionStore, cookies);\n            case \"session\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.session(options, sessionStore, cookies, true, request.body?.data);\n            case \"signin\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.signIn(request, cookies, options);\n            case \"signout\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.signOut(cookies, sessionStore, options);\n            default:\n        }\n    }\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.UnknownAction(`Cannot handle action: ${action}`);\n}\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js comes with built-in CSRF protection, but\n * if you are implementing a framework that is already protected against CSRF attacks, you can skip this check by\n * passing this value to {@link AuthConfig.skipCSRFCheck}.\n */\nconst skipCSRFCheck = Symbol(\"skip-csrf-check\");\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js returns a web standard {@link Response} by default, but\n * if you are implementing a framework you might want to get access to the raw internal response\n * by passing this value to {@link AuthConfig.raw}.\n */\nconst raw = Symbol(\"return-type-raw\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkM7QUFDSTtBQUNoQjtBQUNTO0FBQ0k7QUFDd0I7QUFDdEU7QUFDTztBQUNQLFlBQVksb0NBQW9DO0FBQ2hEO0FBQ0EsWUFBWSxtQkFBbUIsUUFBUSw4Q0FBSTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNkJBQTZCLDBEQUFZO0FBQ3pDO0FBQ0EsdUJBQXVCLDJEQUFVLEdBQUcsMkNBQTJDO0FBQy9FO0FBQ0E7QUFDQSw2QkFBNkIsdURBQWdCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHNEQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDhEQUF1QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvQkFBb0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUZBQVk7QUFDaEMsNkJBQTZCLHVEQUFnQjtBQUM3QztBQUNBLGdCQUFnQixtRkFBWTtBQUM1Qiw2QkFBNkIsc0RBQWU7QUFDNUM7QUFDQSxnQkFBZ0IsbUZBQVk7QUFDNUIsNkJBQTZCLHFEQUFjO0FBQzNDO0FBQ0EsZ0JBQWdCLG1GQUFZO0FBQzVCLDZCQUE2QixzREFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxjQUFjLHFEQUFhLDBCQUEwQixPQUFPO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsK0JBQStCO0FBQ3pEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdCQUFnQjtBQUNuRDtBQUNBLDZCQUE2QixxQkFBcUI7QUFDbEQ7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2luZGV4LmpzPzU0YmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5rbm93bkFjdGlvbiB9IGZyb20gXCIuLi9lcnJvcnMuanNcIjtcbmltcG9ydCB7IFNlc3Npb25TdG9yZSB9IGZyb20gXCIuL3V0aWxzL2Nvb2tpZS5qc1wiO1xuaW1wb3J0IHsgaW5pdCB9IGZyb20gXCIuL2luaXQuanNcIjtcbmltcG9ydCByZW5kZXJQYWdlIGZyb20gXCIuL3BhZ2VzL2luZGV4LmpzXCI7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gXCIuL2FjdGlvbnMvaW5kZXguanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlQ1NSRiB9IGZyb20gXCIuL2FjdGlvbnMvY2FsbGJhY2svb2F1dGgvY3NyZi10b2tlbi5qc1wiO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEF1dGhJbnRlcm5hbChyZXF1ZXN0LCBhdXRoT3B0aW9ucykge1xuICAgIGNvbnN0IHsgYWN0aW9uLCBwcm92aWRlcklkLCBlcnJvciwgbWV0aG9kIH0gPSByZXF1ZXN0O1xuICAgIGNvbnN0IGNzcmZEaXNhYmxlZCA9IGF1dGhPcHRpb25zLnNraXBDU1JGQ2hlY2sgPT09IHNraXBDU1JGQ2hlY2s7XG4gICAgY29uc3QgeyBvcHRpb25zLCBjb29raWVzIH0gPSBhd2FpdCBpbml0KHtcbiAgICAgICAgYXV0aE9wdGlvbnMsXG4gICAgICAgIGFjdGlvbixcbiAgICAgICAgcHJvdmlkZXJJZCxcbiAgICAgICAgdXJsOiByZXF1ZXN0LnVybCxcbiAgICAgICAgY2FsbGJhY2tVcmw6IHJlcXVlc3QuYm9keT8uY2FsbGJhY2tVcmwgPz8gcmVxdWVzdC5xdWVyeT8uY2FsbGJhY2tVcmwsXG4gICAgICAgIGNzcmZUb2tlbjogcmVxdWVzdC5ib2R5Py5jc3JmVG9rZW4sXG4gICAgICAgIGNvb2tpZXM6IHJlcXVlc3QuY29va2llcyxcbiAgICAgICAgaXNQb3N0OiBtZXRob2QgPT09IFwiUE9TVFwiLFxuICAgICAgICBjc3JmRGlzYWJsZWQsXG4gICAgfSk7XG4gICAgY29uc3Qgc2Vzc2lvblN0b3JlID0gbmV3IFNlc3Npb25TdG9yZShvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLCByZXF1ZXN0LmNvb2tpZXMsIG9wdGlvbnMubG9nZ2VyKTtcbiAgICBpZiAobWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgICAgIGNvbnN0IHJlbmRlciA9IHJlbmRlclBhZ2UoeyAuLi5vcHRpb25zLCBxdWVyeTogcmVxdWVzdC5xdWVyeSwgY29va2llcyB9KTtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICAgICAgICAgIGNhc2UgXCJjYWxsYmFja1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhY3Rpb25zLmNhbGxiYWNrKHJlcXVlc3QsIG9wdGlvbnMsIHNlc3Npb25TdG9yZSwgY29va2llcyk7XG4gICAgICAgICAgICBjYXNlIFwiY3NyZlwiOlxuICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXIuY3NyZihjc3JmRGlzYWJsZWQsIG9wdGlvbnMsIGNvb2tpZXMpO1xuICAgICAgICAgICAgY2FzZSBcImVycm9yXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlci5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICBjYXNlIFwicHJvdmlkZXJzXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlci5wcm92aWRlcnMob3B0aW9ucy5wcm92aWRlcnMpO1xuICAgICAgICAgICAgY2FzZSBcInNlc3Npb25cIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYWN0aW9ucy5zZXNzaW9uKG9wdGlvbnMsIHNlc3Npb25TdG9yZSwgY29va2llcyk7XG4gICAgICAgICAgICBjYXNlIFwic2lnbmluXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlci5zaWduaW4ocHJvdmlkZXJJZCwgZXJyb3IpO1xuICAgICAgICAgICAgY2FzZSBcInNpZ25vdXRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVuZGVyLnNpZ25vdXQoKTtcbiAgICAgICAgICAgIGNhc2UgXCJ2ZXJpZnktcmVxdWVzdFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXIudmVyaWZ5UmVxdWVzdCgpO1xuICAgICAgICAgICAgY2FzZSBcIndlYmF1dGhuLW9wdGlvbnNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYWN0aW9ucy53ZWJBdXRobk9wdGlvbnMocmVxdWVzdCwgb3B0aW9ucywgc2Vzc2lvblN0b3JlLCBjb29raWVzKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHsgY3NyZlRva2VuVmVyaWZpZWQgfSA9IG9wdGlvbnM7XG4gICAgICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIFwiY2FsbGJhY2tcIjpcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5wcm92aWRlci50eXBlID09PSBcImNyZWRlbnRpYWxzXCIpXG4gICAgICAgICAgICAgICAgICAgIC8vIFZlcmlmaWVkIENTUkYgVG9rZW4gcmVxdWlyZWQgZm9yIGNyZWRlbnRpYWxzIHByb3ZpZGVycyBvbmx5XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlQ1NSRihhY3Rpb24sIGNzcmZUb2tlblZlcmlmaWVkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYWN0aW9ucy5jYWxsYmFjayhyZXF1ZXN0LCBvcHRpb25zLCBzZXNzaW9uU3RvcmUsIGNvb2tpZXMpO1xuICAgICAgICAgICAgY2FzZSBcInNlc3Npb25cIjpcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZUNTUkYoYWN0aW9uLCBjc3JmVG9rZW5WZXJpZmllZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGFjdGlvbnMuc2Vzc2lvbihvcHRpb25zLCBzZXNzaW9uU3RvcmUsIGNvb2tpZXMsIHRydWUsIHJlcXVlc3QuYm9keT8uZGF0YSk7XG4gICAgICAgICAgICBjYXNlIFwic2lnbmluXCI6XG4gICAgICAgICAgICAgICAgdmFsaWRhdGVDU1JGKGFjdGlvbiwgY3NyZlRva2VuVmVyaWZpZWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhY3Rpb25zLnNpZ25JbihyZXF1ZXN0LCBjb29raWVzLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNhc2UgXCJzaWdub3V0XCI6XG4gICAgICAgICAgICAgICAgdmFsaWRhdGVDU1JGKGFjdGlvbiwgY3NyZlRva2VuVmVyaWZpZWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhY3Rpb25zLnNpZ25PdXQoY29va2llcywgc2Vzc2lvblN0b3JlLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IFVua25vd25BY3Rpb24oYENhbm5vdCBoYW5kbGUgYWN0aW9uOiAke2FjdGlvbn1gKTtcbn1cbi8qKlxuICogOjo6ZGFuZ2VyXG4gKiBUaGlzIG9wdGlvbiBpcyBpbnRlbmRlZCBmb3IgZnJhbWV3b3JrIGF1dGhvcnMuXG4gKiA6OjpcbiAqXG4gKiBBdXRoLmpzIGNvbWVzIHdpdGggYnVpbHQtaW4gQ1NSRiBwcm90ZWN0aW9uLCBidXRcbiAqIGlmIHlvdSBhcmUgaW1wbGVtZW50aW5nIGEgZnJhbWV3b3JrIHRoYXQgaXMgYWxyZWFkeSBwcm90ZWN0ZWQgYWdhaW5zdCBDU1JGIGF0dGFja3MsIHlvdSBjYW4gc2tpcCB0aGlzIGNoZWNrIGJ5XG4gKiBwYXNzaW5nIHRoaXMgdmFsdWUgdG8ge0BsaW5rIEF1dGhDb25maWcuc2tpcENTUkZDaGVja30uXG4gKi9cbmV4cG9ydCBjb25zdCBza2lwQ1NSRkNoZWNrID0gU3ltYm9sKFwic2tpcC1jc3JmLWNoZWNrXCIpO1xuLyoqXG4gKiA6OjpkYW5nZXJcbiAqIFRoaXMgb3B0aW9uIGlzIGludGVuZGVkIGZvciBmcmFtZXdvcmsgYXV0aG9ycy5cbiAqIDo6OlxuICpcbiAqIEF1dGguanMgcmV0dXJucyBhIHdlYiBzdGFuZGFyZCB7QGxpbmsgUmVzcG9uc2V9IGJ5IGRlZmF1bHQsIGJ1dFxuICogaWYgeW91IGFyZSBpbXBsZW1lbnRpbmcgYSBmcmFtZXdvcmsgeW91IG1pZ2h0IHdhbnQgdG8gZ2V0IGFjY2VzcyB0byB0aGUgcmF3IGludGVybmFsIHJlc3BvbnNlXG4gKiBieSBwYXNzaW5nIHRoaXMgdmFsdWUgdG8ge0BsaW5rIEF1dGhDb25maWcucmF3fS5cbiAqL1xuZXhwb3J0IGNvbnN0IHJhdyA9IFN5bWJvbChcInJldHVybi10eXBlLXJhd1wiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/init.js":
/*!********************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/init.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultCallbacks: () => (/* binding */ defaultCallbacks),\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _jwt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jwt.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/jwt.js\");\n/* harmony import */ var _utils_callback_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/callback-url.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/callback-url.js\");\n/* harmony import */ var _utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/cookie.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions/callback/oauth/csrf-token.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_providers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/providers.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/providers.js\");\n/* harmony import */ var _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/logger.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _utils_merge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/merge.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/merge.js\");\n\n\n\n\n\n\n\n\nconst defaultCallbacks = {\n    signIn() {\n        return true;\n    },\n    redirect({ url, baseUrl }) {\n        if (url.startsWith(\"/\"))\n            return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl)\n            return url;\n        return baseUrl;\n    },\n    session({ session }) {\n        return {\n            user: {\n                name: session.user?.name,\n                email: session.user?.email,\n                image: session.user?.image,\n            },\n            expires: session.expires?.toISOString?.() ?? session.expires,\n        };\n    },\n    jwt({ token }) {\n        return token;\n    },\n};\n/** Initialize all internal options and cookies. */\nasync function init({ authOptions, providerId, action, url, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, csrfDisabled, isPost, }) {\n    const { providers, provider } = (0,_utils_providers_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n        providers: authOptions.providers,\n        url,\n        providerId,\n        options: authOptions,\n    });\n    const maxAge = 30 * 24 * 60 * 60; // Sessions expire after 30 days of being idle by default\n    let isOnRedirectProxy = false;\n    if ((provider?.type === \"oauth\" || provider?.type === \"oidc\") &&\n        provider.redirectProxyUrl) {\n        try {\n            isOnRedirectProxy =\n                new URL(provider.redirectProxyUrl).origin === url.origin;\n        }\n        catch {\n            throw new TypeError(`redirectProxyUrl must be a valid URL. Received: ${provider.redirectProxyUrl}`);\n        }\n    }\n    // User provided options are overridden by other options,\n    // except for the options with special handling above\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\",\n        },\n        // Custom options override defaults\n        ...authOptions,\n        // These computed settings can have values in userOptions but we override them\n        // and are request-specific.\n        url,\n        action,\n        // @ts-expect-errors\n        provider,\n        cookies: (0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_7__.merge)(_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__.defaultCookies(authOptions.useSecureCookies ?? url.protocol === \"https:\"), authOptions.cookies),\n        providers,\n        // Session options\n        session: {\n            // If no adapter specified, force use of JSON Web Tokens (stateless)\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: () => crypto.randomUUID(),\n            ...authOptions.session,\n        },\n        // JWT options\n        jwt: {\n            secret: authOptions.secret, // Asserted in assert.ts\n            maxAge: authOptions.session?.maxAge ?? maxAge, // default to same as `session.maxAge`\n            encode: _jwt_js__WEBPACK_IMPORTED_MODULE_0__.encode,\n            decode: _jwt_js__WEBPACK_IMPORTED_MODULE_0__.decode,\n            ...authOptions.jwt,\n        },\n        // Event messages\n        events: eventsErrorHandler(authOptions.events ?? {}, _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger),\n        adapter: adapterErrorHandler(authOptions.adapter, _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger),\n        // Callback functions\n        callbacks: { ...defaultCallbacks, ...authOptions.callbacks },\n        logger: _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger,\n        callbackUrl: url.origin,\n        isOnRedirectProxy,\n        experimental: {\n            ...authOptions.experimental,\n        },\n    };\n    // Init cookies\n    const cookies = [];\n    if (csrfDisabled) {\n        options.csrfTokenVerified = true;\n    }\n    else {\n        const { csrfToken, cookie: csrfCookie, csrfTokenVerified, } = await (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_3__.createCSRFToken)({\n            options,\n            cookieValue: reqCookies?.[options.cookies.csrfToken.name],\n            isPost,\n            bodyValue: reqCsrfToken,\n        });\n        options.csrfToken = csrfToken;\n        options.csrfTokenVerified = csrfTokenVerified;\n        if (csrfCookie) {\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: csrfCookie,\n                options: options.cookies.csrfToken.options,\n            });\n        }\n    }\n    const { callbackUrl, callbackUrlCookie } = await (0,_utils_callback_url_js__WEBPACK_IMPORTED_MODULE_1__.createCallbackUrl)({\n        options,\n        cookieValue: reqCookies?.[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl,\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options,\n        });\n    }\n    return { options, cookies };\n}\n/** Wraps an object of methods and adds error handling. */\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce((acc, name) => {\n        acc[name] = async (...args) => {\n            try {\n                const method = methods[name];\n                return await method(...args);\n            }\n            catch (e) {\n                logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_4__.EventError(e));\n            }\n        };\n        return acc;\n    }, {});\n}\n/** Handles adapter induced errors. */\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter)\n        return;\n    return Object.keys(adapter).reduce((acc, name) => {\n        acc[name] = async (...args) => {\n            try {\n                logger.debug(`adapter_${name}`, { args });\n                const method = adapter[name];\n                return await method(...args);\n            }\n            catch (e) {\n                const error = new _errors_js__WEBPACK_IMPORTED_MODULE_4__.AdapterError(e);\n                logger.error(error);\n                throw error;\n            }\n        };\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/init.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/error.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/pages/error.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ErrorPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\n/** Renders an error page. */\nfunction ErrorPage(props) {\n    const { url, error = \"default\", theme } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: \"site\", href: url?.origin, children: url?.host }) })),\n        },\n        Configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"There is a problem with the server configuration.\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"Check the server logs for more information.\" })] })),\n        },\n        AccessDenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"You do not have permission to sign in.\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: \"button\", href: signinPageUrl, children: \"Sign in\" }) })] })),\n        },\n        Verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"The sign in link is no longer valid.\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"It may have been used already or it may have expired.\" })] })),\n            signin: ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: \"button\", href: signinPageUrl, children: \"Sign in\" })),\n        },\n    };\n    const { status, heading, message, signin } = errors[error] ?? errors.default;\n    return {\n        status,\n        html: ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"error\", children: [theme?.brandColor && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                        __html: `\n        :root {\n          --brand-color: ${theme?.brandColor}\n        }\n      `,\n                    } })), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"card\", children: [theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { src: theme?.logo, alt: \"Logo\", className: \"logo\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", { children: heading }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"message\", children: message }), signin] })] })),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNoRTtBQUNlO0FBQ2YsWUFBWSxnQ0FBZ0M7QUFDNUMsNkJBQTZCLElBQUk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdURBQUksUUFBUSxVQUFVLHVEQUFJLFFBQVEsMkRBQTJELEdBQUc7QUFDdEgsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3REFBSyxVQUFVLFdBQVcsdURBQUksUUFBUSwrREFBK0QsR0FBRyx1REFBSSxRQUFRLHlEQUF5RCxJQUFJO0FBQ3ZNLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isd0RBQUssVUFBVSxXQUFXLHVEQUFJLFFBQVEsb0RBQW9ELEdBQUcsdURBQUksUUFBUSxVQUFVLHVEQUFJLFFBQVEsK0RBQStELEdBQUcsSUFBSTtBQUMzTixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdEQUFLLFVBQVUsV0FBVyx1REFBSSxRQUFRLGtEQUFrRCxHQUFHLHVEQUFJLFFBQVEsbUVBQW1FLElBQUk7QUFDcE0scUJBQXFCLHVEQUFJLFFBQVEsK0RBQStEO0FBQ2hHLFNBQVM7QUFDVDtBQUNBLFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQSxlQUFlLHdEQUFLLFVBQVUscURBQXFELHVEQUFJLFlBQVk7QUFDbkc7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCLElBQUksd0RBQUssVUFBVSw2Q0FBNkMsdURBQUksVUFBVSxrREFBa0QsR0FBRyx1REFBSSxTQUFTLG1CQUFtQixHQUFHLHVEQUFJLFVBQVUseUNBQXlDLFlBQVksSUFBSTtBQUNwUTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvZXJyb3IuanM/MjBiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJwcmVhY3QvanN4LXJ1bnRpbWVcIjtcbi8qKiBSZW5kZXJzIGFuIGVycm9yIHBhZ2UuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFcnJvclBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgZXJyb3IgPSBcImRlZmF1bHRcIiwgdGhlbWUgfSA9IHByb3BzO1xuICAgIGNvbnN0IHNpZ25pblBhZ2VVcmwgPSBgJHt1cmx9L3NpZ25pbmA7XG4gICAgY29uc3QgZXJyb3JzID0ge1xuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgIGhlYWRpbmc6IFwiRXJyb3JcIixcbiAgICAgICAgICAgIG1lc3NhZ2U6IChfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBfanN4KFwiYVwiLCB7IGNsYXNzTmFtZTogXCJzaXRlXCIsIGhyZWY6IHVybD8ub3JpZ2luLCBjaGlsZHJlbjogdXJsPy5ob3N0IH0pIH0pKSxcbiAgICAgICAgfSxcbiAgICAgICAgQ29uZmlndXJhdGlvbjoge1xuICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICBoZWFkaW5nOiBcIlNlcnZlciBlcnJvclwiLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9qc3hzKFwiZGl2XCIsIHsgY2hpbGRyZW46IFtfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIlRoZXJlIGlzIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIgY29uZmlndXJhdGlvbi5cIiB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogXCJDaGVjayB0aGUgc2VydmVyIGxvZ3MgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIgfSldIH0pKSxcbiAgICAgICAgfSxcbiAgICAgICAgQWNjZXNzRGVuaWVkOiB7XG4gICAgICAgICAgICBzdGF0dXM6IDQwMyxcbiAgICAgICAgICAgIGhlYWRpbmc6IFwiQWNjZXNzIERlbmllZFwiLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9qc3hzKFwiZGl2XCIsIHsgY2hpbGRyZW46IFtfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIllvdSBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIHNpZ24gaW4uXCIgfSksIF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IF9qc3goXCJhXCIsIHsgY2xhc3NOYW1lOiBcImJ1dHRvblwiLCBocmVmOiBzaWduaW5QYWdlVXJsLCBjaGlsZHJlbjogXCJTaWduIGluXCIgfSkgfSldIH0pKSxcbiAgICAgICAgfSxcbiAgICAgICAgVmVyaWZpY2F0aW9uOiB7XG4gICAgICAgICAgICBzdGF0dXM6IDQwMyxcbiAgICAgICAgICAgIGhlYWRpbmc6IFwiVW5hYmxlIHRvIHNpZ24gaW5cIixcbiAgICAgICAgICAgIG1lc3NhZ2U6IChfanN4cyhcImRpdlwiLCB7IGNoaWxkcmVuOiBbX2pzeChcInBcIiwgeyBjaGlsZHJlbjogXCJUaGUgc2lnbiBpbiBsaW5rIGlzIG5vIGxvbmdlciB2YWxpZC5cIiB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogXCJJdCBtYXkgaGF2ZSBiZWVuIHVzZWQgYWxyZWFkeSBvciBpdCBtYXkgaGF2ZSBleHBpcmVkLlwiIH0pXSB9KSksXG4gICAgICAgICAgICBzaWduaW46IChfanN4KFwiYVwiLCB7IGNsYXNzTmFtZTogXCJidXR0b25cIiwgaHJlZjogc2lnbmluUGFnZVVybCwgY2hpbGRyZW46IFwiU2lnbiBpblwiIH0pKSxcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIGNvbnN0IHsgc3RhdHVzLCBoZWFkaW5nLCBtZXNzYWdlLCBzaWduaW4gfSA9IGVycm9yc1tlcnJvcl0gPz8gZXJyb3JzLmRlZmF1bHQ7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzLFxuICAgICAgICBodG1sOiAoX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZXJyb3JcIiwgY2hpbGRyZW46IFt0aGVtZT8uYnJhbmRDb2xvciAmJiAoX2pzeChcInN0eWxlXCIsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZT8uYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYCxcbiAgICAgICAgICAgICAgICAgICAgfSB9KSksIF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImNhcmRcIiwgY2hpbGRyZW46IFt0aGVtZT8ubG9nbyAmJiBfanN4KFwiaW1nXCIsIHsgc3JjOiB0aGVtZT8ubG9nbywgYWx0OiBcIkxvZ29cIiwgY2xhc3NOYW1lOiBcImxvZ29cIiB9KSwgX2pzeChcImgxXCIsIHsgY2hpbGRyZW46IGhlYWRpbmcgfSksIF9qc3goXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibWVzc2FnZVwiLCBjaGlsZHJlbjogbWVzc2FnZSB9KSwgc2lnbmluXSB9KV0gfSkpLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/pages/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ renderPage)\n/* harmony export */ });\n/* harmony import */ var preact_render_to_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact-render-to-string */ \"(rsc)/./node_modules/preact-render-to-string/dist/index.mjs\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/error.js\");\n/* harmony import */ var _signin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signin.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/signin.js\");\n/* harmony import */ var _signout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signout.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/signout.js\");\n/* harmony import */ var _styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/styles.js\");\n/* harmony import */ var _verify_request_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./verify-request.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/verify-request.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\n\n\n\n\n\n\nfunction send({ html, title, status, cookies, theme, headTags, }) {\n    return {\n        cookies,\n        status,\n        headers: { \"Content-Type\": \"text/html\" },\n        body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${_styles_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]}</style><title>${title}</title>${headTags ?? \"\"}</head><body class=\"__next-auth-theme-${theme?.colorScheme ?? \"auto\"}\"><div class=\"page\">${(0,preact_render_to_string__WEBPACK_IMPORTED_MODULE_0__.renderToString)(html)}</div></body></html>`,\n    };\n}\n/**\n * Unless the user defines their [own pages](https://authjs.dev/reference/core#pages),\n * we render a set of default ones, using Preact SSR.\n */\nfunction renderPage(params) {\n    const { url, theme, query, cookies, pages, providers } = params;\n    return {\n        csrf(skip, options, cookies) {\n            if (!skip) {\n                return {\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: { csrfToken: options.csrfToken },\n                    cookies,\n                };\n            }\n            options.logger.warn(\"csrf-disabled\");\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: \"\",\n                options: { ...options.cookies.csrfToken.options, maxAge: 0 },\n            });\n            return { status: 404, cookies };\n        },\n        providers(providers) {\n            return {\n                headers: { \"Content-Type\": \"application/json\" },\n                body: providers.reduce((acc, { id, name, type, signinUrl, callbackUrl }) => {\n                    acc[id] = { id, name, type, signinUrl, callbackUrl };\n                    return acc;\n                }, {}),\n            };\n        },\n        signin(providerId, error) {\n            if (providerId)\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.UnknownAction(\"Unsupported action\");\n            if (pages?.signIn) {\n                let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({ callbackUrl: params.callbackUrl ?? \"/\" })}`;\n                if (error)\n                    signinUrl = `${signinUrl}&${new URLSearchParams({ error })}`;\n                return { redirect: signinUrl, cookies };\n            }\n            // If we have a webauthn provider with conditional UI and\n            // a simpleWebAuthnBrowserScript is defined, we need to\n            // render the script in the page.\n            const webauthnProvider = providers?.find((p) => p.type === \"webauthn\" &&\n                p.enableConditionalUI &&\n                !!p.simpleWebAuthnBrowserVersion);\n            let simpleWebAuthnBrowserScript = \"\";\n            if (webauthnProvider) {\n                const { simpleWebAuthnBrowserVersion } = webauthnProvider;\n                simpleWebAuthnBrowserScript = `<script src=\"https://unpkg.com/@simplewebauthn/browser@${simpleWebAuthnBrowserVersion}/dist/bundle/index.umd.min.js\" crossorigin=\"anonymous\"></script>`;\n            }\n            return send({\n                cookies,\n                theme,\n                html: (0,_signin_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n                    csrfToken: params.csrfToken,\n                    // We only want to render providers\n                    providers: params.providers?.filter((provider) => \n                    // Always render oauth and email type providers\n                    [\"email\", \"oauth\", \"oidc\"].includes(provider.type) ||\n                        // Only render credentials type provider if credentials are defined\n                        (provider.type === \"credentials\" && provider.credentials) ||\n                        // Only render webauthn type provider if formFields are defined\n                        (provider.type === \"webauthn\" && provider.formFields) ||\n                        // Don't render other provider types\n                        false),\n                    callbackUrl: params.callbackUrl,\n                    theme: params.theme,\n                    error,\n                    ...query,\n                }),\n                title: \"Sign In\",\n                headTags: simpleWebAuthnBrowserScript,\n            });\n        },\n        signout() {\n            if (pages?.signOut)\n                return { redirect: pages.signOut, cookies };\n            return send({\n                cookies,\n                theme,\n                html: (0,_signout_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({ csrfToken: params.csrfToken, url, theme }),\n                title: \"Sign Out\",\n            });\n        },\n        verifyRequest(props) {\n            if (pages?.verifyRequest)\n                return { redirect: pages.verifyRequest, cookies };\n            return send({\n                cookies,\n                theme,\n                html: (0,_verify_request_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({ url, theme, ...props }),\n                title: \"Verify Request\",\n            });\n        },\n        error(error) {\n            if (pages?.error) {\n                return {\n                    redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                    cookies,\n                };\n            }\n            return send({\n                cookies,\n                theme,\n                // @ts-expect-error fix error type\n                ...(0,_error_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({ url, theme, error }),\n                title: \"Error\",\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/signin.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/pages/signin.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SigninPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n/* harmony import */ var _utils_webauthn_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/webauthn-client.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-client.js\");\n\n\nconst signinErrors = {\n    default: \"Unable to sign in.\",\n    Signin: \"Try signing in with a different account.\",\n    OAuthSignin: \"Try signing in with a different account.\",\n    OAuthCallbackError: \"Try signing in with a different account.\",\n    OAuthCreateAccount: \"Try signing in with a different account.\",\n    EmailCreateAccount: \"Try signing in with a different account.\",\n    Callback: \"Try signing in with a different account.\",\n    OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n    EmailSignin: \"The e-mail could not be sent.\",\n    CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n    SessionRequired: \"Please sign in to access this page.\",\n};\nfunction ConditionalUIScript(providerID) {\n    const startConditionalUIScript = `\nconst currentURL = window.location.href;\nconst authURL = currentURL.substring(0, currentURL.lastIndexOf('/'));\n(${_utils_webauthn_client_js__WEBPACK_IMPORTED_MODULE_1__.webauthnScript})(authURL, \"${providerID}\");\n`;\n    return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"script\", { dangerouslySetInnerHTML: { __html: startConditionalUIScript } }) }));\n}\nfunction SigninPage(props) {\n    const { csrfToken, providers = [], callbackUrl, theme, email, error: errorType, } = props;\n    if (typeof document !== \"undefined\" && theme?.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    if (typeof document !== \"undefined\" && theme?.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    const error = errorType && (signinErrors[errorType] ?? signinErrors.default);\n    const providerLogoPath = \"https://authjs.dev/img/providers\";\n    const conditionalUIProviderID = providers.find((provider) => provider.type === \"webauthn\" && provider.enableConditionalUI)?.id;\n    return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"signin\", children: [theme?.brandColor && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `:root {--brand-color: ${theme.brandColor}}`,\n                } })), theme?.buttonText && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `,\n                } })), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"card\", children: [error && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"error\", children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: error }) })), theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { src: theme.logo, alt: \"Logo\", className: \"logo\" }), providers.map((provider, i) => {\n                        let bg, brandColor, logo;\n                        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n                            ;\n                            ({\n                                bg = \"#fff\",\n                                brandColor,\n                                logo = `${providerLogoPath}/${provider.id}.svg`,\n                            } = provider.style ?? {});\n                        }\n                        const color = brandColor ?? bg ?? \"#fff\";\n                        return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"provider\", children: [provider.type === \"oauth\" || provider.type === \"oidc\" ? ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", { action: provider.signinUrl, method: \"POST\", children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), callbackUrl && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { type: \"hidden\", name: \"callbackUrl\", value: callbackUrl })), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", { type: \"submit\", className: \"button\", style: {\n                                                \"--provider-bg\": \"#fff\",\n                                                \"--provider-bg-hover\": `color-mix(in srgb, ${color} 30%, #fff)`,\n                                                \"--provider-dark-bg\": \"#161b22\",\n                                                \"--provider-dark-bg-hover\": `color-mix(in srgb, ${color} 30%, #000)`,\n                                            }, tabIndex: 0, children: [logo && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { loading: \"lazy\", height: 24, width: 24, id: \"provider-logo\", src: logo })), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { style: {\n                                                        filter: \"invert(1) grayscale(1) brightness(1.3) contrast(9000)\",\n                                                        \"mix-blend-mode\": \"luminosity\",\n                                                        opacity: 0.95,\n                                                    }, children: [\"Sign in with \", provider.name] })] })] })) : null, (provider.type === \"email\" ||\n                                    provider.type === \"credentials\" ||\n                                    provider.type === \"webauthn\") &&\n                                    i > 0 &&\n                                    providers[i - 1].type !== \"email\" &&\n                                    providers[i - 1].type !== \"credentials\" &&\n                                    providers[i - 1].type !== \"webauthn\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", {}), provider.type === \"email\" && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", { action: provider.signinUrl, method: \"POST\", children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: \"section-header\", htmlFor: `input-email-for-${provider.id}-provider`, children: \"Email\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { id: `input-email-for-${provider.id}-provider`, autoFocus: true, type: \"email\", name: \"email\", value: email, placeholder: \"email@example.com\", required: true }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", { id: \"submitButton\", type: \"submit\", tabIndex: 0, children: [\"Sign in with \", provider.name] })] })), provider.type === \"credentials\" && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", { action: provider.callbackUrl, method: \"POST\", children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), Object.keys(provider.credentials).map((credential) => {\n                                            return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: \"section-header\", htmlFor: `input-${credential}-for-${provider.id}-provider`, children: provider.credentials[credential].label ?? credential }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { name: credential, id: `input-${credential}-for-${provider.id}-provider`, type: provider.credentials[credential].type ?? \"text\", placeholder: provider.credentials[credential].placeholder ?? \"\", ...provider.credentials[credential] })] }, `input-group-${provider.id}`));\n                                        }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", { id: \"submitButton\", type: \"submit\", tabIndex: 0, children: [\"Sign in with \", provider.name] })] })), provider.type === \"webauthn\" && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", { action: provider.callbackUrl, method: \"POST\", id: `${provider.id}-form`, children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), Object.keys(provider.formFields).map((field) => {\n                                            return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { className: \"section-header\", htmlFor: `input-${field}-for-${provider.id}-provider`, children: provider.formFields[field].label ?? field }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { name: field, \"data-form-field\": true, id: `input-${field}-for-${provider.id}-provider`, type: provider.formFields[field].type ?? \"text\", placeholder: provider.formFields[field].placeholder ?? \"\", ...provider.formFields[field] })] }, `input-group-${provider.id}`));\n                                        }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", { id: `submitButton-${provider.id}`, type: \"submit\", tabIndex: 0, children: [\"Sign in with \", provider.name] })] })), (provider.type === \"email\" ||\n                                    provider.type === \"credentials\" ||\n                                    provider.type === \"webauthn\") &&\n                                    i + 1 < providers.length && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", {})] }, provider.id));\n                    })] }), conditionalUIProviderID && ConditionalUIScript(conditionalUIProviderID)] }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/signout.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/pages/signout.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SignoutPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nfunction SignoutPage(props) {\n    const { url, csrfToken, theme } = props;\n    return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"signout\", children: [theme?.brandColor && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `,\n                } })), theme?.buttonText && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `,\n                } })), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"card\", children: [theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { src: theme.logo, alt: \"Logo\", className: \"logo\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", { children: \"Signout\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"Are you sure you want to sign out?\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", { action: url?.toString(), method: \"POST\", children: [(0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { type: \"hidden\", name: \"csrfToken\", value: csrfToken }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", { id: \"submitButton\", type: \"submit\", children: \"Sign out\" })] })] })] }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9zaWdub3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ2pEO0FBQ2YsWUFBWSx3QkFBd0I7QUFDcEMsWUFBWSx3REFBSyxVQUFVLHVEQUF1RCx1REFBSSxZQUFZO0FBQ2xHO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLG1CQUFtQiwwQkFBMEIsdURBQUksWUFBWTtBQUM3RDtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxtQkFBbUIsSUFBSSx3REFBSyxVQUFVLDZDQUE2Qyx1REFBSSxVQUFVLGlEQUFpRCxHQUFHLHVEQUFJLFNBQVMscUJBQXFCLEdBQUcsdURBQUksUUFBUSxnREFBZ0QsR0FBRyx3REFBSyxXQUFXLG9EQUFvRCx1REFBSSxZQUFZLHFEQUFxRCxHQUFHLHVEQUFJLGFBQWEsMERBQTBELElBQUksSUFBSSxJQUFJO0FBQzVkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvc2lnbm91dC5qcz84ZTc2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2lnbm91dFBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgY3NyZlRva2VuLCB0aGVtZSB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIChfanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzaWdub3V0XCIsIGNoaWxkcmVuOiBbdGhlbWU/LmJyYW5kQ29sb3IgJiYgKF9qc3goXCJzdHlsZVwiLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZS5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgICAgICAgICAgICAgIH0gfSkpLCB0aGVtZT8uYnV0dG9uVGV4dCAmJiAoX2pzeChcInN0eWxlXCIsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJ1dHRvbi10ZXh0LWNvbG9yOiAke3RoZW1lLmJ1dHRvblRleHR9XG4gICAgICAgIH1cbiAgICAgIGAsXG4gICAgICAgICAgICAgICAgfSB9KSksIF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImNhcmRcIiwgY2hpbGRyZW46IFt0aGVtZT8ubG9nbyAmJiBfanN4KFwiaW1nXCIsIHsgc3JjOiB0aGVtZS5sb2dvLCBhbHQ6IFwiTG9nb1wiLCBjbGFzc05hbWU6IFwibG9nb1wiIH0pLCBfanN4KFwiaDFcIiwgeyBjaGlsZHJlbjogXCJTaWdub3V0XCIgfSksIF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNpZ24gb3V0P1wiIH0pLCBfanN4cyhcImZvcm1cIiwgeyBhY3Rpb246IHVybD8udG9TdHJpbmcoKSwgbWV0aG9kOiBcIlBPU1RcIiwgY2hpbGRyZW46IFtfanN4KFwiaW5wdXRcIiwgeyB0eXBlOiBcImhpZGRlblwiLCBuYW1lOiBcImNzcmZUb2tlblwiLCB2YWx1ZTogY3NyZlRva2VuIH0pLCBfanN4KFwiYnV0dG9uXCIsIHsgaWQ6IFwic3VibWl0QnV0dG9uXCIsIHR5cGU6IFwic3VibWl0XCIsIGNoaWxkcmVuOiBcIlNpZ24gb3V0XCIgfSldIH0pXSB9KV0gfSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/styles.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/pages/styles.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Generated by `pnpm css`\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`:root {\n  --border-width: 1px;\n  --border-radius: 0.5rem;\n  --color-error: #c94b4b;\n  --color-info: #157efb;\n  --color-info-hover: #0f6ddb;\n  --color-info-text: #fff;\n}\n\n.__next-auth-theme-auto,\n.__next-auth-theme-light {\n  --color-background: #ececec;\n  --color-background-hover: rgba(236, 236, 236, 0.8);\n  --color-background-card: #fff;\n  --color-text: #000;\n  --color-primary: #444;\n  --color-control-border: #bbb;\n  --color-button-active-background: #f9f9f9;\n  --color-button-active-border: #aaa;\n  --color-separator: #ccc;\n}\n\n.__next-auth-theme-dark {\n  --color-background: #161b22;\n  --color-background-hover: rgba(22, 27, 34, 0.8);\n  --color-background-card: #0d1117;\n  --color-text: #fff;\n  --color-primary: #ccc;\n  --color-control-border: #555;\n  --color-button-active-background: #060606;\n  --color-button-active-border: #666;\n  --color-separator: #444;\n}\n\n@media (prefers-color-scheme: dark) {\n  .__next-auth-theme-auto {\n    --color-background: #161b22;\n    --color-background-hover: rgba(22, 27, 34, 0.8);\n    --color-background-card: #0d1117;\n    --color-text: #fff;\n    --color-primary: #ccc;\n    --color-control-border: #555;\n    --color-button-active-background: #060606;\n    --color-button-active-border: #666;\n    --color-separator: #444;\n  }\n\n  button,\n  a.button {\n    color: var(--provider-dark-color, var(--color-primary)) !important;\n    background-color: var(\n      --provider-dark-bg,\n      var(--color-background)\n    ) !important;\n  }\n\n    :is(button,a.button):hover {\n      background-color: var(\n        --provider-dark-bg-hover,\n        var(--color-background-hover)\n      ) !important;\n    }\n\n    :is(button,a.button) span {\n      color: var(--provider-dark-bg) !important;\n    }\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: var(--color-background);\n  margin: 0;\n  padding: 0;\n  font-family:\n    ui-sans-serif,\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    \"Segoe UI\",\n    Roboto,\n    \"Helvetica Neue\",\n    Arial,\n    \"Noto Sans\",\n    sans-serif,\n    \"Apple Color Emoji\",\n    \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\",\n    \"Noto Color Emoji\";\n}\n\nh1 {\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  font-weight: 400;\n  color: var(--color-text);\n}\n\np {\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  color: var(--color-text);\n}\n\nform {\n  margin: 0;\n  padding: 0;\n}\n\nlabel {\n  font-weight: 500;\n  text-align: left;\n  margin-bottom: 0.25rem;\n  display: block;\n  color: var(--color-text);\n}\n\ninput[type] {\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: var(--border-width) solid var(--color-control-border);\n  background: var(--color-background-card);\n  font-size: 1rem;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n}\n\np {\n  font-size: 1.1rem;\n  line-height: 2rem;\n}\n\na.button {\n  text-decoration: none;\n  line-height: 1rem;\n}\n\na.button:link,\n  a.button:visited {\n    background-color: var(--color-background);\n    color: var(--color-primary);\n  }\n\nbutton span {\n  flex-grow: 1;\n}\n\nbutton,\na.button {\n  padding: 0.75rem 1rem;\n  color: var(--provider-color, var(--color-primary));\n  background-color: var(--provider-bg, var(--color-background));\n  border: 1px solid #00000031;\n  font-size: 0.9rem;\n  height: 50px;\n  border-radius: var(--border-radius);\n  transition: background-color 250ms ease-in-out;\n  font-weight: 300;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n:is(button,a.button):hover {\n    background-color: var(--provider-bg-hover, var(--color-background-hover));\n    cursor: pointer;\n  }\n\n:is(button,a.button):active {\n    cursor: pointer;\n  }\n\n:is(button,a.button) span {\n    color: #fff;\n  }\n\n:is(button,a.button) #provider-logo {\n    width: 25px;\n    display: block;\n  }\n\n#submitButton {\n  color: var(--button-text-color, var(--color-info-text));\n  background-color: var(--brand-color, var(--color-info));\n  width: 100%;\n}\n\n#submitButton:hover {\n    background-color: var(\n      --button-hover-bg,\n      var(--color-info-hover)\n    ) !important;\n  }\n\na.site {\n  color: var(--color-primary);\n  text-decoration: none;\n  font-size: 1rem;\n  line-height: 2rem;\n}\n\na.site:hover {\n    text-decoration: underline;\n  }\n\n.page {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.page > div {\n    text-align: center;\n  }\n\n.error a.button {\n    padding-left: 2rem;\n    padding-right: 2rem;\n    margin-top: 0.5rem;\n  }\n\n.error .message {\n    margin-bottom: 1.5rem;\n  }\n\n.signin input[type=\"text\"] {\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n  }\n\n.signin hr {\n    display: block;\n    border: 0;\n    border-top: 1px solid var(--color-separator);\n    margin: 2rem auto 1rem auto;\n    overflow: visible;\n  }\n\n.signin hr::before {\n      content: \"or\";\n      background: var(--color-background-card);\n      color: #888;\n      padding: 0 0.4rem;\n      position: relative;\n      top: -0.7rem;\n    }\n\n.signin .error {\n    background: #f5f5f5;\n    font-weight: 500;\n    border-radius: 0.3rem;\n    background: var(--color-error);\n  }\n\n.signin .error p {\n      text-align: left;\n      padding: 0.5rem 1rem;\n      font-size: 0.9rem;\n      line-height: 1.2rem;\n      color: var(--color-info-text);\n    }\n\n.signin > div,\n  .signin form {\n    display: block;\n  }\n\n.signin > div input[type], .signin form input[type] {\n      margin-bottom: 0.5rem;\n    }\n\n.signin > div button, .signin form button {\n      width: 100%;\n    }\n\n.signin .provider + .provider {\n    margin-top: 1rem;\n  }\n\n.logo {\n  display: inline-block;\n  max-width: 150px;\n  margin: 1.25rem 0;\n  max-height: 70px;\n}\n\n.card {\n  background-color: var(--color-background-card);\n  border-radius: 1rem;\n  padding: 1.25rem 2rem;\n}\n\n.card .header {\n    color: var(--color-primary);\n  }\n\n.card input[type]::-moz-placeholder {\n    color: color-mix(\n      in srgb,\n      var(--color-text) 20%,\n      var(--color-button-active-background)\n    );\n  }\n\n.card input[type]::placeholder {\n    color: color-mix(\n      in srgb,\n      var(--color-text) 20%,\n      var(--color-button-active-background)\n    );\n  }\n\n.card input[type] {\n    background: color-mix(in srgb, var(--color-background-card) 95%, black);\n  }\n\n.section-header {\n  color: var(--color-text);\n}\n\n@media screen and (min-width: 450px) {\n  .card {\n    margin: 2rem 0;\n    width: 368px;\n  }\n}\n\n@media screen and (max-width: 450px) {\n  .card {\n    margin: 1rem 0;\n    width: 343px;\n  }\n}\n`);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/styles.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/verify-request.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/pages/verify-request.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VerifyRequestPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nfunction VerifyRequestPage(props) {\n    const { url, theme } = props;\n    return ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"verify-request\", children: [theme.brandColor && ((0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", { dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `,\n                } })), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"card\", children: [theme.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { src: theme.logo, alt: \"Logo\", className: \"logo\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", { children: \"Check your email\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: \"A sign in link has been sent to your email address.\" }), (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", { children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", { className: \"site\", href: url.origin, children: url.host }) })] })] }));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy92ZXJpZnktcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNqRDtBQUNmLFlBQVksYUFBYTtBQUN6QixZQUFZLHdEQUFLLFVBQVUsNkRBQTZELHVEQUFJLFlBQVk7QUFDeEc7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsbUJBQW1CLElBQUksd0RBQUssVUFBVSw0Q0FBNEMsdURBQUksVUFBVSxpREFBaUQsR0FBRyx1REFBSSxTQUFTLDhCQUE4QixHQUFHLHVEQUFJLFFBQVEsaUVBQWlFLEdBQUcsdURBQUksUUFBUSxVQUFVLHVEQUFJLFFBQVEseURBQXlELEdBQUcsSUFBSSxJQUFJO0FBQ3hYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvdmVyaWZ5LXJlcXVlc3QuanM/ZTYxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqc3ggYXMgX2pzeCwganN4cyBhcyBfanN4cyB9IGZyb20gXCJwcmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFZlcmlmeVJlcXVlc3RQYWdlKHByb3BzKSB7XG4gICAgY29uc3QgeyB1cmwsIHRoZW1lIH0gPSBwcm9wcztcbiAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInZlcmlmeS1yZXF1ZXN0XCIsIGNoaWxkcmVuOiBbdGhlbWUuYnJhbmRDb2xvciAmJiAoX2pzeChcInN0eWxlXCIsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJyYW5kLWNvbG9yOiAke3RoZW1lLmJyYW5kQ29sb3J9XG4gICAgICAgIH1cbiAgICAgIGAsXG4gICAgICAgICAgICAgICAgfSB9KSksIF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImNhcmRcIiwgY2hpbGRyZW46IFt0aGVtZS5sb2dvICYmIF9qc3goXCJpbWdcIiwgeyBzcmM6IHRoZW1lLmxvZ28sIGFsdDogXCJMb2dvXCIsIGNsYXNzTmFtZTogXCJsb2dvXCIgfSksIF9qc3goXCJoMVwiLCB7IGNoaWxkcmVuOiBcIkNoZWNrIHlvdXIgZW1haWxcIiB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogXCJBIHNpZ24gaW4gbGluayBoYXMgYmVlbiBzZW50IHRvIHlvdXIgZW1haWwgYWRkcmVzcy5cIiB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgeyBjbGFzc05hbWU6IFwic2l0ZVwiLCBocmVmOiB1cmwub3JpZ2luLCBjaGlsZHJlbjogdXJsLmhvc3QgfSkgfSldIH0pXSB9KSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/pages/verify-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/actions.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/actions.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAuthAction: () => (/* binding */ isAuthAction)\n/* harmony export */ });\nconst actions = [\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\",\n    \"webauthn-options\",\n];\nfunction isAuthAction(action) {\n    return actions.includes(action);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9hY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvYWN0aW9ucy5qcz82ZmFhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFjdGlvbnMgPSBbXG4gICAgXCJwcm92aWRlcnNcIixcbiAgICBcInNlc3Npb25cIixcbiAgICBcImNzcmZcIixcbiAgICBcInNpZ25pblwiLFxuICAgIFwic2lnbm91dFwiLFxuICAgIFwiY2FsbGJhY2tcIixcbiAgICBcInZlcmlmeS1yZXF1ZXN0XCIsXG4gICAgXCJlcnJvclwiLFxuICAgIFwid2ViYXV0aG4tb3B0aW9uc1wiLFxuXTtcbmV4cG9ydCBmdW5jdGlvbiBpc0F1dGhBY3Rpb24oYWN0aW9uKSB7XG4gICAgcmV0dXJuIGFjdGlvbnMuaW5jbHVkZXMoYWN0aW9uKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/actions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/assert.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/assert.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertConfig: () => (/* binding */ assertConfig)\n/* harmony export */ });\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cookie.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\n\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    }\n    catch {\n        return false;\n    }\n}\nfunction isSemverString(version) {\n    return /^v\\d+(?:\\.\\d+){0,2}$/.test(version);\n}\nlet hasCredentials = false;\nlet hasEmail = false;\nlet hasWebAuthn = false;\nconst emailMethods = [\n    \"createVerificationToken\",\n    \"useVerificationToken\",\n    \"getUserByEmail\",\n];\nconst sessionMethods = [\n    \"createUser\",\n    \"getUser\",\n    \"getUserByEmail\",\n    \"getUserByAccount\",\n    \"updateUser\",\n    \"linkAccount\",\n    \"createSession\",\n    \"getSessionAndUser\",\n    \"updateSession\",\n    \"deleteSession\",\n];\nconst webauthnMethods = [\n    \"createUser\",\n    \"getUser\",\n    \"linkAccount\",\n    \"getAccount\",\n    \"getAuthenticator\",\n    \"createAuthenticator\",\n    \"listAuthenticatorsByUserId\",\n    \"updateAuthenticatorCounter\",\n];\n/**\n * Verify that the user configured Auth.js correctly.\n * Good place to mention deprecations as well.\n *\n * This is invoked before the init method, so default values are not available yet.\n */\nfunction assertConfig(request, options) {\n    const { url } = request;\n    const warnings = [];\n    if (!warned && options.debug)\n        warnings.push(\"debug-enabled\");\n    if (!options.trustHost) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UntrustedHost(`Host must be trusted. URL was: ${request.url}`);\n    }\n    if (!options.secret?.length) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingSecret(\"Please define a `secret`.\");\n    }\n    const callbackUrlParam = request.query?.callbackUrl;\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.origin)) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl } = (0,_cookie_js__WEBPACK_IMPORTED_MODULE_0__.defaultCookies)(options.useSecureCookies ?? url.protocol === \"https:\");\n    const callbackUrlCookie = request.cookies?.[options.cookies?.callbackUrl?.name ?? defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.origin)) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    // Keep track of webauthn providers that use conditional UI\n    let hasConditionalUIProvider = false;\n    for (const p of options.providers) {\n        const provider = typeof p === \"function\" ? p() : p;\n        if ((provider.type === \"oauth\" || provider.type === \"oidc\") &&\n            !(provider.issuer ?? provider.options?.issuer)) {\n            const { authorization: a, token: t, userinfo: u } = provider;\n            let key;\n            if (typeof a !== \"string\" && !a?.url)\n                key = \"authorization\";\n            else if (typeof t !== \"string\" && !t?.url)\n                key = \"token\";\n            else if (typeof u !== \"string\" && !u?.url)\n                key = \"userinfo\";\n            if (key) {\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidEndpoints(`Provider \"${provider.id}\" is missing both \\`issuer\\` and \\`${key}\\` endpoint config. At least one of them is required.`);\n            }\n        }\n        if (provider.type === \"credentials\")\n            hasCredentials = true;\n        else if (provider.type === \"email\")\n            hasEmail = true;\n        else if (provider.type === \"webauthn\") {\n            hasWebAuthn = true;\n            // Validate simpleWebAuthnBrowserVersion\n            if (provider.simpleWebAuthnBrowserVersion &&\n                !isSemverString(provider.simpleWebAuthnBrowserVersion)) {\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthError(`Invalid provider config for \"${provider.id}\": simpleWebAuthnBrowserVersion \"${provider.simpleWebAuthnBrowserVersion}\" must be a valid semver string.`);\n            }\n            if (provider.enableConditionalUI) {\n                // Make sure only one webauthn provider has \"enableConditionalUI\" set to true\n                if (hasConditionalUIProvider) {\n                    return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.DuplicateConditionalUI(`Multiple webauthn providers have 'enableConditionalUI' set to True. Only one provider can have this option enabled at a time.`);\n                }\n                hasConditionalUIProvider = true;\n                // Make sure at least one formField has \"webauthn\" in its autocomplete param\n                const hasWebauthnFormField = Object.values(provider.formFields).some((f) => f.autocomplete && f.autocomplete.toString().indexOf(\"webauthn\") > -1);\n                if (!hasWebauthnFormField) {\n                    return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingWebAuthnAutocomplete(`Provider \"${provider.id}\" has 'enableConditionalUI' set to True, but none of its formFields have 'webauthn' in their autocomplete param.`);\n                }\n            }\n        }\n    }\n    if (hasCredentials) {\n        const dbStrategy = options.session?.strategy === \"database\";\n        const onlyCredentials = !options.providers.some((p) => (typeof p === \"function\" ? p() : p).type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnsupportedStrategy(\"Signing in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p) => {\n            const provider = typeof p === \"function\" ? p() : p;\n            return provider.type === \"credentials\" && !provider.authorize;\n        });\n        if (credentialsNoAuthorize) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    const { adapter, session } = options;\n    let requiredMethods = [];\n    if (hasEmail ||\n        session?.strategy === \"database\" ||\n        (!session?.strategy && adapter)) {\n        if (hasEmail) {\n            if (!adapter)\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"Email login requires an adapter.\");\n            requiredMethods.push(...emailMethods);\n        }\n        else {\n            if (!adapter)\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"Database session requires an adapter.\");\n            requiredMethods.push(...sessionMethods);\n        }\n    }\n    if (hasWebAuthn) {\n        // Log experimental warning\n        if (options.experimental?.enableWebAuthn) {\n            warnings.push(\"experimental-webauthn\");\n        }\n        else {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.ExperimentalFeatureNotEnabled(\"WebAuthn is an experimental feature. To enable it, set `experimental.enableWebAuthn` to `true` in your config.\");\n        }\n        if (!adapter)\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"WebAuthn requires an adapter.\");\n        requiredMethods.push(...webauthnMethods);\n    }\n    if (adapter) {\n        const missing = requiredMethods.filter((m) => !(m in adapter));\n        if (missing.length) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapterMethods(`Required adapter methods were missing: ${missing.join(\", \")}`);\n        }\n    }\n    if (!warned)\n        warned = true;\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/assert.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/callback-url.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/callback-url.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCallbackUrl: () => (/* binding */ createCallbackUrl)\n/* harmony export */ });\n/**\n * Get callback URL based on query param / cookie + validation,\n * and add it to `req.options.callbackUrl`.\n */\nasync function createCallbackUrl({ options, paramValue, cookieValue, }) {\n    const { url, callbacks } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        // If callbackUrl form field or query parameter is passed try to use it if allowed\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin,\n        });\n    }\n    else if (cookieValue) {\n        // If no callbackUrl specified, try using the value from the cookie if allowed\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin,\n        });\n    }\n    return {\n        callbackUrl,\n        // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9jYWxsYmFjay11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLG1DQUFtQztBQUM3RSxZQUFZLGlCQUFpQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvY2FsbGJhY2stdXJsLmpzPzA2NDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgY2FsbGJhY2sgVVJMIGJhc2VkIG9uIHF1ZXJ5IHBhcmFtIC8gY29va2llICsgdmFsaWRhdGlvbixcbiAqIGFuZCBhZGQgaXQgdG8gYHJlcS5vcHRpb25zLmNhbGxiYWNrVXJsYC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNhbGxiYWNrVXJsKHsgb3B0aW9ucywgcGFyYW1WYWx1ZSwgY29va2llVmFsdWUsIH0pIHtcbiAgICBjb25zdCB7IHVybCwgY2FsbGJhY2tzIH0gPSBvcHRpb25zO1xuICAgIGxldCBjYWxsYmFja1VybCA9IHVybC5vcmlnaW47XG4gICAgaWYgKHBhcmFtVmFsdWUpIHtcbiAgICAgICAgLy8gSWYgY2FsbGJhY2tVcmwgZm9ybSBmaWVsZCBvciBxdWVyeSBwYXJhbWV0ZXIgaXMgcGFzc2VkIHRyeSB0byB1c2UgaXQgaWYgYWxsb3dlZFxuICAgICAgICBjYWxsYmFja1VybCA9IGF3YWl0IGNhbGxiYWNrcy5yZWRpcmVjdCh7XG4gICAgICAgICAgICB1cmw6IHBhcmFtVmFsdWUsXG4gICAgICAgICAgICBiYXNlVXJsOiB1cmwub3JpZ2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY29va2llVmFsdWUpIHtcbiAgICAgICAgLy8gSWYgbm8gY2FsbGJhY2tVcmwgc3BlY2lmaWVkLCB0cnkgdXNpbmcgdGhlIHZhbHVlIGZyb20gdGhlIGNvb2tpZSBpZiBhbGxvd2VkXG4gICAgICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgICAgICAgIHVybDogY29va2llVmFsdWUsXG4gICAgICAgICAgICBiYXNlVXJsOiB1cmwub3JpZ2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2FsbGJhY2tVcmwsXG4gICAgICAgIC8vIFNhdmUgY2FsbGJhY2sgVVJMIGluIGEgY29va2llIHNvIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHN1YnNlcXVlbnQgcmVxdWVzdHMgaW4gc2lnbmluL3NpZ25vdXQvY2FsbGJhY2sgZmxvd1xuICAgICAgICBjYWxsYmFja1VybENvb2tpZTogY2FsbGJhY2tVcmwgIT09IGNvb2tpZVZhbHVlID8gY2FsbGJhY2tVcmwgOiB1bmRlZmluZWQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/callback-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionStore: () => (/* binding */ SessionStore),\n/* harmony export */   defaultCookies: () => (/* binding */ defaultCookies)\n/* harmony export */ });\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SessionStore_instances, _SessionStore_chunks, _SessionStore_option, _SessionStore_logger, _SessionStore_chunk, _SessionStore_clean;\n// Uncomment to recalculate the estimated size\n// of an empty session cookie\n// import { serialize } from \"cookie\"\n// console.log(\n//   \"Cookie estimated to be \",\n//   serialize(`__Secure.authjs.session-token.0`, \"\", {\n//     expires: new Date(),\n//     httpOnly: true,\n//     maxAge: Number.MAX_SAFE_INTEGER,\n//     path: \"/\",\n//     sameSite: \"strict\",\n//     secure: true,\n//     domain: \"example.com\",\n//   }).length,\n//   \" bytes\"\n// )\nconst ALLOWED_COOKIE_SIZE = 4096;\n// Based on commented out section above\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 160;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\n/**\n * Use secure cookies if the site uses HTTPS\n * This being conditional allows cookies to work non-HTTPS development URLs\n * Honour secure cookie option, which sets 'secure' and also adds '__Secure-'\n * prefix, but enable them by default if the site URL is HTTPS; but not for\n * non-HTTPS URLs like http://localhost which are used in development).\n * For more on prefixes see https://googlechrome.github.io/samples/cookie-prefixes/\n *\n * @TODO Review cookie settings (names, options)\n */\nfunction defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        // default cookie options\n        sessionToken: {\n            name: `${cookiePrefix}authjs.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}authjs.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        csrfToken: {\n            // Default to __Host- for CSRF token for additional protection if using useSecureCookies\n            // NB: The `__Host-` prefix is stricter than the `__Secure-` prefix.\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}authjs.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}authjs.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15, // 15 minutes in seconds\n            },\n        },\n        state: {\n            name: `${cookiePrefix}authjs.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15, // 15 minutes in seconds\n            },\n        },\n        nonce: {\n            name: `${cookiePrefix}authjs.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n            },\n        },\n        webauthnChallenge: {\n            name: `${cookiePrefix}authjs.challenge`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15, // 15 minutes in seconds\n            },\n        },\n    };\n}\nclass SessionStore {\n    constructor(option, cookies, logger) {\n        _SessionStore_instances.add(this);\n        _SessionStore_chunks.set(this, {});\n        _SessionStore_option.set(this, void 0);\n        _SessionStore_logger.set(this, void 0);\n        __classPrivateFieldSet(this, _SessionStore_logger, logger, \"f\");\n        __classPrivateFieldSet(this, _SessionStore_option, option, \"f\");\n        if (!cookies)\n            return;\n        const { name: sessionCookiePrefix } = option;\n        for (const [name, value] of Object.entries(cookies)) {\n            if (!name.startsWith(sessionCookiePrefix) || !value)\n                continue;\n            __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n        }\n    }\n    /**\n     * The JWT Session or database Session ID\n     * constructed from the cookie chunks.\n     */\n    get value() {\n        // Sort the chunks by their keys before joining\n        const sortedKeys = Object.keys(__classPrivateFieldGet(this, _SessionStore_chunks, \"f\")).sort((a, b) => {\n            const aSuffix = parseInt(a.split(\".\").pop() || \"0\");\n            const bSuffix = parseInt(b.split(\".\").pop() || \"0\");\n            return aSuffix - bSuffix;\n        });\n        // Use the sorted keys to join the chunks in the correct order\n        return sortedKeys.map((key) => __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[key]).join(\"\");\n    }\n    /**\n     * Given a cookie value, return new cookies, chunked, to fit the allowed cookie size.\n     * If the cookie has changed from chunked to unchunked or vice versa,\n     * it deletes the old cookies as well.\n     */\n    chunk(value, options) {\n        // Assume all cookies should be cleaned by default\n        const cookies = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this);\n        // Calculate new chunks\n        const chunked = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_chunk).call(this, {\n            name: __classPrivateFieldGet(this, _SessionStore_option, \"f\").name,\n            value,\n            options: { ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options, ...options },\n        });\n        // Update stored chunks / cookies\n        for (const chunk of chunked) {\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    /** Returns a list of cookies that should be cleaned. */\n    clean() {\n        return Object.values(__classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this));\n    }\n}\n_SessionStore_chunks = new WeakMap(), _SessionStore_option = new WeakMap(), _SessionStore_logger = new WeakMap(), _SessionStore_instances = new WeakSet(), _SessionStore_chunk = function _SessionStore_chunk(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[cookie.name] = cookie.value;\n        return [cookie];\n    }\n    const cookies = [];\n    for (let i = 0; i < chunkCount; i++) {\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({ ...cookie, name, value });\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n    }\n    __classPrivateFieldGet(this, _SessionStore_logger, \"f\").debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c) => c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE),\n    });\n    return cookies;\n}, _SessionStore_clean = function _SessionStore_clean() {\n    const cleanedChunks = {};\n    for (const name in __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")) {\n        delete __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")?.[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: { ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options, maxAge: 0 },\n        };\n    }\n    return cleanedChunks;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/cookie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/date.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/date.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromDate: () => (/* binding */ fromDate)\n/* harmony export */ });\n/**\n * Takes a number in seconds and returns the date in the future.\n * Optionally takes a second date parameter. In that case\n * the date in the future will be calculated from that date instead of now.\n */\nfunction fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9kYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvZGF0ZS5qcz8yNTVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGFrZXMgYSBudW1iZXIgaW4gc2Vjb25kcyBhbmQgcmV0dXJucyB0aGUgZGF0ZSBpbiB0aGUgZnV0dXJlLlxuICogT3B0aW9uYWxseSB0YWtlcyBhIHNlY29uZCBkYXRlIHBhcmFtZXRlci4gSW4gdGhhdCBjYXNlXG4gKiB0aGUgZGF0ZSBpbiB0aGUgZnV0dXJlIHdpbGwgYmUgY2FsY3VsYXRlZCBmcm9tIHRoYXQgZGF0ZSBpbnN0ZWFkIG9mIG5vdy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21EYXRlKHRpbWUsIGRhdGUgPSBEYXRlLm5vdygpKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUgKyB0aW1lICogMTAwMCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/date.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/env.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/env.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createActionURL: () => (/* binding */ createActionURL),\n/* harmony export */   setEnvDefaults: () => (/* binding */ setEnvDefaults)\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js\");\n\n/** Set default env variables on the config object */\nfunction setEnvDefaults(envObject, config) {\n    try {\n        const url = envObject.AUTH_URL;\n        if (url && !config.basePath)\n            config.basePath = new URL(url).pathname;\n    }\n    catch {\n    }\n    finally {\n        config.basePath ?? (config.basePath = `/auth`);\n    }\n    if (!config.secret?.length) {\n        config.secret = [];\n        const secret = envObject.AUTH_SECRET;\n        if (secret)\n            config.secret.push(secret);\n        for (const i of [1, 2, 3]) {\n            const secret = envObject[`AUTH_SECRET_${i}`];\n            if (secret)\n                config.secret.unshift(secret);\n        }\n    }\n    config.redirectProxyUrl ?? (config.redirectProxyUrl = envObject.AUTH_REDIRECT_PROXY_URL);\n    config.trustHost ?? (config.trustHost = !!(envObject.AUTH_URL ??\n        envObject.AUTH_TRUST_HOST ??\n        envObject.VERCEL ??\n        envObject.CF_PAGES ??\n        envObject.NODE_ENV !== \"production\"));\n    config.providers = config.providers.map((p) => {\n        const finalProvider = typeof p === \"function\" ? p({}) : p;\n        const ID = finalProvider.id.toUpperCase().replace(/-/g, \"_\");\n        if (finalProvider.type === \"oauth\" || finalProvider.type === \"oidc\") {\n            finalProvider.clientId ?? (finalProvider.clientId = envObject[`AUTH_${ID}_ID`]);\n            finalProvider.clientSecret ?? (finalProvider.clientSecret = envObject[`AUTH_${ID}_SECRET`]);\n            if (finalProvider.type === \"oidc\") {\n                finalProvider.issuer ?? (finalProvider.issuer = envObject[`AUTH_${ID}_ISSUER`]);\n            }\n        }\n        else if (finalProvider.type === \"email\") {\n            finalProvider.apiKey ?? (finalProvider.apiKey = envObject[`AUTH_${ID}_KEY`]);\n        }\n        return finalProvider;\n    });\n}\nfunction createActionURL(action, protocol, headers, envObject, basePath) {\n    let envUrl = envObject.AUTH_URL ?? envObject.NEXTAUTH_URL;\n    let url;\n    if (envUrl) {\n        url = new URL(envUrl);\n        if (basePath && basePath !== \"/\" && url.pathname !== \"/\") {\n            _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.warn(url.pathname === basePath\n                ? \"env-url-basepath-redundant\"\n                : \"env-url-basepath-mismatch\");\n            url.pathname = \"/\";\n        }\n    }\n    else {\n        const detectedHost = headers.get(\"x-forwarded-host\") ?? headers.get(\"host\");\n        const detectedProtocol = headers.get(\"x-forwarded-proto\") ?? protocol ?? \"https\";\n        const _protocol = detectedProtocol.endsWith(\":\")\n            ? detectedProtocol\n            : detectedProtocol + \":\";\n        url = new URL(`${_protocol}//${detectedHost}`);\n    }\n    // remove trailing slash\n    const sanitizedUrl = url.toString().replace(/\\/$/, \"\");\n    if (basePath) {\n        // remove leading and trailing slash\n        const sanitizedBasePath = basePath?.replace(/(^\\/|\\/$)/g, \"\") ?? \"\";\n        return new URL(`${sanitizedUrl}/${sanitizedBasePath}/${action}`);\n    }\n    return new URL(`${sanitizedUrl}/${action}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ3JDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxFQUFFO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBLGtGQUFrRixHQUFHO0FBQ3JGLDBGQUEwRixHQUFHO0FBQzdGO0FBQ0Esa0ZBQWtGLEdBQUc7QUFDckY7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLEdBQUc7QUFDakY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksOENBQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixVQUFVLElBQUksYUFBYTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsYUFBYSxHQUFHLGtCQUFrQixHQUFHLE9BQU87QUFDdEU7QUFDQSxzQkFBc0IsYUFBYSxHQUFHLE9BQU87QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9lbnYuanM/MmI4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tIFwiLi9sb2dnZXIuanNcIjtcbi8qKiBTZXQgZGVmYXVsdCBlbnYgdmFyaWFibGVzIG9uIHRoZSBjb25maWcgb2JqZWN0ICovXG5leHBvcnQgZnVuY3Rpb24gc2V0RW52RGVmYXVsdHMoZW52T2JqZWN0LCBjb25maWcpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB1cmwgPSBlbnZPYmplY3QuQVVUSF9VUkw7XG4gICAgICAgIGlmICh1cmwgJiYgIWNvbmZpZy5iYXNlUGF0aClcbiAgICAgICAgICAgIGNvbmZpZy5iYXNlUGF0aCA9IG5ldyBVUkwodXJsKS5wYXRobmFtZTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgY29uZmlnLmJhc2VQYXRoID8/IChjb25maWcuYmFzZVBhdGggPSBgL2F1dGhgKTtcbiAgICB9XG4gICAgaWYgKCFjb25maWcuc2VjcmV0Py5sZW5ndGgpIHtcbiAgICAgICAgY29uZmlnLnNlY3JldCA9IFtdO1xuICAgICAgICBjb25zdCBzZWNyZXQgPSBlbnZPYmplY3QuQVVUSF9TRUNSRVQ7XG4gICAgICAgIGlmIChzZWNyZXQpXG4gICAgICAgICAgICBjb25maWcuc2VjcmV0LnB1c2goc2VjcmV0KTtcbiAgICAgICAgZm9yIChjb25zdCBpIG9mIFsxLCAyLCAzXSkge1xuICAgICAgICAgICAgY29uc3Qgc2VjcmV0ID0gZW52T2JqZWN0W2BBVVRIX1NFQ1JFVF8ke2l9YF07XG4gICAgICAgICAgICBpZiAoc2VjcmV0KVxuICAgICAgICAgICAgICAgIGNvbmZpZy5zZWNyZXQudW5zaGlmdChzZWNyZXQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbmZpZy5yZWRpcmVjdFByb3h5VXJsID8/IChjb25maWcucmVkaXJlY3RQcm94eVVybCA9IGVudk9iamVjdC5BVVRIX1JFRElSRUNUX1BST1hZX1VSTCk7XG4gICAgY29uZmlnLnRydXN0SG9zdCA/PyAoY29uZmlnLnRydXN0SG9zdCA9ICEhKGVudk9iamVjdC5BVVRIX1VSTCA/P1xuICAgICAgICBlbnZPYmplY3QuQVVUSF9UUlVTVF9IT1NUID8/XG4gICAgICAgIGVudk9iamVjdC5WRVJDRUwgPz9cbiAgICAgICAgZW52T2JqZWN0LkNGX1BBR0VTID8/XG4gICAgICAgIGVudk9iamVjdC5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpKTtcbiAgICBjb25maWcucHJvdmlkZXJzID0gY29uZmlnLnByb3ZpZGVycy5tYXAoKHApID0+IHtcbiAgICAgICAgY29uc3QgZmluYWxQcm92aWRlciA9IHR5cGVvZiBwID09PSBcImZ1bmN0aW9uXCIgPyBwKHt9KSA6IHA7XG4gICAgICAgIGNvbnN0IElEID0gZmluYWxQcm92aWRlci5pZC50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoLy0vZywgXCJfXCIpO1xuICAgICAgICBpZiAoZmluYWxQcm92aWRlci50eXBlID09PSBcIm9hdXRoXCIgfHwgZmluYWxQcm92aWRlci50eXBlID09PSBcIm9pZGNcIikge1xuICAgICAgICAgICAgZmluYWxQcm92aWRlci5jbGllbnRJZCA/PyAoZmluYWxQcm92aWRlci5jbGllbnRJZCA9IGVudk9iamVjdFtgQVVUSF8ke0lEfV9JRGBdKTtcbiAgICAgICAgICAgIGZpbmFsUHJvdmlkZXIuY2xpZW50U2VjcmV0ID8/IChmaW5hbFByb3ZpZGVyLmNsaWVudFNlY3JldCA9IGVudk9iamVjdFtgQVVUSF8ke0lEfV9TRUNSRVRgXSk7XG4gICAgICAgICAgICBpZiAoZmluYWxQcm92aWRlci50eXBlID09PSBcIm9pZGNcIikge1xuICAgICAgICAgICAgICAgIGZpbmFsUHJvdmlkZXIuaXNzdWVyID8/IChmaW5hbFByb3ZpZGVyLmlzc3VlciA9IGVudk9iamVjdFtgQVVUSF8ke0lEfV9JU1NVRVJgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZmluYWxQcm92aWRlci50eXBlID09PSBcImVtYWlsXCIpIHtcbiAgICAgICAgICAgIGZpbmFsUHJvdmlkZXIuYXBpS2V5ID8/IChmaW5hbFByb3ZpZGVyLmFwaUtleSA9IGVudk9iamVjdFtgQVVUSF8ke0lEfV9LRVlgXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbmFsUHJvdmlkZXI7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQWN0aW9uVVJMKGFjdGlvbiwgcHJvdG9jb2wsIGhlYWRlcnMsIGVudk9iamVjdCwgYmFzZVBhdGgpIHtcbiAgICBsZXQgZW52VXJsID0gZW52T2JqZWN0LkFVVEhfVVJMID8/IGVudk9iamVjdC5ORVhUQVVUSF9VUkw7XG4gICAgbGV0IHVybDtcbiAgICBpZiAoZW52VXJsKSB7XG4gICAgICAgIHVybCA9IG5ldyBVUkwoZW52VXJsKTtcbiAgICAgICAgaWYgKGJhc2VQYXRoICYmIGJhc2VQYXRoICE9PSBcIi9cIiAmJiB1cmwucGF0aG5hbWUgIT09IFwiL1wiKSB7XG4gICAgICAgICAgICBsb2dnZXIud2Fybih1cmwucGF0aG5hbWUgPT09IGJhc2VQYXRoXG4gICAgICAgICAgICAgICAgPyBcImVudi11cmwtYmFzZXBhdGgtcmVkdW5kYW50XCJcbiAgICAgICAgICAgICAgICA6IFwiZW52LXVybC1iYXNlcGF0aC1taXNtYXRjaFwiKTtcbiAgICAgICAgICAgIHVybC5wYXRobmFtZSA9IFwiL1wiO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBkZXRlY3RlZEhvc3QgPSBoZWFkZXJzLmdldChcIngtZm9yd2FyZGVkLWhvc3RcIikgPz8gaGVhZGVycy5nZXQoXCJob3N0XCIpO1xuICAgICAgICBjb25zdCBkZXRlY3RlZFByb3RvY29sID0gaGVhZGVycy5nZXQoXCJ4LWZvcndhcmRlZC1wcm90b1wiKSA/PyBwcm90b2NvbCA/PyBcImh0dHBzXCI7XG4gICAgICAgIGNvbnN0IF9wcm90b2NvbCA9IGRldGVjdGVkUHJvdG9jb2wuZW5kc1dpdGgoXCI6XCIpXG4gICAgICAgICAgICA/IGRldGVjdGVkUHJvdG9jb2xcbiAgICAgICAgICAgIDogZGV0ZWN0ZWRQcm90b2NvbCArIFwiOlwiO1xuICAgICAgICB1cmwgPSBuZXcgVVJMKGAke19wcm90b2NvbH0vLyR7ZGV0ZWN0ZWRIb3N0fWApO1xuICAgIH1cbiAgICAvLyByZW1vdmUgdHJhaWxpbmcgc2xhc2hcbiAgICBjb25zdCBzYW5pdGl6ZWRVcmwgPSB1cmwudG9TdHJpbmcoKS5yZXBsYWNlKC9cXC8kLywgXCJcIik7XG4gICAgaWYgKGJhc2VQYXRoKSB7XG4gICAgICAgIC8vIHJlbW92ZSBsZWFkaW5nIGFuZCB0cmFpbGluZyBzbGFzaFxuICAgICAgICBjb25zdCBzYW5pdGl6ZWRCYXNlUGF0aCA9IGJhc2VQYXRoPy5yZXBsYWNlKC8oXlxcL3xcXC8kKS9nLCBcIlwiKSA/PyBcIlwiO1xuICAgICAgICByZXR1cm4gbmV3IFVSTChgJHtzYW5pdGl6ZWRVcmx9LyR7c2FuaXRpemVkQmFzZVBhdGh9LyR7YWN0aW9ufWApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFVSTChgJHtzYW5pdGl6ZWRVcmx9LyR7YWN0aW9ufWApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/env.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   setLogger: () => (/* binding */ setLogger)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n\nconst red = \"\\x1b[31m\";\nconst yellow = \"\\x1b[33m\";\nconst grey = \"\\x1b[90m\";\nconst reset = \"\\x1b[0m\";\nconst logger = {\n    error(error) {\n        const name = error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError ? error.type : error.name;\n        console.error(`${red}[auth][error]${reset} ${name}: ${error.message}`);\n        if (error.cause &&\n            typeof error.cause === \"object\" &&\n            \"err\" in error.cause &&\n            error.cause.err instanceof Error) {\n            const { err, ...data } = error.cause;\n            console.error(`${red}[auth][cause]${reset}:`, err.stack);\n            if (data)\n                console.error(`${red}[auth][details]${reset}:`, JSON.stringify(data, null, 2));\n        }\n        else if (error.stack) {\n            console.error(error.stack.replace(/.*/, \"\").substring(1));\n        }\n    },\n    warn(code) {\n        const url = `https://warnings.authjs.dev#${code}`;\n        console.warn(`${yellow}[auth][warn][${code}]${reset}`, `Read more: ${url}`);\n    },\n    debug(message, metadata) {\n        console.log(`${grey}[auth][debug]:${reset} ${message}`, JSON.stringify(metadata, null, 2));\n    },\n};\n/**\n * Override the built-in logger with user's implementation.\n * Any `undefined` level will use the default logger.\n */\nfunction setLogger(newLogger = {}, debug) {\n    // Turn off debug logging if `debug` isn't set to `true`\n    if (!debug)\n        logger.debug = () => { };\n    if (newLogger.error)\n        logger.error = newLogger.error;\n    if (newLogger.warn)\n        logger.warn = newLogger.warn;\n    if (newLogger.debug)\n        logger.debug = newLogger.debug;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9sb2dnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHNDQUFzQyxpREFBUztBQUMvQyx5QkFBeUIsSUFBSSxlQUFlLE9BQU8sRUFBRSxLQUFLLElBQUksY0FBYztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixlQUFlO0FBQ25DLDZCQUE2QixJQUFJLGVBQWUsTUFBTTtBQUN0RDtBQUNBLGlDQUFpQyxJQUFJLGlCQUFpQixNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsbURBQW1ELEtBQUs7QUFDeEQsd0JBQXdCLE9BQU8sZUFBZSxLQUFLLEdBQUcsTUFBTSxpQkFBaUIsSUFBSTtBQUNqRixLQUFLO0FBQ0w7QUFDQSx1QkFBdUIsS0FBSyxnQkFBZ0IsT0FBTyxFQUFFLFFBQVE7QUFDN0QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQ0FBaUM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9sb2dnZXIuanM/NjdjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tIFwiLi4vLi4vZXJyb3JzLmpzXCI7XG5jb25zdCByZWQgPSBcIlxceDFiWzMxbVwiO1xuY29uc3QgeWVsbG93ID0gXCJcXHgxYlszM21cIjtcbmNvbnN0IGdyZXkgPSBcIlxceDFiWzkwbVwiO1xuY29uc3QgcmVzZXQgPSBcIlxceDFiWzBtXCI7XG5leHBvcnQgY29uc3QgbG9nZ2VyID0ge1xuICAgIGVycm9yKGVycm9yKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBlcnJvciBpbnN0YW5jZW9mIEF1dGhFcnJvciA/IGVycm9yLnR5cGUgOiBlcnJvci5uYW1lO1xuICAgICAgICBjb25zb2xlLmVycm9yKGAke3JlZH1bYXV0aF1bZXJyb3JdJHtyZXNldH0gJHtuYW1lfTogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICBpZiAoZXJyb3IuY2F1c2UgJiZcbiAgICAgICAgICAgIHR5cGVvZiBlcnJvci5jYXVzZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgXCJlcnJcIiBpbiBlcnJvci5jYXVzZSAmJlxuICAgICAgICAgICAgZXJyb3IuY2F1c2UuZXJyIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZXJyLCAuLi5kYXRhIH0gPSBlcnJvci5jYXVzZTtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYCR7cmVkfVthdXRoXVtjYXVzZV0ke3Jlc2V0fTpgLCBlcnIuc3RhY2spO1xuICAgICAgICAgICAgaWYgKGRhdGEpXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgJHtyZWR9W2F1dGhdW2RldGFpbHNdJHtyZXNldH06YCwgSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVycm9yLnN0YWNrKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yLnN0YWNrLnJlcGxhY2UoLy4qLywgXCJcIikuc3Vic3RyaW5nKDEpKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgd2Fybihjb2RlKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL3dhcm5pbmdzLmF1dGhqcy5kZXYjJHtjb2RlfWA7XG4gICAgICAgIGNvbnNvbGUud2FybihgJHt5ZWxsb3d9W2F1dGhdW3dhcm5dWyR7Y29kZX1dJHtyZXNldH1gLCBgUmVhZCBtb3JlOiAke3VybH1gKTtcbiAgICB9LFxuICAgIGRlYnVnKG1lc3NhZ2UsIG1ldGFkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke2dyZXl9W2F1dGhdW2RlYnVnXToke3Jlc2V0fSAke21lc3NhZ2V9YCwgSlNPTi5zdHJpbmdpZnkobWV0YWRhdGEsIG51bGwsIDIpKTtcbiAgICB9LFxufTtcbi8qKlxuICogT3ZlcnJpZGUgdGhlIGJ1aWx0LWluIGxvZ2dlciB3aXRoIHVzZXIncyBpbXBsZW1lbnRhdGlvbi5cbiAqIEFueSBgdW5kZWZpbmVkYCBsZXZlbCB3aWxsIHVzZSB0aGUgZGVmYXVsdCBsb2dnZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRMb2dnZXIobmV3TG9nZ2VyID0ge30sIGRlYnVnKSB7XG4gICAgLy8gVHVybiBvZmYgZGVidWcgbG9nZ2luZyBpZiBgZGVidWdgIGlzbid0IHNldCB0byBgdHJ1ZWBcbiAgICBpZiAoIWRlYnVnKVxuICAgICAgICBsb2dnZXIuZGVidWcgPSAoKSA9PiB7IH07XG4gICAgaWYgKG5ld0xvZ2dlci5lcnJvcilcbiAgICAgICAgbG9nZ2VyLmVycm9yID0gbmV3TG9nZ2VyLmVycm9yO1xuICAgIGlmIChuZXdMb2dnZXIud2FybilcbiAgICAgICAgbG9nZ2VyLndhcm4gPSBuZXdMb2dnZXIud2FybjtcbiAgICBpZiAobmV3TG9nZ2VyLmRlYnVnKVxuICAgICAgICBsb2dnZXIuZGVidWcgPSBuZXdMb2dnZXIuZGVidWc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/merge.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/merge.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n// Source: https://stackoverflow.com/a/34749873/5364135\n/** Simple object check */\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n/** Deep merge two objects */\nfunction merge(target, ...sources) {\n    if (!sources.length)\n        return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key])\n                    Object.assign(target, { [key]: {} });\n                merge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9tZXJnZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxXQUFXO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxvQkFBb0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL3V0aWxzL21lcmdlLmpzP2I2YWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU291cmNlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzQ3NDk4NzMvNTM2NDEzNVxuLyoqIFNpbXBsZSBvYmplY3QgY2hlY2sgKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gXCJvYmplY3RcIiAmJiAhQXJyYXkuaXNBcnJheShpdGVtKTtcbn1cbi8qKiBEZWVwIG1lcmdlIHR3byBvYmplY3RzICovXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gICAgaWYgKCFzb3VyY2VzLmxlbmd0aClcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICBjb25zdCBzb3VyY2UgPSBzb3VyY2VzLnNoaWZ0KCk7XG4gICAgaWYgKGlzT2JqZWN0KHRhcmdldCkgJiYgaXNPYmplY3Qoc291cmNlKSkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRhcmdldFtrZXldKVxuICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgeyBba2V5XToge30gfSk7XG4gICAgICAgICAgICAgICAgbWVyZ2UodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/merge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/providers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/providers.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseProviders)\n/* harmony export */ });\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./merge.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/merge.js\");\n\n/**\n * Adds `signinUrl` and `callbackUrl` to each provider\n * and deep merge user-defined options.\n */\nfunction parseProviders(params) {\n    const { providerId, options } = params;\n    const url = new URL(options.basePath ?? \"/auth\", params.url.origin);\n    const providers = params.providers.map((p) => {\n        const provider = typeof p === \"function\" ? p() : p;\n        const { options: userOptions, ...defaults } = provider;\n        const id = (userOptions?.id ?? defaults.id);\n        // TODO: Support if properties have different types, e.g. authorization: string or object\n        const merged = (0,_merge_js__WEBPACK_IMPORTED_MODULE_0__.merge)(defaults, userOptions, {\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`,\n        });\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            merged.redirectProxyUrl ?? (merged.redirectProxyUrl = options.redirectProxyUrl);\n            return normalizeOAuth(merged);\n        }\n        return merged;\n    });\n    return {\n        providers,\n        provider: providers.find(({ id }) => id === providerId),\n    };\n}\n// TODO: Also add discovery here, if some endpoints/config are missing.\n// We should return both a client and authorization server config.\nfunction normalizeOAuth(c) {\n    if (c.issuer)\n        c.wellKnown ?? (c.wellKnown = `${c.issuer}/.well-known/openid-configuration`);\n    const authorization = normalizeEndpoint(c.authorization, c.issuer);\n    if (authorization && !authorization.url?.searchParams.has(\"scope\")) {\n        authorization.url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    const token = normalizeEndpoint(c.token, c.issuer);\n    const userinfo = normalizeEndpoint(c.userinfo, c.issuer);\n    const checks = c.checks ?? [\"pkce\"];\n    if (c.redirectProxyUrl) {\n        if (!checks.includes(\"state\"))\n            checks.push(\"state\");\n        c.redirectProxyUrl = `${c.redirectProxyUrl}/callback/${c.id}`;\n    }\n    return {\n        ...c,\n        authorization,\n        token,\n        checks,\n        userinfo,\n        profile: c.profile ?? defaultProfile,\n        account: c.account ?? defaultAccount,\n    };\n}\n/**\n * Returns basic user profile from the userinfo response/`id_token` claims.\n * The returned `id` will become the `account.providerAccountId`. `user.id`\n * and `account.id` are auto-generated UUID's.\n *\n * The result if this function is used to create the `User` in the database.\n * @see https://authjs.dev/reference/core/adapters#user\n * @see https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n * @see https://openid.net/specs/openid-connect-core-1_0.html#\n */\nconst defaultProfile = (profile) => {\n    return stripUndefined({\n        id: profile.sub ?? profile.id ?? crypto.randomUUID(),\n        name: profile.name ?? profile.nickname ?? profile.preferred_username,\n        email: profile.email,\n        image: profile.picture,\n    });\n};\n/**\n * Returns basic OAuth/OIDC values from the token response.\n * @see https://www.ietf.org/rfc/rfc6749.html#section-5.1\n * @see https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\n * @see https://authjs.dev/reference/core/adapters#account\n */\nconst defaultAccount = (account) => {\n    return stripUndefined({\n        access_token: account.access_token,\n        id_token: account.id_token,\n        refresh_token: account.refresh_token,\n        expires_at: account.expires_at,\n        scope: account.scope,\n        token_type: account.token_type,\n        session_state: account.session_state,\n    });\n};\nfunction stripUndefined(o) {\n    const result = {};\n    for (let [k, v] of Object.entries(o))\n        v !== undefined && (result[k] = v);\n    return result;\n}\nfunction normalizeEndpoint(e, issuer) {\n    if (!e && issuer)\n        return;\n    if (typeof e === \"string\") {\n        return { url: new URL(e) };\n    }\n    // If e.url is undefined, it's because the provider config\n    // assumes that we will use the issuer endpoint.\n    // The existence of either e.url or provider.issuer is checked in\n    // assert.ts. We fallback to \"https://authjs.dev\" to be able to pass around\n    // a valid URL even if the user only provided params.\n    // NOTE: This need to be checked when constructing the URL\n    // for the authorization, token and userinfo endpoints.\n    const url = new URL(e?.url ?? \"https://authjs.dev\");\n    if (e?.params != null) {\n        for (let [key, value] of Object.entries(e.params)) {\n            if (key === \"claims\")\n                value = JSON.stringify(value);\n            url.searchParams.set(key, String(value));\n        }\n    }\n    return { url, request: e?.request, conform: e?.conform };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9wcm92aWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmLFlBQVksc0JBQXNCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvQ0FBb0M7QUFDcEQ7QUFDQTtBQUNBLHVCQUF1QixnREFBSztBQUM1QiwwQkFBMEIsSUFBSSxVQUFVLEdBQUc7QUFDM0MsNEJBQTRCLElBQUksWUFBWSxHQUFHO0FBQy9DLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxvQ0FBb0MsSUFBSTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtQkFBbUIsWUFBWSxLQUFLO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvcHJvdmlkZXJzLmpzPzk4OGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVyZ2UgfSBmcm9tIFwiLi9tZXJnZS5qc1wiO1xuLyoqXG4gKiBBZGRzIGBzaWduaW5VcmxgIGFuZCBgY2FsbGJhY2tVcmxgIHRvIGVhY2ggcHJvdmlkZXJcbiAqIGFuZCBkZWVwIG1lcmdlIHVzZXItZGVmaW5lZCBvcHRpb25zLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZVByb3ZpZGVycyhwYXJhbXMpIHtcbiAgICBjb25zdCB7IHByb3ZpZGVySWQsIG9wdGlvbnMgfSA9IHBhcmFtcztcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKG9wdGlvbnMuYmFzZVBhdGggPz8gXCIvYXV0aFwiLCBwYXJhbXMudXJsLm9yaWdpbik7XG4gICAgY29uc3QgcHJvdmlkZXJzID0gcGFyYW1zLnByb3ZpZGVycy5tYXAoKHApID0+IHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSB0eXBlb2YgcCA9PT0gXCJmdW5jdGlvblwiID8gcCgpIDogcDtcbiAgICAgICAgY29uc3QgeyBvcHRpb25zOiB1c2VyT3B0aW9ucywgLi4uZGVmYXVsdHMgfSA9IHByb3ZpZGVyO1xuICAgICAgICBjb25zdCBpZCA9ICh1c2VyT3B0aW9ucz8uaWQgPz8gZGVmYXVsdHMuaWQpO1xuICAgICAgICAvLyBUT0RPOiBTdXBwb3J0IGlmIHByb3BlcnRpZXMgaGF2ZSBkaWZmZXJlbnQgdHlwZXMsIGUuZy4gYXV0aG9yaXphdGlvbjogc3RyaW5nIG9yIG9iamVjdFxuICAgICAgICBjb25zdCBtZXJnZWQgPSBtZXJnZShkZWZhdWx0cywgdXNlck9wdGlvbnMsIHtcbiAgICAgICAgICAgIHNpZ25pblVybDogYCR7dXJsfS9zaWduaW4vJHtpZH1gLFxuICAgICAgICAgICAgY2FsbGJhY2tVcmw6IGAke3VybH0vY2FsbGJhY2svJHtpZH1gLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHByb3ZpZGVyLnR5cGUgPT09IFwib2F1dGhcIiB8fCBwcm92aWRlci50eXBlID09PSBcIm9pZGNcIikge1xuICAgICAgICAgICAgbWVyZ2VkLnJlZGlyZWN0UHJveHlVcmwgPz8gKG1lcmdlZC5yZWRpcmVjdFByb3h5VXJsID0gb3B0aW9ucy5yZWRpcmVjdFByb3h5VXJsKTtcbiAgICAgICAgICAgIHJldHVybiBub3JtYWxpemVPQXV0aChtZXJnZWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXJnZWQ7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvdmlkZXJzLFxuICAgICAgICBwcm92aWRlcjogcHJvdmlkZXJzLmZpbmQoKHsgaWQgfSkgPT4gaWQgPT09IHByb3ZpZGVySWQpLFxuICAgIH07XG59XG4vLyBUT0RPOiBBbHNvIGFkZCBkaXNjb3ZlcnkgaGVyZSwgaWYgc29tZSBlbmRwb2ludHMvY29uZmlnIGFyZSBtaXNzaW5nLlxuLy8gV2Ugc2hvdWxkIHJldHVybiBib3RoIGEgY2xpZW50IGFuZCBhdXRob3JpemF0aW9uIHNlcnZlciBjb25maWcuXG5mdW5jdGlvbiBub3JtYWxpemVPQXV0aChjKSB7XG4gICAgaWYgKGMuaXNzdWVyKVxuICAgICAgICBjLndlbGxLbm93biA/PyAoYy53ZWxsS25vd24gPSBgJHtjLmlzc3Vlcn0vLndlbGwta25vd24vb3BlbmlkLWNvbmZpZ3VyYXRpb25gKTtcbiAgICBjb25zdCBhdXRob3JpemF0aW9uID0gbm9ybWFsaXplRW5kcG9pbnQoYy5hdXRob3JpemF0aW9uLCBjLmlzc3Vlcik7XG4gICAgaWYgKGF1dGhvcml6YXRpb24gJiYgIWF1dGhvcml6YXRpb24udXJsPy5zZWFyY2hQYXJhbXMuaGFzKFwic2NvcGVcIikpIHtcbiAgICAgICAgYXV0aG9yaXphdGlvbi51cmwuc2VhcmNoUGFyYW1zLnNldChcInNjb3BlXCIsIFwib3BlbmlkIHByb2ZpbGUgZW1haWxcIik7XG4gICAgfVxuICAgIGNvbnN0IHRva2VuID0gbm9ybWFsaXplRW5kcG9pbnQoYy50b2tlbiwgYy5pc3N1ZXIpO1xuICAgIGNvbnN0IHVzZXJpbmZvID0gbm9ybWFsaXplRW5kcG9pbnQoYy51c2VyaW5mbywgYy5pc3N1ZXIpO1xuICAgIGNvbnN0IGNoZWNrcyA9IGMuY2hlY2tzID8/IFtcInBrY2VcIl07XG4gICAgaWYgKGMucmVkaXJlY3RQcm94eVVybCkge1xuICAgICAgICBpZiAoIWNoZWNrcy5pbmNsdWRlcyhcInN0YXRlXCIpKVxuICAgICAgICAgICAgY2hlY2tzLnB1c2goXCJzdGF0ZVwiKTtcbiAgICAgICAgYy5yZWRpcmVjdFByb3h5VXJsID0gYCR7Yy5yZWRpcmVjdFByb3h5VXJsfS9jYWxsYmFjay8ke2MuaWR9YDtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uYyxcbiAgICAgICAgYXV0aG9yaXphdGlvbixcbiAgICAgICAgdG9rZW4sXG4gICAgICAgIGNoZWNrcyxcbiAgICAgICAgdXNlcmluZm8sXG4gICAgICAgIHByb2ZpbGU6IGMucHJvZmlsZSA/PyBkZWZhdWx0UHJvZmlsZSxcbiAgICAgICAgYWNjb3VudDogYy5hY2NvdW50ID8/IGRlZmF1bHRBY2NvdW50LFxuICAgIH07XG59XG4vKipcbiAqIFJldHVybnMgYmFzaWMgdXNlciBwcm9maWxlIGZyb20gdGhlIHVzZXJpbmZvIHJlc3BvbnNlL2BpZF90b2tlbmAgY2xhaW1zLlxuICogVGhlIHJldHVybmVkIGBpZGAgd2lsbCBiZWNvbWUgdGhlIGBhY2NvdW50LnByb3ZpZGVyQWNjb3VudElkYC4gYHVzZXIuaWRgXG4gKiBhbmQgYGFjY291bnQuaWRgIGFyZSBhdXRvLWdlbmVyYXRlZCBVVUlEJ3MuXG4gKlxuICogVGhlIHJlc3VsdCBpZiB0aGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gY3JlYXRlIHRoZSBgVXNlcmAgaW4gdGhlIGRhdGFiYXNlLlxuICogQHNlZSBodHRwczovL2F1dGhqcy5kZXYvcmVmZXJlbmNlL2NvcmUvYWRhcHRlcnMjdXNlclxuICogQHNlZSBodHRwczovL29wZW5pZC5uZXQvc3BlY3Mvb3BlbmlkLWNvbm5lY3QtY29yZS0xXzAuaHRtbCNJRFRva2VuXG4gKiBAc2VlIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI1xuICovXG5jb25zdCBkZWZhdWx0UHJvZmlsZSA9IChwcm9maWxlKSA9PiB7XG4gICAgcmV0dXJuIHN0cmlwVW5kZWZpbmVkKHtcbiAgICAgICAgaWQ6IHByb2ZpbGUuc3ViID8/IHByb2ZpbGUuaWQgPz8gY3J5cHRvLnJhbmRvbVVVSUQoKSxcbiAgICAgICAgbmFtZTogcHJvZmlsZS5uYW1lID8/IHByb2ZpbGUubmlja25hbWUgPz8gcHJvZmlsZS5wcmVmZXJyZWRfdXNlcm5hbWUsXG4gICAgICAgIGVtYWlsOiBwcm9maWxlLmVtYWlsLFxuICAgICAgICBpbWFnZTogcHJvZmlsZS5waWN0dXJlLFxuICAgIH0pO1xufTtcbi8qKlxuICogUmV0dXJucyBiYXNpYyBPQXV0aC9PSURDIHZhbHVlcyBmcm9tIHRoZSB0b2tlbiByZXNwb25zZS5cbiAqIEBzZWUgaHR0cHM6Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzY3NDkuaHRtbCNzZWN0aW9uLTUuMVxuICogQHNlZSBodHRwczovL29wZW5pZC5uZXQvc3BlY3Mvb3BlbmlkLWNvbm5lY3QtY29yZS0xXzAuaHRtbCNUb2tlblJlc3BvbnNlXG4gKiBAc2VlIGh0dHBzOi8vYXV0aGpzLmRldi9yZWZlcmVuY2UvY29yZS9hZGFwdGVycyNhY2NvdW50XG4gKi9cbmNvbnN0IGRlZmF1bHRBY2NvdW50ID0gKGFjY291bnQpID0+IHtcbiAgICByZXR1cm4gc3RyaXBVbmRlZmluZWQoe1xuICAgICAgICBhY2Nlc3NfdG9rZW46IGFjY291bnQuYWNjZXNzX3Rva2VuLFxuICAgICAgICBpZF90b2tlbjogYWNjb3VudC5pZF90b2tlbixcbiAgICAgICAgcmVmcmVzaF90b2tlbjogYWNjb3VudC5yZWZyZXNoX3Rva2VuLFxuICAgICAgICBleHBpcmVzX2F0OiBhY2NvdW50LmV4cGlyZXNfYXQsXG4gICAgICAgIHNjb3BlOiBhY2NvdW50LnNjb3BlLFxuICAgICAgICB0b2tlbl90eXBlOiBhY2NvdW50LnRva2VuX3R5cGUsXG4gICAgICAgIHNlc3Npb25fc3RhdGU6IGFjY291bnQuc2Vzc2lvbl9zdGF0ZSxcbiAgICB9KTtcbn07XG5mdW5jdGlvbiBzdHJpcFVuZGVmaW5lZChvKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChsZXQgW2ssIHZdIG9mIE9iamVjdC5lbnRyaWVzKG8pKVxuICAgICAgICB2ICE9PSB1bmRlZmluZWQgJiYgKHJlc3VsdFtrXSA9IHYpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBub3JtYWxpemVFbmRwb2ludChlLCBpc3N1ZXIpIHtcbiAgICBpZiAoIWUgJiYgaXNzdWVyKVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKHR5cGVvZiBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiB7IHVybDogbmV3IFVSTChlKSB9O1xuICAgIH1cbiAgICAvLyBJZiBlLnVybCBpcyB1bmRlZmluZWQsIGl0J3MgYmVjYXVzZSB0aGUgcHJvdmlkZXIgY29uZmlnXG4gICAgLy8gYXNzdW1lcyB0aGF0IHdlIHdpbGwgdXNlIHRoZSBpc3N1ZXIgZW5kcG9pbnQuXG4gICAgLy8gVGhlIGV4aXN0ZW5jZSBvZiBlaXRoZXIgZS51cmwgb3IgcHJvdmlkZXIuaXNzdWVyIGlzIGNoZWNrZWQgaW5cbiAgICAvLyBhc3NlcnQudHMuIFdlIGZhbGxiYWNrIHRvIFwiaHR0cHM6Ly9hdXRoanMuZGV2XCIgdG8gYmUgYWJsZSB0byBwYXNzIGFyb3VuZFxuICAgIC8vIGEgdmFsaWQgVVJMIGV2ZW4gaWYgdGhlIHVzZXIgb25seSBwcm92aWRlZCBwYXJhbXMuXG4gICAgLy8gTk9URTogVGhpcyBuZWVkIHRvIGJlIGNoZWNrZWQgd2hlbiBjb25zdHJ1Y3RpbmcgdGhlIFVSTFxuICAgIC8vIGZvciB0aGUgYXV0aG9yaXphdGlvbiwgdG9rZW4gYW5kIHVzZXJpbmZvIGVuZHBvaW50cy5cbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGU/LnVybCA/PyBcImh0dHBzOi8vYXV0aGpzLmRldlwiKTtcbiAgICBpZiAoZT8ucGFyYW1zICE9IG51bGwpIHtcbiAgICAgICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGUucGFyYW1zKSkge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJjbGFpbXNcIilcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgICAgIHVybC5zZWFyY2hQYXJhbXMuc2V0KGtleSwgU3RyaW5nKHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgdXJsLCByZXF1ZXN0OiBlPy5yZXF1ZXN0LCBjb25mb3JtOiBlPy5jb25mb3JtIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/providers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/session.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/session.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoggedInUser: () => (/* binding */ getLoggedInUser)\n/* harmony export */ });\n/**\n * Returns the currently logged in user, if any.\n */\nasync function getLoggedInUser(options, sessionStore) {\n    const { adapter, jwt, session: { strategy: sessionStrategy }, } = options;\n    const sessionToken = sessionStore.value;\n    if (!sessionToken)\n        return null;\n    // Try to decode JWT\n    if (sessionStrategy === \"jwt\") {\n        const salt = options.cookies.sessionToken.name;\n        const payload = await jwt.decode({ ...jwt, token: sessionToken, salt });\n        if (payload && payload.sub) {\n            return {\n                id: payload.sub,\n                name: payload.name,\n                email: payload.email,\n                image: payload.picture,\n            };\n        }\n    }\n    else {\n        const userAndSession = await adapter?.getSessionAndUser(sessionToken);\n        if (userAndSession) {\n            return userAndSession.user;\n        }\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVkseUJBQXlCLDJCQUEyQixJQUFJO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtQ0FBbUM7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL3V0aWxzL3Nlc3Npb24uanM/NDBjZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHVybnMgdGhlIGN1cnJlbnRseSBsb2dnZWQgaW4gdXNlciwgaWYgYW55LlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TG9nZ2VkSW5Vc2VyKG9wdGlvbnMsIHNlc3Npb25TdG9yZSkge1xuICAgIGNvbnN0IHsgYWRhcHRlciwgand0LCBzZXNzaW9uOiB7IHN0cmF0ZWd5OiBzZXNzaW9uU3RyYXRlZ3kgfSwgfSA9IG9wdGlvbnM7XG4gICAgY29uc3Qgc2Vzc2lvblRva2VuID0gc2Vzc2lvblN0b3JlLnZhbHVlO1xuICAgIGlmICghc2Vzc2lvblRva2VuKVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAvLyBUcnkgdG8gZGVjb2RlIEpXVFxuICAgIGlmIChzZXNzaW9uU3RyYXRlZ3kgPT09IFwiand0XCIpIHtcbiAgICAgICAgY29uc3Qgc2FsdCA9IG9wdGlvbnMuY29va2llcy5zZXNzaW9uVG9rZW4ubmFtZTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGF3YWl0IGp3dC5kZWNvZGUoeyAuLi5qd3QsIHRva2VuOiBzZXNzaW9uVG9rZW4sIHNhbHQgfSk7XG4gICAgICAgIGlmIChwYXlsb2FkICYmIHBheWxvYWQuc3ViKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiBwYXlsb2FkLnN1YixcbiAgICAgICAgICAgICAgICBuYW1lOiBwYXlsb2FkLm5hbWUsXG4gICAgICAgICAgICAgICAgZW1haWw6IHBheWxvYWQuZW1haWwsXG4gICAgICAgICAgICAgICAgaW1hZ2U6IHBheWxvYWQucGljdHVyZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHVzZXJBbmRTZXNzaW9uID0gYXdhaXQgYWRhcHRlcj8uZ2V0U2Vzc2lvbkFuZFVzZXIoc2Vzc2lvblRva2VuKTtcbiAgICAgICAgaWYgKHVzZXJBbmRTZXNzaW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gdXNlckFuZFNlc3Npb24udXNlcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHash: () => (/* binding */ createHash),\n/* harmony export */   parseActionAndProviderId: () => (/* binding */ parseActionAndProviderId),\n/* harmony export */   randomString: () => (/* binding */ randomString),\n/* harmony export */   toInternalRequest: () => (/* binding */ toInternalRequest),\n/* harmony export */   toRequest: () => (/* binding */ toRequest),\n/* harmony export */   toResponse: () => (/* binding */ toResponse)\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/actions.js\");\n\n\n\n\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\")\n        return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType?.includes(\"application/json\")) {\n        return await req.json();\n    }\n    else if (contentType?.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nasync function toInternalRequest(req, config) {\n    try {\n        if (req.method !== \"GET\" && req.method !== \"POST\")\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(\"Only GET and POST requests are supported.\");\n        // Defaults are usually set in the `init` function, but this is needed below\n        config.basePath ?? (config.basePath = \"/auth\");\n        const url = new URL(req.url);\n        const { action, providerId } = parseActionAndProviderId(url.pathname, config.basePath);\n        return {\n            url,\n            action,\n            providerId,\n            method: req.method,\n            headers: Object.fromEntries(req.headers),\n            body: req.body ? await getBody(req) : undefined,\n            cookies: (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(req.headers.get(\"cookie\") ?? \"\") ?? {},\n            error: url.searchParams.get(\"error\") ?? undefined,\n            query: Object.fromEntries(url.searchParams),\n        };\n    }\n    catch (e) {\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.error(e);\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.debug(\"request\", req);\n    }\n}\nfunction toRequest(request) {\n    return new Request(request.url, {\n        headers: request.headers,\n        method: request.method,\n        body: request.method === \"POST\"\n            ? JSON.stringify(request.body ?? {})\n            : undefined,\n    });\n}\nfunction toResponse(res) {\n    const headers = new Headers(res.headers);\n    res.cookies?.forEach((cookie) => {\n        const { name, value, options } = cookie;\n        const cookieHeader = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.serialize)(name, value, options);\n        if (headers.has(\"Set-Cookie\"))\n            headers.append(\"Set-Cookie\", cookieHeader);\n        else\n            headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\")\n        body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\")\n        body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : res.status ?? 200;\n    const response = new Response(body, { headers, status });\n    if (res.redirect)\n        response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n/** Web compatible method to create a hash, using SHA256 */\nasync function createHash(message) {\n    const data = new TextEncoder().encode(message);\n    const hash = await crypto.subtle.digest(\"SHA-256\", data);\n    return Array.from(new Uint8Array(hash))\n        .map((b) => b.toString(16).padStart(2, \"0\"))\n        .join(\"\")\n        .toString();\n}\n/** Web compatible method to create a random string of a given length */\nfunction randomString(size) {\n    const i2hex = (i) => (\"0\" + i.toString(16)).slice(-2);\n    const r = (a, i) => a + i2hex(i);\n    const bytes = crypto.getRandomValues(new Uint8Array(size));\n    return Array.from(bytes).reduce(r, \"\");\n}\n/** @internal Parse the action and provider id from a URL pathname. */\nfunction parseActionAndProviderId(pathname, base) {\n    const a = pathname.match(new RegExp(`^${base}(.+)`));\n    if (a === null)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    const actionAndProviderId = a.at(-1);\n    const b = actionAndProviderId.replace(/^\\//, \"\").split(\"/\").filter(Boolean);\n    if (b.length !== 1 && b.length !== 2)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    const [action, providerId] = b;\n    if (!(0,_actions_js__WEBPACK_IMPORTED_MODULE_3__.isAuthAction)(action))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    if (providerId &&\n        ![\"signin\", \"callback\", \"webauthn-options\"].includes(action))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    return { action, providerId };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy93ZWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF5RDtBQUNUO0FBQ1g7QUFDTztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxzQkFBc0IscURBQWE7QUFDbkM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFCQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2Q0FBVyx1Q0FBdUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOENBQU07QUFDZCxRQUFRLDhDQUFNO0FBQ2Q7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0M7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDLDZCQUE2QixpREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsaUJBQWlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNENBQTRDLEtBQUs7QUFDakQ7QUFDQSxrQkFBa0IscURBQWEsMkJBQTJCLFNBQVM7QUFDbkU7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHFEQUFhLDJCQUEyQixTQUFTO0FBQ25FO0FBQ0EsU0FBUyx5REFBWTtBQUNyQixrQkFBa0IscURBQWEsMkJBQTJCLFNBQVM7QUFDbkU7QUFDQTtBQUNBLGtCQUFrQixxREFBYSwyQkFBMkIsU0FBUztBQUNuRSxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWpzLWVuZC10by1lbmQvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy93ZWIuanM/YmFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSBhcyBwYXJzZUNvb2tpZSwgc2VyaWFsaXplIH0gZnJvbSBcImNvb2tpZVwiO1xuaW1wb3J0IHsgVW5rbm93bkFjdGlvbiB9IGZyb20gXCIuLi8uLi9lcnJvcnMuanNcIjtcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gXCIuL2xvZ2dlci5qc1wiO1xuaW1wb3J0IHsgaXNBdXRoQWN0aW9uIH0gZnJvbSBcIi4vYWN0aW9ucy5qc1wiO1xuYXN5bmMgZnVuY3Rpb24gZ2V0Qm9keShyZXEpIHtcbiAgICBpZiAoIShcImJvZHlcIiBpbiByZXEpIHx8ICFyZXEuYm9keSB8fCByZXEubWV0aG9kICE9PSBcIlBPU1RcIilcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVxLmhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpO1xuICAgIGlmIChjb250ZW50VHlwZT8uaW5jbHVkZXMoXCJhcHBsaWNhdGlvbi9qc29uXCIpKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCByZXEuanNvbigpO1xuICAgIH1cbiAgICBlbHNlIGlmIChjb250ZW50VHlwZT8uaW5jbHVkZXMoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikpIHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhhd2FpdCByZXEudGV4dCgpKTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhwYXJhbXMpO1xuICAgIH1cbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0b0ludGVybmFsUmVxdWVzdChyZXEsIGNvbmZpZykge1xuICAgIHRyeSB7XG4gICAgICAgIGlmIChyZXEubWV0aG9kICE9PSBcIkdFVFwiICYmIHJlcS5tZXRob2QgIT09IFwiUE9TVFwiKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFVua25vd25BY3Rpb24oXCJPbmx5IEdFVCBhbmQgUE9TVCByZXF1ZXN0cyBhcmUgc3VwcG9ydGVkLlwiKTtcbiAgICAgICAgLy8gRGVmYXVsdHMgYXJlIHVzdWFsbHkgc2V0IGluIHRoZSBgaW5pdGAgZnVuY3Rpb24sIGJ1dCB0aGlzIGlzIG5lZWRlZCBiZWxvd1xuICAgICAgICBjb25maWcuYmFzZVBhdGggPz8gKGNvbmZpZy5iYXNlUGF0aCA9IFwiL2F1dGhcIik7XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxLnVybCk7XG4gICAgICAgIGNvbnN0IHsgYWN0aW9uLCBwcm92aWRlcklkIH0gPSBwYXJzZUFjdGlvbkFuZFByb3ZpZGVySWQodXJsLnBhdGhuYW1lLCBjb25maWcuYmFzZVBhdGgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdXJsLFxuICAgICAgICAgICAgYWN0aW9uLFxuICAgICAgICAgICAgcHJvdmlkZXJJZCxcbiAgICAgICAgICAgIG1ldGhvZDogcmVxLm1ldGhvZCxcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyhyZXEuaGVhZGVycyksXG4gICAgICAgICAgICBib2R5OiByZXEuYm9keSA/IGF3YWl0IGdldEJvZHkocmVxKSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGNvb2tpZXM6IHBhcnNlQ29va2llKHJlcS5oZWFkZXJzLmdldChcImNvb2tpZVwiKSA/PyBcIlwiKSA/PyB7fSxcbiAgICAgICAgICAgIGVycm9yOiB1cmwuc2VhcmNoUGFyYW1zLmdldChcImVycm9yXCIpID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHF1ZXJ5OiBPYmplY3QuZnJvbUVudHJpZXModXJsLnNlYXJjaFBhcmFtcyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihlKTtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKFwicmVxdWVzdFwiLCByZXEpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1JlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBuZXcgUmVxdWVzdChyZXF1ZXN0LnVybCwge1xuICAgICAgICBoZWFkZXJzOiByZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXG4gICAgICAgIGJvZHk6IHJlcXVlc3QubWV0aG9kID09PSBcIlBPU1RcIlxuICAgICAgICAgICAgPyBKU09OLnN0cmluZ2lmeShyZXF1ZXN0LmJvZHkgPz8ge30pXG4gICAgICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1Jlc3BvbnNlKHJlcykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhyZXMuaGVhZGVycyk7XG4gICAgcmVzLmNvb2tpZXM/LmZvckVhY2goKGNvb2tpZSkgPT4ge1xuICAgICAgICBjb25zdCB7IG5hbWUsIHZhbHVlLCBvcHRpb25zIH0gPSBjb29raWU7XG4gICAgICAgIGNvbnN0IGNvb2tpZUhlYWRlciA9IHNlcmlhbGl6ZShuYW1lLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgICAgIGlmIChoZWFkZXJzLmhhcyhcIlNldC1Db29raWVcIikpXG4gICAgICAgICAgICBoZWFkZXJzLmFwcGVuZChcIlNldC1Db29raWVcIiwgY29va2llSGVhZGVyKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgaGVhZGVycy5zZXQoXCJTZXQtQ29va2llXCIsIGNvb2tpZUhlYWRlcik7XG4gICAgfSk7XG4gICAgbGV0IGJvZHkgPSByZXMuYm9keTtcbiAgICBpZiAoaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIikgPT09IFwiYXBwbGljYXRpb24vanNvblwiKVxuICAgICAgICBib2R5ID0gSlNPTi5zdHJpbmdpZnkocmVzLmJvZHkpO1xuICAgIGVsc2UgaWYgKGhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpID09PSBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKVxuICAgICAgICBib2R5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhyZXMuYm9keSkudG9TdHJpbmcoKTtcbiAgICBjb25zdCBzdGF0dXMgPSByZXMucmVkaXJlY3QgPyAzMDIgOiByZXMuc3RhdHVzID8/IDIwMDtcbiAgICBjb25zdCByZXNwb25zZSA9IG5ldyBSZXNwb25zZShib2R5LCB7IGhlYWRlcnMsIHN0YXR1cyB9KTtcbiAgICBpZiAocmVzLnJlZGlyZWN0KVxuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIHJlcy5yZWRpcmVjdCk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xufVxuLyoqIFdlYiBjb21wYXRpYmxlIG1ldGhvZCB0byBjcmVhdGUgYSBoYXNoLCB1c2luZyBTSEEyNTYgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVIYXNoKG1lc3NhZ2UpIHtcbiAgICBjb25zdCBkYXRhID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKG1lc3NhZ2UpO1xuICAgIGNvbnN0IGhhc2ggPSBhd2FpdCBjcnlwdG8uc3VidGxlLmRpZ2VzdChcIlNIQS0yNTZcIiwgZGF0YSk7XG4gICAgcmV0dXJuIEFycmF5LmZyb20obmV3IFVpbnQ4QXJyYXkoaGFzaCkpXG4gICAgICAgIC5tYXAoKGIpID0+IGIudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSlcbiAgICAgICAgLmpvaW4oXCJcIilcbiAgICAgICAgLnRvU3RyaW5nKCk7XG59XG4vKiogV2ViIGNvbXBhdGlibGUgbWV0aG9kIHRvIGNyZWF0ZSBhIHJhbmRvbSBzdHJpbmcgb2YgYSBnaXZlbiBsZW5ndGggKi9cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21TdHJpbmcoc2l6ZSkge1xuICAgIGNvbnN0IGkyaGV4ID0gKGkpID0+IChcIjBcIiArIGkudG9TdHJpbmcoMTYpKS5zbGljZSgtMik7XG4gICAgY29uc3QgciA9IChhLCBpKSA9PiBhICsgaTJoZXgoaSk7XG4gICAgY29uc3QgYnl0ZXMgPSBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KHNpemUpKTtcbiAgICByZXR1cm4gQXJyYXkuZnJvbShieXRlcykucmVkdWNlKHIsIFwiXCIpO1xufVxuLyoqIEBpbnRlcm5hbCBQYXJzZSB0aGUgYWN0aW9uIGFuZCBwcm92aWRlciBpZCBmcm9tIGEgVVJMIHBhdGhuYW1lLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQWN0aW9uQW5kUHJvdmlkZXJJZChwYXRobmFtZSwgYmFzZSkge1xuICAgIGNvbnN0IGEgPSBwYXRobmFtZS5tYXRjaChuZXcgUmVnRXhwKGBeJHtiYXNlfSguKylgKSk7XG4gICAgaWYgKGEgPT09IG51bGwpXG4gICAgICAgIHRocm93IG5ldyBVbmtub3duQWN0aW9uKGBDYW5ub3QgcGFyc2UgYWN0aW9uIGF0ICR7cGF0aG5hbWV9YCk7XG4gICAgY29uc3QgYWN0aW9uQW5kUHJvdmlkZXJJZCA9IGEuYXQoLTEpO1xuICAgIGNvbnN0IGIgPSBhY3Rpb25BbmRQcm92aWRlcklkLnJlcGxhY2UoL15cXC8vLCBcIlwiKS5zcGxpdChcIi9cIikuZmlsdGVyKEJvb2xlYW4pO1xuICAgIGlmIChiLmxlbmd0aCAhPT0gMSAmJiBiLmxlbmd0aCAhPT0gMilcbiAgICAgICAgdGhyb3cgbmV3IFVua25vd25BY3Rpb24oYENhbm5vdCBwYXJzZSBhY3Rpb24gYXQgJHtwYXRobmFtZX1gKTtcbiAgICBjb25zdCBbYWN0aW9uLCBwcm92aWRlcklkXSA9IGI7XG4gICAgaWYgKCFpc0F1dGhBY3Rpb24oYWN0aW9uKSlcbiAgICAgICAgdGhyb3cgbmV3IFVua25vd25BY3Rpb24oYENhbm5vdCBwYXJzZSBhY3Rpb24gYXQgJHtwYXRobmFtZX1gKTtcbiAgICBpZiAocHJvdmlkZXJJZCAmJlxuICAgICAgICAhW1wic2lnbmluXCIsIFwiY2FsbGJhY2tcIiwgXCJ3ZWJhdXRobi1vcHRpb25zXCJdLmluY2x1ZGVzKGFjdGlvbikpXG4gICAgICAgIHRocm93IG5ldyBVbmtub3duQWN0aW9uKGBDYW5ub3QgcGFyc2UgYWN0aW9uIGF0ICR7cGF0aG5hbWV9YCk7XG4gICAgcmV0dXJuIHsgYWN0aW9uLCBwcm92aWRlcklkIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-client.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-client.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webauthnScript: () => (/* binding */ webauthnScript)\n/* harmony export */ });\n//@ts-check\n// Declare a SimpleWebAuthnBrowser variable as part of \"window\"\n/** @typedef {\"authenticate\"} WebAuthnAuthenticate */\n/** @typedef {\"register\"} WebAuthnRegister */\n/** @typedef {WebAuthnRegister | WebAuthnAuthenticate} WebAuthnOptionsAction */\n/**\n * @template {WebAuthnOptionsAction} T\n * @typedef {T extends WebAuthnAuthenticate ?\n *  { options: import(\"@simplewebauthn/types\").PublicKeyCredentialRequestOptionsJSON; action: \"authenticate\" } :\n *  T extends WebAuthnRegister ?\n *  { options: import(\"@simplewebauthn/types\").PublicKeyCredentialCreationOptionsJSON; action: \"register\" } :\n * never\n * } WebAuthnOptionsReturn\n */\n/**\n * webauthnScript is the client-side script that handles the webauthn form\n *\n * @param {string} authURL is the URL of the auth API\n * @param {string} providerID is the ID of the webauthn provider\n */\nasync function webauthnScript(authURL, providerID) {\n    /** @type {typeof import(\"@simplewebauthn/browser\")} */\n    // @ts-ignore\n    const WebAuthnBrowser = window.SimpleWebAuthnBrowser;\n    /**\n     * Fetch webauthn options from the server\n     *\n     * @template {WebAuthnOptionsAction} T\n     * @param {T | undefined} action action to fetch options for\n     * @returns {Promise<WebAuthnOptionsReturn<T> | undefined>}\n     */\n    async function fetchOptions(action) {\n        // Create the options URL with the action and query parameters\n        const url = new URL(`${authURL}/webauthn-options/${providerID}`);\n        if (action)\n            url.searchParams.append(\"action\", action);\n        const formFields = getFormFields();\n        formFields.forEach((field) => {\n            url.searchParams.append(field.name, field.value);\n        });\n        const res = await fetch(url);\n        if (!res.ok) {\n            console.error(\"Failed to fetch options\", res);\n            return;\n        }\n        return res.json();\n    }\n    /**\n     * Get the webauthn form from the page\n     *\n     * @returns {HTMLFormElement}\n     */\n    function getForm() {\n        const formID = `#${providerID}-form`;\n        /** @type {HTMLFormElement | null} */\n        const form = document.querySelector(formID);\n        if (!form)\n            throw new Error(`Form '${formID}' not found`);\n        return form;\n    }\n    /**\n     * Get formFields from the form\n     *\n     * @returns {HTMLInputElement[]}\n     */\n    function getFormFields() {\n        const form = getForm();\n        /** @type {HTMLInputElement[]} */\n        const formFields = Array.from(form.querySelectorAll(\"input[data-form-field]\"));\n        return formFields;\n    }\n    /**\n     * Passkey form submission handler.\n     * Takes the input from the form and a few other parameters and submits it to the server.\n     *\n     * @param {WebAuthnOptionsAction} action action to submit\n     * @param {unknown | undefined} data optional data to submit\n     * @returns {Promise<void>}\n     */\n    async function submitForm(action, data) {\n        const form = getForm();\n        // If a POST request, create hidden fields in the form\n        // and submit it so the browser redirects on login\n        if (action) {\n            const actionInput = document.createElement(\"input\");\n            actionInput.type = \"hidden\";\n            actionInput.name = \"action\";\n            actionInput.value = action;\n            form.appendChild(actionInput);\n        }\n        if (data) {\n            const dataInput = document.createElement(\"input\");\n            dataInput.type = \"hidden\";\n            dataInput.name = \"data\";\n            dataInput.value = JSON.stringify(data);\n            form.appendChild(dataInput);\n        }\n        return form.submit();\n    }\n    /**\n     * Executes the authentication flow by fetching options from the server,\n     * starting the authentication, and submitting the response to the server.\n     *\n     * @param {WebAuthnOptionsReturn<WebAuthnAuthenticate>['options']} options\n     * @param {boolean} autofill Whether or not to use the browser's autofill\n     * @returns {Promise<void>}\n     */\n    async function authenticationFlow(options, autofill) {\n        // Start authentication\n        const authResp = await WebAuthnBrowser.startAuthentication(options, autofill);\n        // Submit authentication response to server\n        return await submitForm(\"authenticate\", authResp);\n    }\n    /**\n     * @param {WebAuthnOptionsReturn<WebAuthnRegister>['options']} options\n     */\n    async function registrationFlow(options) {\n        // Check if all required formFields are set\n        const formFields = getFormFields();\n        formFields.forEach((field) => {\n            if (field.required && !field.value) {\n                throw new Error(`Missing required field: ${field.name}`);\n            }\n        });\n        // Start registration\n        const regResp = await WebAuthnBrowser.startRegistration(options);\n        // Submit registration response to server\n        return await submitForm(\"register\", regResp);\n    }\n    /**\n     * Attempts to authenticate the user when the page loads\n     * using the browser's autofill popup.\n     *\n     * @returns {Promise<void>}\n     */\n    async function autofillAuthentication() {\n        // if the browser can't handle autofill, don't try\n        if (!WebAuthnBrowser.browserSupportsWebAuthnAutofill())\n            return;\n        const res = await fetchOptions(\"authenticate\");\n        if (!res) {\n            console.error(\"Failed to fetch option for autofill authentication\");\n            return;\n        }\n        try {\n            await authenticationFlow(res.options, true);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    /**\n     * Sets up the passkey form by overriding the form submission handler\n     * so that it attempts to authenticate the user when the form is submitted.\n     * If the user is not registered, it will attempt to register them instead.\n     */\n    async function setupForm() {\n        const form = getForm();\n        // If the browser can't do WebAuthn, hide the form\n        if (!WebAuthnBrowser.browserSupportsWebAuthn()) {\n            form.style.display = \"none\";\n            return;\n        }\n        if (form) {\n            form.addEventListener(\"submit\", async (e) => {\n                e.preventDefault();\n                // Fetch options from the server without assuming that\n                // the user is registered\n                const res = await fetchOptions(undefined);\n                if (!res) {\n                    console.error(\"Failed to fetch options for form submission\");\n                    return;\n                }\n                // Then execute the appropriate flow\n                if (res.action === \"authenticate\") {\n                    try {\n                        await authenticationFlow(res.options, false);\n                    }\n                    catch (e) {\n                        console.error(e);\n                    }\n                }\n                else if (res.action === \"register\") {\n                    try {\n                        await registrationFlow(res.options);\n                    }\n                    catch (e) {\n                        console.error(e);\n                    }\n                }\n            });\n        }\n    }\n    // On page load, setup the form and attempt to authenticate the user.\n    setupForm();\n    autofillAuthentication();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-utils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertInternalOptionsWebAuthn: () => (/* binding */ assertInternalOptionsWebAuthn),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   getAuthenticationResponse: () => (/* binding */ getAuthenticationResponse),\n/* harmony export */   getRegistrationResponse: () => (/* binding */ getRegistrationResponse),\n/* harmony export */   inferWebAuthnOptions: () => (/* binding */ inferWebAuthnOptions),\n/* harmony export */   stringToTransports: () => (/* binding */ stringToTransports),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   transportsToString: () => (/* binding */ transportsToString),\n/* harmony export */   verifyAuthenticate: () => (/* binding */ verifyAuthenticate),\n/* harmony export */   verifyRegister: () => (/* binding */ verifyRegister)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/errors.js\");\n/* harmony import */ var _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/callback/oauth/checks.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var _web_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web.js */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/web.js\");\n\n\n\n/**\n * Infers the WebAuthn options based on the provided parameters.\n *\n * @param action - The WebAuthn action to perform (optional).\n * @param loggedInUser - The logged-in user (optional).\n * @param userInfoResponse - The response containing user information (optional).\n *\n * @returns The WebAuthn action to perform, or null if no inference could be made.\n */\nfunction inferWebAuthnOptions(action, loggedIn, userInfoResponse) {\n    const { user, exists = false } = userInfoResponse ?? {};\n    switch (action) {\n        case \"authenticate\": {\n            /**\n             * Always allow explicit authentication requests.\n             */\n            return \"authenticate\";\n        }\n        case \"register\": {\n            /**\n             * Registration is only allowed if:\n             * - The user is logged in, meaning the user wants to register a new authenticator.\n             * - The user is not logged in and provided user info that does NOT exist, meaning the user wants to register a new account.\n             */\n            if (user && loggedIn === exists)\n                return \"register\";\n            break;\n        }\n        case undefined: {\n            /**\n             * When no explicit action is provided, we try to infer it based on the user info provided. These are the possible cases:\n             * - Logged in users must always send an explit action, so we bail out in this case.\n             * - Otherwise, if no user info is provided, the desired action is authentication without pre-defined authenticators.\n             * - Otherwise, if the user info provided is of an existing user, the desired action is authentication with their pre-defined authenticators.\n             * - Finally, if the user info provided is of a non-existing user, the desired action is registration.\n             */\n            if (!loggedIn) {\n                if (user) {\n                    if (exists) {\n                        return \"authenticate\";\n                    }\n                    else {\n                        return \"register\";\n                    }\n                }\n                else {\n                    return \"authenticate\";\n                }\n            }\n            break;\n        }\n    }\n    // No decision could be made\n    return null;\n}\n/**\n * Retrieves the registration response for WebAuthn options request.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - The user information.\n * @param resCookies - Optional cookies to be included in the response.\n * @returns A promise that resolves to the WebAuthnOptionsResponse.\n */\nasync function getRegistrationResponse(options, request, user, resCookies) {\n    // Get registration options\n    const regOptions = await getRegistrationOptions(options, request, user);\n    // Get signed cookie\n    const { cookie } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.create(options, regOptions.challenge, user);\n    return {\n        status: 200,\n        cookies: [...(resCookies ?? []), cookie],\n        body: {\n            action: \"register\",\n            options: regOptions,\n        },\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n}\n/**\n * Retrieves the authentication response for WebAuthn options request.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - Optional user information.\n * @param resCookies - Optional array of cookies to be included in the response.\n * @returns A promise that resolves to a WebAuthnOptionsResponse object.\n */\nasync function getAuthenticationResponse(options, request, user, resCookies) {\n    // Get authentication options\n    const authOptions = await getAuthenticationOptions(options, request, user);\n    // Get signed cookie\n    const { cookie } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.create(options, authOptions.challenge);\n    return {\n        status: 200,\n        cookies: [...(resCookies ?? []), cookie],\n        body: {\n            action: \"authenticate\",\n            options: authOptions,\n        },\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n}\nasync function verifyAuthenticate(options, request, resCookies) {\n    const { adapter, provider } = options;\n    // Get WebAuthn response from request body\n    const data = request.body && typeof request.body.data === \"string\"\n        ? JSON.parse(request.body.data)\n        : undefined;\n    if (!data ||\n        typeof data !== \"object\" ||\n        !(\"id\" in data) ||\n        typeof data.id !== \"string\") {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Invalid WebAuthn Authentication response\");\n    }\n    // Reset the ID so we smooth out implementation differences\n    const credentialID = toBase64(fromBase64(data.id));\n    // Get authenticator from database\n    const authenticator = await adapter.getAuthenticator(credentialID);\n    if (!authenticator) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(`WebAuthn authenticator not found in database: ${JSON.stringify({\n            credentialID,\n        })}`);\n    }\n    // Get challenge from request cookies\n    const { challenge: expectedChallenge } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.use(options, request.cookies, resCookies);\n    // Verify the response\n    let verification;\n    try {\n        const relayingParty = provider.getRelayingParty(options, request);\n        verification = await provider.simpleWebAuthn.verifyAuthenticationResponse({\n            ...provider.verifyAuthenticationOptions,\n            expectedChallenge,\n            response: data,\n            authenticator: fromAdapterAuthenticator(authenticator),\n            expectedOrigin: relayingParty.origin,\n            expectedRPID: relayingParty.id,\n        });\n    }\n    catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(e);\n    }\n    const { verified, authenticationInfo } = verification;\n    // Make sure the response was verified\n    if (!verified) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(\"WebAuthn authentication response could not be verified.\");\n    }\n    // Update authenticator counter\n    try {\n        const { newCounter } = authenticationInfo;\n        await adapter.updateAuthenticatorCounter(authenticator.credentialID, newCounter);\n    }\n    catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AdapterError(`Failed to update authenticator counter. This may cause future authentication attempts to fail. ${JSON.stringify({\n            credentialID,\n            oldCounter: authenticator.counter,\n            newCounter: authenticationInfo.newCounter,\n        })}`, e);\n    }\n    // Get the account and user\n    const account = await adapter.getAccount(authenticator.providerAccountId, provider.id);\n    if (!account) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(`WebAuthn account not found in database: ${JSON.stringify({\n            credentialID,\n            providerAccountId: authenticator.providerAccountId,\n        })}`);\n    }\n    const user = await adapter.getUser(account.userId);\n    if (!user) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(`WebAuthn user not found in database: ${JSON.stringify({\n            credentialID,\n            providerAccountId: authenticator.providerAccountId,\n            userID: account.userId,\n        })}`);\n    }\n    return {\n        account,\n        user,\n    };\n}\nasync function verifyRegister(options, request, resCookies) {\n    const { provider } = options;\n    // Get WebAuthn response from request body\n    const data = request.body && typeof request.body.data === \"string\"\n        ? JSON.parse(request.body.data)\n        : undefined;\n    if (!data ||\n        typeof data !== \"object\" ||\n        !(\"id\" in data) ||\n        typeof data.id !== \"string\") {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Invalid WebAuthn Registration response\");\n    }\n    // Get challenge from request cookies\n    const { challenge: expectedChallenge, registerData: user } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.use(options, request.cookies, resCookies);\n    if (!user) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Missing user registration data in WebAuthn challenge cookie\");\n    }\n    // Verify the response\n    let verification;\n    try {\n        const relayingParty = provider.getRelayingParty(options, request);\n        verification = await provider.simpleWebAuthn.verifyRegistrationResponse({\n            ...provider.verifyRegistrationOptions,\n            expectedChallenge,\n            response: data,\n            expectedOrigin: relayingParty.origin,\n            expectedRPID: relayingParty.id,\n        });\n    }\n    catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(e);\n    }\n    // Make sure the response was verified\n    if (!verification.verified || !verification.registrationInfo) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(\"WebAuthn registration response could not be verified\");\n    }\n    // Build a new account\n    const account = {\n        providerAccountId: toBase64(verification.registrationInfo.credentialID),\n        provider: options.provider.id,\n        type: provider.type,\n    };\n    // Build a new authenticator\n    const authenticator = {\n        providerAccountId: account.providerAccountId,\n        counter: verification.registrationInfo.counter,\n        credentialID: toBase64(verification.registrationInfo.credentialID),\n        credentialPublicKey: toBase64(verification.registrationInfo.credentialPublicKey),\n        credentialBackedUp: verification.registrationInfo.credentialBackedUp,\n        credentialDeviceType: verification.registrationInfo.credentialDeviceType,\n        transports: transportsToString(data.response\n            .transports),\n    };\n    // Return created stuff\n    return {\n        user,\n        account,\n        authenticator,\n    };\n}\n/**\n * Generates WebAuthn authentication options.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - Optional user information.\n * @returns The authentication options.\n */\nasync function getAuthenticationOptions(options, request, user) {\n    const { provider, adapter } = options;\n    // Get the user's authenticators.\n    const authenticators = user && user[\"id\"]\n        ? await adapter.listAuthenticatorsByUserId(user.id)\n        : null;\n    const relayingParty = provider.getRelayingParty(options, request);\n    // Return the authentication options.\n    return await provider.simpleWebAuthn.generateAuthenticationOptions({\n        ...provider.authenticationOptions,\n        rpID: relayingParty.id,\n        allowCredentials: authenticators?.map((a) => ({\n            id: fromBase64(a.credentialID),\n            type: \"public-key\",\n            transports: stringToTransports(a.transports),\n        })),\n    });\n}\n/**\n * Generates WebAuthn registration options.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - The user information.\n * @returns The registration options.\n */\nasync function getRegistrationOptions(options, request, user) {\n    const { provider, adapter } = options;\n    // Get the user's authenticators.\n    const authenticators = user[\"id\"]\n        ? await adapter.listAuthenticatorsByUserId(user.id)\n        : null;\n    // Generate a random user ID for the credential.\n    // We can do this because we don't use this user ID to link the\n    // credential to the user. Instead, we store actual userID in the\n    // Authenticator object and fetch it via it's credential ID.\n    const userID = (0,_web_js__WEBPACK_IMPORTED_MODULE_2__.randomString)(32);\n    const relayingParty = provider.getRelayingParty(options, request);\n    // Return the registration options.\n    return await provider.simpleWebAuthn.generateRegistrationOptions({\n        ...provider.registrationOptions,\n        userID,\n        userName: user.email,\n        userDisplayName: user.name ?? undefined,\n        rpID: relayingParty.id,\n        rpName: relayingParty.name,\n        excludeCredentials: authenticators?.map((a) => ({\n            id: fromBase64(a.credentialID),\n            type: \"public-key\",\n            transports: stringToTransports(a.transports),\n        })),\n    });\n}\nfunction assertInternalOptionsWebAuthn(options) {\n    const { provider, adapter } = options;\n    // Adapter is required for WebAuthn\n    if (!adapter)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.MissingAdapter(\"An adapter is required for the WebAuthn provider\");\n    // Provider must be WebAuthn\n    if (!provider || provider.type !== \"webauthn\") {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(\"Provider must be WebAuthn\");\n    }\n    // Narrow the options type for typed usage later\n    return { ...options, provider, adapter };\n}\nfunction fromAdapterAuthenticator(authenticator) {\n    return {\n        ...authenticator,\n        credentialDeviceType: authenticator.credentialDeviceType,\n        transports: stringToTransports(authenticator.transports),\n        credentialID: fromBase64(authenticator.credentialID),\n        credentialPublicKey: fromBase64(authenticator.credentialPublicKey),\n    };\n}\nfunction fromBase64(base64) {\n    return new Uint8Array(Buffer.from(base64, \"base64\"));\n}\nfunction toBase64(bytes) {\n    return Buffer.from(bytes).toString(\"base64\");\n}\nfunction transportsToString(transports) {\n    return transports?.join(\",\");\n}\nfunction stringToTransports(tstring) {\n    return tstring\n        ? tstring.split(\",\")\n        : undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/lib/utils/webauthn-utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/node_modules/@auth/core/providers/github.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-auth/node_modules/@auth/core/providers/github.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GitHub)\n/* harmony export */ });\n/**\n * <div style={{backgroundColor: \"#24292f\", display: \"flex\", justifyContent: \"space-between\", color: \"#fff\", padding: 16}}>\n * <span>Built-in <b>GitHub</b> integration.</span>\n * <a href=\"https://github.com\">\n *   <img style={{display: \"block\"}} src=\"https://authjs.dev/img/providers/github.svg\" height=\"48\" width=\"48\"/>\n * </a>\n * </div>\n *\n * @module providers/github\n */\n/**\n * Add GitHub login to your page and make requests to [GitHub APIs](https://docs.github.com/en/rest).\n *\n * ### Setup\n *\n * #### Callback URL\n * ```\n * https://example.com/api/auth/callback/github\n * ```\n *\n * #### Configuration\n * ```ts\n * import { Auth } from \"@auth/core\"\n * import GitHub from \"@auth/core/providers/github\"\n *\n * const request = new Request(origin)\n * const response = await Auth(request, {\n *   providers: [GitHub({ clientId: GITHUB_CLIENT_ID, clientSecret: GITHUB_CLIENT_SECRET })],\n * })\n * ```\n *\n * ### Resources\n *\n * - [GitHub - Creating an OAuth App](https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app)\n * - [GitHub - Authorizing OAuth Apps](https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps)\n * - [GitHub - Configure your GitHub OAuth Apps](https://github.com/settings/developers)\n * - [Learn more about OAuth](https://authjs.dev/concepts/oauth)\n * - [Source code](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/github.ts)\n *\n * ### Notes\n *\n * By default, Auth.js assumes that the GitHub provider is\n * based on the [OAuth 2](https://www.rfc-editor.org/rfc/rfc6749.html) specification.\n *\n * :::tip\n *\n * The GitHub provider comes with a [default configuration](https://github.com/nextauthjs/next-auth/blob/main/packages/core/src/providers/github.ts).\n * To override the defaults for your use case, check out [customizing a built-in OAuth provider](https://authjs.dev/guides/configuring-oauth-providers).\n *\n * :::\n *\n * :::info **Disclaimer**\n *\n * If you think you found a bug in the default configuration, you can [open an issue](https://authjs.dev/new/provider-issue).\n *\n * Auth.js strictly adheres to the specification and it cannot take responsibility for any deviation from\n * the spec by the provider. You can open an issue, but if the problem is non-compliance with the spec,\n * we might not pursue a resolution. You can ask for more help in [Discussions](https://authjs.dev/new/github-discussions).\n *\n * :::\n */\nfunction GitHub(config) {\n    const baseUrl = config?.enterprise?.baseUrl ?? \"https://github.com\";\n    const apiBaseUrl = config?.enterprise?.baseUrl\n        ? `${config?.enterprise?.baseUrl}/api/v3`\n        : \"https://api.github.com\";\n    return {\n        id: \"github\",\n        name: \"GitHub\",\n        type: \"oauth\",\n        authorization: {\n            url: `${baseUrl}/login/oauth/authorize`,\n            params: { scope: \"read:user user:email\" },\n        },\n        token: `${baseUrl}/login/oauth/access_token`,\n        userinfo: {\n            url: `${apiBaseUrl}/user`,\n            async request({ tokens, provider }) {\n                const profile = await fetch(provider.userinfo?.url, {\n                    headers: {\n                        Authorization: `Bearer ${tokens.access_token}`,\n                        \"User-Agent\": \"authjs\",\n                    },\n                }).then(async (res) => await res.json());\n                if (!profile.email) {\n                    // If the user does not have a public email, get another via the GitHub API\n                    // See https://docs.github.com/en/rest/users/emails#list-public-email-addresses-for-the-authenticated-user\n                    const res = await fetch(`${apiBaseUrl}/user/emails`, {\n                        headers: {\n                            Authorization: `Bearer ${tokens.access_token}`,\n                            \"User-Agent\": \"authjs\",\n                        },\n                    });\n                    if (res.ok) {\n                        const emails = await res.json();\n                        profile.email = (emails.find((e) => e.primary) ?? emails[0]).email;\n                    }\n                }\n                return profile;\n            },\n        },\n        profile(profile) {\n            return {\n                id: profile.id.toString(),\n                name: profile.name ?? profile.login,\n                email: profile.email,\n                image: profile.avatar_url,\n            };\n        },\n        style: { bg: \"#24292f\", text: \"#fff\" },\n        options: config,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL3Byb3ZpZGVycy9naXRodWIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsZ0JBQWdCLDBHQUEwRztBQUMxSDtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFtQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGdFQUFnRTtBQUMxRixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCLHNCQUFzQiwrQkFBK0I7QUFDckQsU0FBUztBQUNULGtCQUFrQixRQUFRO0FBQzFCO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0IsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBO0FBQ0EsaURBQWlELG9CQUFvQjtBQUNyRTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFdBQVc7QUFDMUQ7QUFDQSxxREFBcUQsb0JBQW9CO0FBQ3pFO0FBQ0EseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGlCQUFpQiw2QkFBNkI7QUFDOUM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9wcm92aWRlcnMvZ2l0aHViLmpzPzIxZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiA8ZGl2IHN0eWxlPXt7YmFja2dyb3VuZENvbG9yOiBcIiMyNDI5MmZcIiwgZGlzcGxheTogXCJmbGV4XCIsIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWJldHdlZW5cIiwgY29sb3I6IFwiI2ZmZlwiLCBwYWRkaW5nOiAxNn19PlxuICogPHNwYW4+QnVpbHQtaW4gPGI+R2l0SHViPC9iPiBpbnRlZ3JhdGlvbi48L3NwYW4+XG4gKiA8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tXCI+XG4gKiAgIDxpbWcgc3R5bGU9e3tkaXNwbGF5OiBcImJsb2NrXCJ9fSBzcmM9XCJodHRwczovL2F1dGhqcy5kZXYvaW1nL3Byb3ZpZGVycy9naXRodWIuc3ZnXCIgaGVpZ2h0PVwiNDhcIiB3aWR0aD1cIjQ4XCIvPlxuICogPC9hPlxuICogPC9kaXY+XG4gKlxuICogQG1vZHVsZSBwcm92aWRlcnMvZ2l0aHViXG4gKi9cbi8qKlxuICogQWRkIEdpdEh1YiBsb2dpbiB0byB5b3VyIHBhZ2UgYW5kIG1ha2UgcmVxdWVzdHMgdG8gW0dpdEh1YiBBUElzXShodHRwczovL2RvY3MuZ2l0aHViLmNvbS9lbi9yZXN0KS5cbiAqXG4gKiAjIyMgU2V0dXBcbiAqXG4gKiAjIyMjIENhbGxiYWNrIFVSTFxuICogYGBgXG4gKiBodHRwczovL2V4YW1wbGUuY29tL2FwaS9hdXRoL2NhbGxiYWNrL2dpdGh1YlxuICogYGBgXG4gKlxuICogIyMjIyBDb25maWd1cmF0aW9uXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgQXV0aCB9IGZyb20gXCJAYXV0aC9jb3JlXCJcbiAqIGltcG9ydCBHaXRIdWIgZnJvbSBcIkBhdXRoL2NvcmUvcHJvdmlkZXJzL2dpdGh1YlwiXG4gKlxuICogY29uc3QgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KG9yaWdpbilcbiAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQXV0aChyZXF1ZXN0LCB7XG4gKiAgIHByb3ZpZGVyczogW0dpdEh1Yih7IGNsaWVudElkOiBHSVRIVUJfQ0xJRU5UX0lELCBjbGllbnRTZWNyZXQ6IEdJVEhVQl9DTElFTlRfU0VDUkVUIH0pXSxcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiAjIyMgUmVzb3VyY2VzXG4gKlxuICogLSBbR2l0SHViIC0gQ3JlYXRpbmcgYW4gT0F1dGggQXBwXShodHRwczovL2RvY3MuZ2l0aHViLmNvbS9lbi9kZXZlbG9wZXJzL2FwcHMvYnVpbGRpbmctb2F1dGgtYXBwcy9jcmVhdGluZy1hbi1vYXV0aC1hcHApXG4gKiAtIFtHaXRIdWIgLSBBdXRob3JpemluZyBPQXV0aCBBcHBzXShodHRwczovL2RvY3MuZ2l0aHViLmNvbS9lbi9kZXZlbG9wZXJzL2FwcHMvYnVpbGRpbmctb2F1dGgtYXBwcy9hdXRob3JpemluZy1vYXV0aC1hcHBzKVxuICogLSBbR2l0SHViIC0gQ29uZmlndXJlIHlvdXIgR2l0SHViIE9BdXRoIEFwcHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zZXR0aW5ncy9kZXZlbG9wZXJzKVxuICogLSBbTGVhcm4gbW9yZSBhYm91dCBPQXV0aF0oaHR0cHM6Ly9hdXRoanMuZGV2L2NvbmNlcHRzL29hdXRoKVxuICogLSBbU291cmNlIGNvZGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9uZXh0YXV0aGpzL25leHQtYXV0aC9ibG9iL21haW4vcGFja2FnZXMvY29yZS9zcmMvcHJvdmlkZXJzL2dpdGh1Yi50cylcbiAqXG4gKiAjIyMgTm90ZXNcbiAqXG4gKiBCeSBkZWZhdWx0LCBBdXRoLmpzIGFzc3VtZXMgdGhhdCB0aGUgR2l0SHViIHByb3ZpZGVyIGlzXG4gKiBiYXNlZCBvbiB0aGUgW09BdXRoIDJdKGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL3JmYy9yZmM2NzQ5Lmh0bWwpIHNwZWNpZmljYXRpb24uXG4gKlxuICogOjo6dGlwXG4gKlxuICogVGhlIEdpdEh1YiBwcm92aWRlciBjb21lcyB3aXRoIGEgW2RlZmF1bHQgY29uZmlndXJhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL25leHRhdXRoanMvbmV4dC1hdXRoL2Jsb2IvbWFpbi9wYWNrYWdlcy9jb3JlL3NyYy9wcm92aWRlcnMvZ2l0aHViLnRzKS5cbiAqIFRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0cyBmb3IgeW91ciB1c2UgY2FzZSwgY2hlY2sgb3V0IFtjdXN0b21pemluZyBhIGJ1aWx0LWluIE9BdXRoIHByb3ZpZGVyXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL2NvbmZpZ3VyaW5nLW9hdXRoLXByb3ZpZGVycykuXG4gKlxuICogOjo6XG4gKlxuICogOjo6aW5mbyAqKkRpc2NsYWltZXIqKlxuICpcbiAqIElmIHlvdSB0aGluayB5b3UgZm91bmQgYSBidWcgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbiwgeW91IGNhbiBbb3BlbiBhbiBpc3N1ZV0oaHR0cHM6Ly9hdXRoanMuZGV2L25ldy9wcm92aWRlci1pc3N1ZSkuXG4gKlxuICogQXV0aC5qcyBzdHJpY3RseSBhZGhlcmVzIHRvIHRoZSBzcGVjaWZpY2F0aW9uIGFuZCBpdCBjYW5ub3QgdGFrZSByZXNwb25zaWJpbGl0eSBmb3IgYW55IGRldmlhdGlvbiBmcm9tXG4gKiB0aGUgc3BlYyBieSB0aGUgcHJvdmlkZXIuIFlvdSBjYW4gb3BlbiBhbiBpc3N1ZSwgYnV0IGlmIHRoZSBwcm9ibGVtIGlzIG5vbi1jb21wbGlhbmNlIHdpdGggdGhlIHNwZWMsXG4gKiB3ZSBtaWdodCBub3QgcHVyc3VlIGEgcmVzb2x1dGlvbi4gWW91IGNhbiBhc2sgZm9yIG1vcmUgaGVscCBpbiBbRGlzY3Vzc2lvbnNdKGh0dHBzOi8vYXV0aGpzLmRldi9uZXcvZ2l0aHViLWRpc2N1c3Npb25zKS5cbiAqXG4gKiA6OjpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2l0SHViKGNvbmZpZykge1xuICAgIGNvbnN0IGJhc2VVcmwgPSBjb25maWc/LmVudGVycHJpc2U/LmJhc2VVcmwgPz8gXCJodHRwczovL2dpdGh1Yi5jb21cIjtcbiAgICBjb25zdCBhcGlCYXNlVXJsID0gY29uZmlnPy5lbnRlcnByaXNlPy5iYXNlVXJsXG4gICAgICAgID8gYCR7Y29uZmlnPy5lbnRlcnByaXNlPy5iYXNlVXJsfS9hcGkvdjNgXG4gICAgICAgIDogXCJodHRwczovL2FwaS5naXRodWIuY29tXCI7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IFwiZ2l0aHViXCIsXG4gICAgICAgIG5hbWU6IFwiR2l0SHViXCIsXG4gICAgICAgIHR5cGU6IFwib2F1dGhcIixcbiAgICAgICAgYXV0aG9yaXphdGlvbjoge1xuICAgICAgICAgICAgdXJsOiBgJHtiYXNlVXJsfS9sb2dpbi9vYXV0aC9hdXRob3JpemVgLFxuICAgICAgICAgICAgcGFyYW1zOiB7IHNjb3BlOiBcInJlYWQ6dXNlciB1c2VyOmVtYWlsXCIgfSxcbiAgICAgICAgfSxcbiAgICAgICAgdG9rZW46IGAke2Jhc2VVcmx9L2xvZ2luL29hdXRoL2FjY2Vzc190b2tlbmAsXG4gICAgICAgIHVzZXJpbmZvOiB7XG4gICAgICAgICAgICB1cmw6IGAke2FwaUJhc2VVcmx9L3VzZXJgLFxuICAgICAgICAgICAgYXN5bmMgcmVxdWVzdCh7IHRva2VucywgcHJvdmlkZXIgfSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb2ZpbGUgPSBhd2FpdCBmZXRjaChwcm92aWRlci51c2VyaW5mbz8udXJsLCB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbnMuYWNjZXNzX3Rva2VufWAsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlVzZXItQWdlbnRcIjogXCJhdXRoanNcIixcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KS50aGVuKGFzeW5jIChyZXMpID0+IGF3YWl0IHJlcy5qc29uKCkpO1xuICAgICAgICAgICAgICAgIGlmICghcHJvZmlsZS5lbWFpbCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBkb2VzIG5vdCBoYXZlIGEgcHVibGljIGVtYWlsLCBnZXQgYW5vdGhlciB2aWEgdGhlIEdpdEh1YiBBUElcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VlIGh0dHBzOi8vZG9jcy5naXRodWIuY29tL2VuL3Jlc3QvdXNlcnMvZW1haWxzI2xpc3QtcHVibGljLWVtYWlsLWFkZHJlc3Nlcy1mb3ItdGhlLWF1dGhlbnRpY2F0ZWQtdXNlclxuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHthcGlCYXNlVXJsfS91c2VyL2VtYWlsc2AsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW5zLmFjY2Vzc190b2tlbn1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVXNlci1BZ2VudFwiOiBcImF1dGhqc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVtYWlscyA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9maWxlLmVtYWlsID0gKGVtYWlscy5maW5kKChlKSA9PiBlLnByaW1hcnkpID8/IGVtYWlsc1swXSkuZW1haWw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb2ZpbGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBwcm9maWxlKHByb2ZpbGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaWQ6IHByb2ZpbGUuaWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBuYW1lOiBwcm9maWxlLm5hbWUgPz8gcHJvZmlsZS5sb2dpbixcbiAgICAgICAgICAgICAgICBlbWFpbDogcHJvZmlsZS5lbWFpbCxcbiAgICAgICAgICAgICAgICBpbWFnZTogcHJvZmlsZS5hdmF0YXJfdXJsLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgc3R5bGU6IHsgYmc6IFwiIzI0MjkyZlwiLCB0ZXh0OiBcIiNmZmZcIiB9LFxuICAgICAgICBvcHRpb25zOiBjb25maWcsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/node_modules/@auth/core/providers/github.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/providers/github.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/providers/github.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _auth_core_providers_github__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _auth_core_providers_github__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth/core/providers/github */ \"(rsc)/./node_modules/next-auth/node_modules/@auth/core/providers/github.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9naXRodWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEM7QUFDVSIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtanMtZW5kLXRvLWVuZC8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2dpdGh1Yi5qcz9mYTQ0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAYXV0aC9jb3JlL3Byb3ZpZGVycy9naXRodWJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvZ2l0aHViXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/providers/github.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-auth/react.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/react.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionContext: () => (/* binding */ e1),\n/* harmony export */   SessionProvider: () => (/* binding */ e8),\n/* harmony export */   __NEXTAUTH: () => (/* binding */ e0),\n/* harmony export */   getCsrfToken: () => (/* binding */ e4),\n/* harmony export */   getProviders: () => (/* binding */ e5),\n/* harmony export */   getSession: () => (/* binding */ e3),\n/* harmony export */   signIn: () => (/* binding */ e6),\n/* harmony export */   signOut: () => (/* binding */ e7),\n/* harmony export */   useSession: () => (/* binding */ e2)\n/* harmony export */ });\n/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js\");\n\nconst proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js`)\n\n// Accessing the __esModule property and exporting $$typeof are required here.\n// The __esModule getter forces the proxy target to create the default export\n// and the $$typeof value is for rendering logic to determine if the module\n// is a client boundary.\nconst { __esModule, $$typeof } = proxy;\nconst __default__ = proxy.default;\n\nconst e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#__NEXTAUTH`);\n\nconst e1 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#SessionContext`);\n\nconst e2 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#useSession`);\n\nconst e3 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#getSession`);\n\nconst e4 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#getCsrfToken`);\n\nconst e5 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#getProviders`);\n\nconst e6 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#signIn`);\n\nconst e7 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#signOut`);\n\nconst e8 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/erlandssonjoel/Desktop/next-js-end-to-end/node_modules/next-auth/react.js#SessionProvider`);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7OztDQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dC1qcy1lbmQtdG8tZW5kLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9yZWFjdC5qcz8yODVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIE5leHRBdXRoLmpzIG1ldGhvZHMgYW5kIGNvbXBvbmVudHMgdGhhdCB3b3JrIGluIFtDbGllbnQgY29tcG9uZW50c10oaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL2NsaWVudC1jb21wb25lbnRzKSBhbmQgdGhlIFtQYWdlcyBSb3V0ZXJdKGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL3BhZ2VzKS5cbiAqXG4gKiBGb3IgdXNlIGluIFtTZXJ2ZXIgQWN0aW9uc10oaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2FwaS1yZWZlcmVuY2UvZnVuY3Rpb25zL3NlcnZlci1hY3Rpb25zKSwgY2hlY2sgb3V0IFt0aGVzZSBtZXRob2RzXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL3VwZ3JhZGUtdG8tdjUjbWV0aG9kcylcbiAqXG4gKiBAbW9kdWxlIHJlYWN0XG4gKi9cblwidXNlIGNsaWVudFwiO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgYXBpQmFzZVVybCwgQ2xpZW50U2Vzc2lvbkVycm9yLCBmZXRjaERhdGEsIG5vdywgcGFyc2VVcmwsIHVzZU9ubGluZSwgfSBmcm9tIFwiLi9saWIvY2xpZW50LmpzXCI7XG4vLyBUaGlzIGJlaGF2aW91ciBtaXJyb3JzIHRoZSBkZWZhdWx0IGJlaGF2aW91ciBmb3IgZ2V0dGluZyB0aGUgc2l0ZSBuYW1lIHRoYXRcbi8vIGhhcHBlbnMgc2VydmVyIHNpZGUgaW4gc2VydmVyL2luZGV4LmpzXG4vLyAxLiBBbiBlbXB0eSB2YWx1ZSBpcyBsZWdpdGltYXRlIHdoZW4gdGhlIGNvZGUgaXMgYmVpbmcgaW52b2tlZCBjbGllbnQgc2lkZSBhc1xuLy8gICAgcmVsYXRpdmUgVVJMcyBhcmUgdmFsaWQgaW4gdGhhdCBjb250ZXh0IGFuZCBzbyBkZWZhdWx0cyB0byBlbXB0eS5cbi8vIDIuIFdoZW4gaW52b2tlZCBzZXJ2ZXIgc2lkZSB0aGUgdmFsdWUgaXMgcGlja2VkIHVwIGZyb20gYW4gZW52aXJvbm1lbnRcbi8vICAgIHZhcmlhYmxlIGFuZCBkZWZhdWx0cyB0byAnaHR0cDovL2xvY2FsaG9zdDozMDAwJy5cbmV4cG9ydCBjb25zdCBfX05FWFRBVVRIID0ge1xuICAgIGJhc2VVcmw6IHBhcnNlVXJsKHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTCA/PyBwcm9jZXNzLmVudi5WRVJDRUxfVVJMKS5vcmlnaW4sXG4gICAgYmFzZVBhdGg6IHBhcnNlVXJsKHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTCkucGF0aCxcbiAgICBiYXNlVXJsU2VydmVyOiBwYXJzZVVybChwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkxfSU5URVJOQUwgPz9cbiAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMID8/XG4gICAgICAgIHByb2Nlc3MuZW52LlZFUkNFTF9VUkwpLm9yaWdpbixcbiAgICBiYXNlUGF0aFNlcnZlcjogcGFyc2VVcmwocHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMX0lOVEVSTkFMID8/IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTCkucGF0aCxcbiAgICBfbGFzdFN5bmM6IDAsXG4gICAgX3Nlc3Npb246IHVuZGVmaW5lZCxcbiAgICBfZ2V0U2Vzc2lvbjogKCkgPT4geyB9LFxufTtcbmxldCBicm9hZGNhc3RDaGFubmVsID0gbnVsbDtcbmZ1bmN0aW9uIGJyb2FkY2FzdCgpIHtcbiAgICBpZiAodHlwZW9mIEJyb2FkY2FzdENoYW5uZWwgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBvc3RNZXNzYWdlOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICBhZGRFdmVudExpc3RlbmVyOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICByZW1vdmVFdmVudExpc3RlbmVyOiAoKSA9PiB7IH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChicm9hZGNhc3RDaGFubmVsID09PSBudWxsKSB7XG4gICAgICAgIGJyb2FkY2FzdENoYW5uZWwgPSBuZXcgQnJvYWRjYXN0Q2hhbm5lbChcIm5leHQtYXV0aFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGJyb2FkY2FzdENoYW5uZWw7XG59XG4vLyBUT0RPOlxuY29uc3QgbG9nZ2VyID0ge1xuICAgIGRlYnVnOiBjb25zb2xlLmRlYnVnLFxuICAgIGVycm9yOiBjb25zb2xlLmVycm9yLFxuICAgIHdhcm46IGNvbnNvbGUud2Fybixcbn07XG5leHBvcnQgY29uc3QgU2Vzc2lvbkNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0Py4odW5kZWZpbmVkKTtcbi8qKlxuICogUmVhY3QgSG9vayB0aGF0IGdpdmVzIHlvdSBhY2Nlc3MgdG8gdGhlIGxvZ2dlZCBpbiB1c2VyJ3Mgc2Vzc2lvbiBkYXRhIGFuZCBsZXRzIHlvdSBtb2RpZnkgaXQuXG4gKlxuICogOjo6aW5mb1xuICogYHVzZVNlc3Npb25gIGlzIGZvciBjbGllbnQtc2lkZSB1c2Ugb25seSBhbmQgd2hlbiB1c2luZyBbTmV4dC5qcyBBcHAgUm91dGVyIChgYXBwL2ApXShodHRwczovL25leHRqcy5vcmcvYmxvZy9uZXh0LTEzLTQjbmV4dGpzLWFwcC1yb3V0ZXIpIHlvdSBzaG91bGQgcHJlZmVyIHRoZSBgYXV0aCgpYCBleHBvcnQuXG4gKiA6OjpcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVNlc3Npb24ob3B0aW9ucykge1xuICAgIGlmICghU2Vzc2lvbkNvbnRleHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVhY3QgQ29udGV4dCBpcyB1bmF2YWlsYWJsZSBpbiBTZXJ2ZXIgQ29tcG9uZW50c1wiKTtcbiAgICB9XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBTYXRpc2Z5IFRTIGlmIGJyYW5jaCBvbiBsaW5lIGJlbG93XG4gICAgY29uc3QgdmFsdWUgPSBSZWFjdC51c2VDb250ZXh0KFNlc3Npb25Db250ZXh0KTtcbiAgICBpZiAoIXZhbHVlICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJbbmV4dC1hdXRoXTogYHVzZVNlc3Npb25gIG11c3QgYmUgd3JhcHBlZCBpbiBhIDxTZXNzaW9uUHJvdmlkZXIgLz5cIik7XG4gICAgfVxuICAgIGNvbnN0IHsgcmVxdWlyZWQsIG9uVW5hdXRoZW50aWNhdGVkIH0gPSBvcHRpb25zID8/IHt9O1xuICAgIGNvbnN0IHJlcXVpcmVkQW5kTm90TG9hZGluZyA9IHJlcXVpcmVkICYmIHZhbHVlLnN0YXR1cyA9PT0gXCJ1bmF1dGhlbnRpY2F0ZWRcIjtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAocmVxdWlyZWRBbmROb3RMb2FkaW5nKSB7XG4gICAgICAgICAgICBjb25zdCB1cmwgPSBgJHtfX05FWFRBVVRILmJhc2VQYXRofS9zaWduaW4/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgICAgICAgICAgICBlcnJvcjogXCJTZXNzaW9uUmVxdWlyZWRcIixcbiAgICAgICAgICAgICAgICBjYWxsYmFja1VybDogd2luZG93LmxvY2F0aW9uLmhyZWYsXG4gICAgICAgICAgICB9KX1gO1xuICAgICAgICAgICAgaWYgKG9uVW5hdXRoZW50aWNhdGVkKVxuICAgICAgICAgICAgICAgIG9uVW5hdXRoZW50aWNhdGVkKCk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB1cmw7XG4gICAgICAgIH1cbiAgICB9LCBbcmVxdWlyZWRBbmROb3RMb2FkaW5nLCBvblVuYXV0aGVudGljYXRlZF0pO1xuICAgIGlmIChyZXF1aXJlZEFuZE5vdExvYWRpbmcpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRhdGE6IHZhbHVlLmRhdGEsXG4gICAgICAgICAgICB1cGRhdGU6IHZhbHVlLnVwZGF0ZSxcbiAgICAgICAgICAgIHN0YXR1czogXCJsb2FkaW5nXCIsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXNzaW9uKHBhcmFtcykge1xuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBmZXRjaERhdGEoXCJzZXNzaW9uXCIsIF9fTkVYVEFVVEgsIGxvZ2dlciwgcGFyYW1zKTtcbiAgICBpZiAocGFyYW1zPy5icm9hZGNhc3QgPz8gdHJ1ZSkge1xuICAgICAgICBicm9hZGNhc3QoKS5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICBldmVudDogXCJzZXNzaW9uXCIsXG4gICAgICAgICAgICBkYXRhOiB7IHRyaWdnZXI6IFwiZ2V0U2Vzc2lvblwiIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gc2Vzc2lvbjtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgY3VycmVudCBDcm9zcy1TaXRlIFJlcXVlc3QgRm9yZ2VyeSBUb2tlbiAoQ1NSRiBUb2tlbilcbiAqIHJlcXVpcmVkIHRvIG1ha2UgcmVxdWVzdHMgdGhhdCBjaGFuZ2VzIHN0YXRlLiAoZS5nLiBzaWduaW5nIGluIG9yIG91dCwgb3IgdXBkYXRpbmcgdGhlIHNlc3Npb24pLlxuICpcbiAqIFtDU1JGIFByZXZlbnRpb246IERvdWJsZSBTdWJtaXQgQ29va2llXShodHRwczovL2NoZWF0c2hlZXRzZXJpZXMub3dhc3Aub3JnL2NoZWF0c2hlZXRzL0Nyb3NzLVNpdGVfUmVxdWVzdF9Gb3JnZXJ5X1ByZXZlbnRpb25fQ2hlYXRfU2hlZXQuaHRtbCNkb3VibGUtc3VibWl0LWNvb2tpZSlcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldENzcmZUb2tlbigpIHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoRGF0YShcImNzcmZcIiwgX19ORVhUQVVUSCwgbG9nZ2VyKTtcbiAgICByZXR1cm4gcmVzcG9uc2U/LmNzcmZUb2tlbiA/PyBcIlwiO1xufVxuLyoqXG4gKiBSZXR1cm5zIGEgY2xpZW50LXNhZmUgY29uZmlndXJhdGlvbiBvYmplY3Qgb2YgdGhlIGN1cnJlbnRseVxuICogYXZhaWxhYmxlIHByb3ZpZGVycy5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb3ZpZGVycygpIHtcbiAgICByZXR1cm4gZmV0Y2hEYXRhKFwicHJvdmlkZXJzXCIsIF9fTkVYVEFVVEgsIGxvZ2dlcik7XG59XG4vKipcbiAqIEluaXRpYXRlIGEgc2lnbmluIGZsb3cgb3Igc2VuZCB0aGUgdXNlciB0byB0aGUgc2lnbmluIHBhZ2UgbGlzdGluZyBhbGwgcG9zc2libGUgcHJvdmlkZXJzLlxuICogSGFuZGxlcyBDU1JGIHByb3RlY3Rpb24uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduSW4ocHJvdmlkZXIsIG9wdGlvbnMsIGF1dGhvcml6YXRpb25QYXJhbXMpIHtcbiAgICBjb25zdCB7IGNhbGxiYWNrVXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWYsIHJlZGlyZWN0ID0gdHJ1ZSB9ID0gb3B0aW9ucyA/PyB7fTtcbiAgICBjb25zdCBiYXNlVXJsID0gYXBpQmFzZVVybChfX05FWFRBVVRIKTtcbiAgICBjb25zdCBwcm92aWRlcnMgPSBhd2FpdCBnZXRQcm92aWRlcnMoKTtcbiAgICBpZiAoIXByb3ZpZGVycykge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAke2Jhc2VVcmx9L2Vycm9yYDtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXByb3ZpZGVyIHx8ICEocHJvdmlkZXIgaW4gcHJvdmlkZXJzKSkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAke2Jhc2VVcmx9L3NpZ25pbj8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgICAgICAgY2FsbGJhY2tVcmwsXG4gICAgICAgIH0pfWA7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgaXNDcmVkZW50aWFscyA9IHByb3ZpZGVyc1twcm92aWRlcl0udHlwZSA9PT0gXCJjcmVkZW50aWFsc1wiO1xuICAgIGNvbnN0IGlzRW1haWwgPSBwcm92aWRlcnNbcHJvdmlkZXJdLnR5cGUgPT09IFwiZW1haWxcIjtcbiAgICBjb25zdCBpc1N1cHBvcnRpbmdSZXR1cm4gPSBpc0NyZWRlbnRpYWxzIHx8IGlzRW1haWw7XG4gICAgY29uc3Qgc2lnbkluVXJsID0gYCR7YmFzZVVybH0vJHtpc0NyZWRlbnRpYWxzID8gXCJjYWxsYmFja1wiIDogXCJzaWduaW5cIn0vJHtwcm92aWRlcn1gO1xuICAgIGNvbnN0IGNzcmZUb2tlbiA9IGF3YWl0IGdldENzcmZUb2tlbigpO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke3NpZ25JblVybH0/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKGF1dGhvcml6YXRpb25QYXJhbXMpfWAsIHtcbiAgICAgICAgbWV0aG9kOiBcInBvc3RcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcbiAgICAgICAgICAgIFwiWC1BdXRoLVJldHVybi1SZWRpcmVjdFwiOiBcIjFcIixcbiAgICAgICAgfSxcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICBib2R5OiBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBjc3JmVG9rZW4sXG4gICAgICAgICAgICBjYWxsYmFja1VybCxcbiAgICAgICAgfSksXG4gICAgfSk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgLy8gVE9ETzogRG8gbm90IHJlZGlyZWN0IGZvciBDcmVkZW50aWFscyBhbmQgRW1haWwgcHJvdmlkZXJzIGJ5IGRlZmF1bHQgaW4gbmV4dCBtYWpvclxuICAgIGlmIChyZWRpcmVjdCB8fCAhaXNTdXBwb3J0aW5nUmV0dXJuKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGRhdGEudXJsID8/IGNhbGxiYWNrVXJsO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcbiAgICAgICAgLy8gSWYgdXJsIGNvbnRhaW5zIGEgaGFzaCwgdGhlIGJyb3dzZXIgZG9lcyBub3QgcmVsb2FkIHRoZSBwYWdlLiBXZSByZWxvYWQgbWFudWFsbHlcbiAgICAgICAgaWYgKHVybC5pbmNsdWRlcyhcIiNcIikpXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZXJyb3IgPSBuZXcgVVJMKGRhdGEudXJsKS5zZWFyY2hQYXJhbXMuZ2V0KFwiZXJyb3JcIik7XG4gICAgY29uc3QgY29kZSA9IG5ldyBVUkwoZGF0YS51cmwpLnNlYXJjaFBhcmFtcy5nZXQoXCJjb2RlXCIpO1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgYXdhaXQgX19ORVhUQVVUSC5fZ2V0U2Vzc2lvbih7IGV2ZW50OiBcInN0b3JhZ2VcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZXJyb3IsXG4gICAgICAgIGNvZGUsXG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1cyxcbiAgICAgICAgb2s6IHJlcy5vayxcbiAgICAgICAgdXJsOiBlcnJvciA/IG51bGwgOiBkYXRhLnVybCxcbiAgICB9O1xufVxuLyoqXG4gKiBJbml0aWF0ZSBhIHNpZ25vdXQsIGJ5IGRlc3Ryb3lpbmcgdGhlIGN1cnJlbnQgc2Vzc2lvbi5cbiAqIEhhbmRsZXMgQ1NSRiBwcm90ZWN0aW9uLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk91dChvcHRpb25zKSB7XG4gICAgY29uc3QgeyBjYWxsYmFja1VybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmIH0gPSBvcHRpb25zID8/IHt9O1xuICAgIGNvbnN0IGJhc2VVcmwgPSBhcGlCYXNlVXJsKF9fTkVYVEFVVEgpO1xuICAgIGNvbnN0IGNzcmZUb2tlbiA9IGF3YWl0IGdldENzcmZUb2tlbigpO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke2Jhc2VVcmx9L3NpZ25vdXRgLCB7XG4gICAgICAgIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIsXG4gICAgICAgICAgICBcIlgtQXV0aC1SZXR1cm4tUmVkaXJlY3RcIjogXCIxXCIsXG4gICAgICAgIH0sXG4gICAgICAgIGJvZHk6IG5ldyBVUkxTZWFyY2hQYXJhbXMoeyBjc3JmVG9rZW4sIGNhbGxiYWNrVXJsIH0pLFxuICAgIH0pO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICAgIGJyb2FkY2FzdCgpLnBvc3RNZXNzYWdlKHsgZXZlbnQ6IFwic2Vzc2lvblwiLCBkYXRhOiB7IHRyaWdnZXI6IFwic2lnbm91dFwiIH0gfSk7XG4gICAgaWYgKG9wdGlvbnM/LnJlZGlyZWN0ID8/IHRydWUpIHtcbiAgICAgICAgY29uc3QgdXJsID0gZGF0YS51cmwgPz8gY2FsbGJhY2tVcmw7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsO1xuICAgICAgICAvLyBJZiB1cmwgY29udGFpbnMgYSBoYXNoLCB0aGUgYnJvd3NlciBkb2VzIG5vdCByZWxvYWQgdGhlIHBhZ2UuIFdlIHJlbG9hZCBtYW51YWxseVxuICAgICAgICBpZiAodXJsLmluY2x1ZGVzKFwiI1wiKSlcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGF3YWl0IF9fTkVYVEFVVEguX2dldFNlc3Npb24oeyBldmVudDogXCJzdG9yYWdlXCIgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG59XG4vKipcbiAqIFtSZWFjdCBDb250ZXh0XShodHRwczovL3JlYWN0LmRldi9sZWFybi9wYXNzaW5nLWRhdGEtZGVlcGx5LXdpdGgtY29udGV4dCkgcHJvdmlkZXIgdG8gd3JhcCB0aGUgYXBwIChgcGFnZXMvYCkgdG8gbWFrZSBzZXNzaW9uIGRhdGEgYXZhaWxhYmxlIGFueXdoZXJlLlxuICpcbiAqIFdoZW4gdXNlZCwgdGhlIHNlc3Npb24gc3RhdGUgaXMgYXV0b21hdGljYWxseSBzeW5jaHJvbml6ZWQgYWNyb3NzIGFsbCBvcGVuIHRhYnMvd2luZG93cyBhbmQgdGhleSBhcmUgYWxsIHVwZGF0ZWQgd2hlbmV2ZXIgdGhleSBnYWluIG9yIGxvc2UgZm9jdXNcbiAqIG9yIHRoZSBzdGF0ZSBjaGFuZ2VzIChlLmcuIGEgdXNlciBzaWducyBpbiBvciBvdXQpIHdoZW4ge0BsaW5rIFNlc3Npb25Qcm92aWRlclByb3BzLnJlZmV0Y2hPbldpbmRvd0ZvY3VzfSBpcyBgdHJ1ZWAuXG4gKlxuICogOjo6aW5mb1xuICogYFNlc3Npb25Qcm92aWRlcmAgaXMgZm9yIGNsaWVudC1zaWRlIHVzZSBvbmx5IGFuZCB3aGVuIHVzaW5nIFtOZXh0LmpzIEFwcCBSb3V0ZXIgKGBhcHAvYCldKGh0dHBzOi8vbmV4dGpzLm9yZy9ibG9nL25leHQtMTMtNCNuZXh0anMtYXBwLXJvdXRlcikgeW91IHNob3VsZCBwcmVmZXIgdGhlIGBhdXRoKClgIGV4cG9ydC5cbiAqIDo6OlxuICovXG5leHBvcnQgZnVuY3Rpb24gU2Vzc2lvblByb3ZpZGVyKHByb3BzKSB7XG4gICAgaWYgKCFTZXNzaW9uQ29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWFjdCBDb250ZXh0IGlzIHVuYXZhaWxhYmxlIGluIFNlcnZlciBDb21wb25lbnRzXCIpO1xuICAgIH1cbiAgICBjb25zdCB7IGNoaWxkcmVuLCBiYXNlUGF0aCwgcmVmZXRjaEludGVydmFsLCByZWZldGNoV2hlbk9mZmxpbmUgfSA9IHByb3BzO1xuICAgIGlmIChiYXNlUGF0aClcbiAgICAgICAgX19ORVhUQVVUSC5iYXNlUGF0aCA9IGJhc2VQYXRoO1xuICAgIC8qKlxuICAgICAqIElmIHNlc3Npb24gd2FzIGBudWxsYCwgdGhlcmUgd2FzIGFuIGF0dGVtcHQgdG8gZmV0Y2ggaXQsXG4gICAgICogYnV0IGl0IGZhaWxlZCwgYnV0IHdlIHN0aWxsIHRyZWF0IGl0IGFzIGEgdmFsaWQgaW5pdGlhbCB2YWx1ZS5cbiAgICAgKi9cbiAgICBjb25zdCBoYXNJbml0aWFsU2Vzc2lvbiA9IHByb3BzLnNlc3Npb24gIT09IHVuZGVmaW5lZDtcbiAgICAvKiogSWYgc2Vzc2lvbiB3YXMgcGFzc2VkLCBpbml0aWFsaXplIGFzIGFscmVhZHkgc3luY2VkICovXG4gICAgX19ORVhUQVVUSC5fbGFzdFN5bmMgPSBoYXNJbml0aWFsU2Vzc2lvbiA/IG5vdygpIDogMDtcbiAgICBjb25zdCBbc2Vzc2lvbiwgc2V0U2Vzc2lvbl0gPSBSZWFjdC51c2VTdGF0ZSgoKSA9PiB7XG4gICAgICAgIGlmIChoYXNJbml0aWFsU2Vzc2lvbilcbiAgICAgICAgICAgIF9fTkVYVEFVVEguX3Nlc3Npb24gPSBwcm9wcy5zZXNzaW9uO1xuICAgICAgICByZXR1cm4gcHJvcHMuc2Vzc2lvbjtcbiAgICB9KTtcbiAgICAvKiogSWYgc2Vzc2lvbiB3YXMgcGFzc2VkLCBpbml0aWFsaXplIGFzIG5vdCBsb2FkaW5nICovXG4gICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gUmVhY3QudXNlU3RhdGUoIWhhc0luaXRpYWxTZXNzaW9uKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBfX05FWFRBVVRILl9nZXRTZXNzaW9uID0gYXN5bmMgKHsgZXZlbnQgfSA9IHt9KSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0b3JhZ2VFdmVudCA9IGV2ZW50ID09PSBcInN0b3JhZ2VcIjtcbiAgICAgICAgICAgICAgICAvLyBXZSBzaG91bGQgYWx3YXlzIHVwZGF0ZSBpZiB3ZSBkb24ndCBoYXZlIGEgY2xpZW50IHNlc3Npb24geWV0XG4gICAgICAgICAgICAgICAgLy8gb3IgaWYgdGhlcmUgYXJlIGV2ZW50cyBmcm9tIG90aGVyIHRhYnMvd2luZG93c1xuICAgICAgICAgICAgICAgIGlmIChzdG9yYWdlRXZlbnQgfHwgX19ORVhUQVVUSC5fc2Vzc2lvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIF9fTkVYVEFVVEguX2xhc3RTeW5jID0gbm93KCk7XG4gICAgICAgICAgICAgICAgICAgIF9fTkVYVEFVVEguX3Nlc3Npb24gPSBhd2FpdCBnZXRTZXNzaW9uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyb2FkY2FzdDogIXN0b3JhZ2VFdmVudCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNldFNlc3Npb24oX19ORVhUQVVUSC5fc2Vzc2lvbik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIC8vIElmIHRoZXJlIGlzIG5vIHRpbWUgZGVmaW5lZCBmb3Igd2hlbiBhIHNlc3Npb24gc2hvdWxkIGJlIGNvbnNpZGVyZWRcbiAgICAgICAgICAgICAgICAvLyBzdGFsZSwgdGhlbiBpdCdzIG9rYXkgdG8gdXNlIHRoZSB2YWx1ZSB3ZSBoYXZlIHVudGlsIGFuIGV2ZW50IGlzXG4gICAgICAgICAgICAgICAgLy8gdHJpZ2dlcmVkIHdoaWNoIHVwZGF0ZXMgaXRcbiAgICAgICAgICAgICAgICAhZXZlbnQgfHxcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIGNsaWVudCBkb2Vzbid0IGhhdmUgYSBzZXNzaW9uIHRoZW4gd2UgZG9uJ3QgbmVlZCB0byBjYWxsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZSBzZXJ2ZXIgdG8gY2hlY2sgaWYgaXQgZG9lcyAoaWYgdGhleSBoYXZlIHNpZ25lZCBpbiB2aWEgYW5vdGhlclxuICAgICAgICAgICAgICAgICAgICAvLyB0YWIgb3Igd2luZG93IHRoYXQgd2lsbCBjb21lIHRocm91Z2ggYXMgYSBcInN0cm9hZ2VcIiBldmVudFxuICAgICAgICAgICAgICAgICAgICAvLyBldmVudCBhbnl3YXkpXG4gICAgICAgICAgICAgICAgICAgIF9fTkVYVEFVVEguX3Nlc3Npb24gPT09IG51bGwgfHxcbiAgICAgICAgICAgICAgICAgICAgLy8gQmFpbCBvdXQgZWFybHkgaWYgdGhlIGNsaWVudCBzZXNzaW9uIGlzIG5vdCBzdGFsZSB5ZXRcbiAgICAgICAgICAgICAgICAgICAgbm93KCkgPCBfX05FWFRBVVRILl9sYXN0U3luYykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEFuIGV2ZW50IG9yIHNlc3Npb24gc3RhbGVuZXNzIG9jY3VycmVkLCB1cGRhdGUgdGhlIGNsaWVudCBzZXNzaW9uLlxuICAgICAgICAgICAgICAgIF9fTkVYVEFVVEguX2xhc3RTeW5jID0gbm93KCk7XG4gICAgICAgICAgICAgICAgX19ORVhUQVVUSC5fc2Vzc2lvbiA9IGF3YWl0IGdldFNlc3Npb24oKTtcbiAgICAgICAgICAgICAgICBzZXRTZXNzaW9uKF9fTkVYVEFVVEguX3Nlc3Npb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKG5ldyBDbGllbnRTZXNzaW9uRXJyb3IoZXJyb3IubWVzc2FnZSwgZXJyb3IpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBfX05FWFRBVVRILl9nZXRTZXNzaW9uKCk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBfX05FWFRBVVRILl9sYXN0U3luYyA9IDA7XG4gICAgICAgICAgICBfX05FWFRBVVRILl9zZXNzaW9uID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgX19ORVhUQVVUSC5fZ2V0U2Vzc2lvbiA9ICgpID0+IHsgfTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgaGFuZGxlID0gKCkgPT4gX19ORVhUQVVUSC5fZ2V0U2Vzc2lvbih7IGV2ZW50OiBcInN0b3JhZ2VcIiB9KTtcbiAgICAgICAgLy8gTGlzdGVuIGZvciBzdG9yYWdlIGV2ZW50cyBhbmQgdXBkYXRlIHNlc3Npb24gaWYgZXZlbnQgZmlyZWQgZnJvbVxuICAgICAgICAvLyBhbm90aGVyIHdpbmRvdyAoYnV0IHN1cHByZXNzIGZpcmluZyBhbm90aGVyIGV2ZW50IHRvIGF2b2lkIGEgbG9vcClcbiAgICAgICAgLy8gRmV0Y2ggbmV3IHNlc3Npb24gZGF0YSBidXQgdGVsbCBpdCB0byBub3QgdG8gZmlyZSBhbm90aGVyIGV2ZW50IHRvXG4gICAgICAgIC8vIGF2b2lkIGFuIGluZmluaXRlIGxvb3AuXG4gICAgICAgIC8vIE5vdGU6IFdlIGNvdWxkIHBhc3Mgc2Vzc2lvbiBkYXRhIHRocm91Z2ggYW5kIGRvIHNvbWV0aGluZyBsaWtlXG4gICAgICAgIC8vIGBzZXREYXRhKG1lc3NhZ2UuZGF0YSlgIGJ1dCB0aGF0IGNhbiBjYXVzZSBwcm9ibGVtcyBkZXBlbmRpbmdcbiAgICAgICAgLy8gb24gaG93IHRoZSBzZXNzaW9uIG9iamVjdCBpcyBiZWluZyB1c2VkIGluIHRoZSBjbGllbnQ7IGl0IGlzXG4gICAgICAgIC8vIG1vcmUgcm9idXN0IHRvIGhhdmUgZWFjaCB3aW5kb3cvdGFiIGZldGNoIGl0J3Mgb3duIGNvcHkgb2YgdGhlXG4gICAgICAgIC8vIHNlc3Npb24gb2JqZWN0IHJhdGhlciB0aGFuIHNoYXJlIGl0IGFjcm9zcyBpbnN0YW5jZXMuXG4gICAgICAgIGJyb2FkY2FzdCgpLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGhhbmRsZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiBicm9hZGNhc3QoKS5yZW1vdmVFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBoYW5kbGUpO1xuICAgIH0sIFtdKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB7IHJlZmV0Y2hPbldpbmRvd0ZvY3VzID0gdHJ1ZSB9ID0gcHJvcHM7XG4gICAgICAgIC8vIExpc3RlbiBmb3Igd2hlbiB0aGUgcGFnZSBpcyB2aXNpYmxlLCBpZiB0aGUgdXNlciBzd2l0Y2hlcyB0YWJzXG4gICAgICAgIC8vIGFuZCBtYWtlcyBvdXIgdGFiIHZpc2libGUgYWdhaW4sIHJlLWZldGNoIHRoZSBzZXNzaW9uLCBidXQgb25seSBpZlxuICAgICAgICAvLyB0aGlzIGZlYXR1cmUgaXMgbm90IGRpc2FibGVkLlxuICAgICAgICBjb25zdCB2aXNpYmlsaXR5SGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmIChyZWZldGNoT25XaW5kb3dGb2N1cyAmJiBkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09IFwidmlzaWJsZVwiKVxuICAgICAgICAgICAgICAgIF9fTkVYVEFVVEguX2dldFNlc3Npb24oeyBldmVudDogXCJ2aXNpYmlsaXR5Y2hhbmdlXCIgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIHZpc2liaWxpdHlIYW5kbGVyLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLCB2aXNpYmlsaXR5SGFuZGxlciwgZmFsc2UpO1xuICAgIH0sIFtwcm9wcy5yZWZldGNoT25XaW5kb3dGb2N1c10pO1xuICAgIGNvbnN0IGlzT25saW5lID0gdXNlT25saW5lKCk7XG4gICAgLy8gVE9ETzogRmxpcCB0aGlzIGJlaGF2aW9yIGluIG5leHQgbWFqb3IgdmVyc2lvblxuICAgIGNvbnN0IHNob3VsZFJlZmV0Y2ggPSByZWZldGNoV2hlbk9mZmxpbmUgIT09IGZhbHNlIHx8IGlzT25saW5lO1xuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChyZWZldGNoSW50ZXJ2YWwgJiYgc2hvdWxkUmVmZXRjaCkge1xuICAgICAgICAgICAgY29uc3QgcmVmZXRjaEludGVydmFsVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKF9fTkVYVEFVVEguX3Nlc3Npb24pIHtcbiAgICAgICAgICAgICAgICAgICAgX19ORVhUQVVUSC5fZ2V0U2Vzc2lvbih7IGV2ZW50OiBcInBvbGxcIiB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCByZWZldGNoSW50ZXJ2YWwgKiAxMDAwKTtcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKHJlZmV0Y2hJbnRlcnZhbFRpbWVyKTtcbiAgICAgICAgfVxuICAgIH0sIFtyZWZldGNoSW50ZXJ2YWwsIHNob3VsZFJlZmV0Y2hdKTtcbiAgICBjb25zdCB2YWx1ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcbiAgICAgICAgZGF0YTogc2Vzc2lvbixcbiAgICAgICAgc3RhdHVzOiBsb2FkaW5nXG4gICAgICAgICAgICA/IFwibG9hZGluZ1wiXG4gICAgICAgICAgICA6IHNlc3Npb25cbiAgICAgICAgICAgICAgICA/IFwiYXV0aGVudGljYXRlZFwiXG4gICAgICAgICAgICAgICAgOiBcInVuYXV0aGVudGljYXRlZFwiLFxuICAgICAgICBhc3luYyB1cGRhdGUoZGF0YSkge1xuICAgICAgICAgICAgaWYgKGxvYWRpbmcgfHwgIXNlc3Npb24pXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1Nlc3Npb24gPSBhd2FpdCBmZXRjaERhdGEoXCJzZXNzaW9uXCIsIF9fTkVYVEFVVEgsIGxvZ2dlciwgdHlwZW9mIGRhdGEgPT09IFwidW5kZWZpbmVkXCJcbiAgICAgICAgICAgICAgICA/IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIDogeyBib2R5OiB7IGNzcmZUb2tlbjogYXdhaXQgZ2V0Q3NyZlRva2VuKCksIGRhdGEgfSB9KTtcbiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgaWYgKG5ld1Nlc3Npb24pIHtcbiAgICAgICAgICAgICAgICBzZXRTZXNzaW9uKG5ld1Nlc3Npb24pO1xuICAgICAgICAgICAgICAgIGJyb2FkY2FzdCgpLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQ6IFwic2Vzc2lvblwiLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IHRyaWdnZXI6IFwiZ2V0U2Vzc2lvblwiIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3U2Vzc2lvbjtcbiAgICAgICAgfSxcbiAgICB9KSwgW3Nlc3Npb24sIGxvYWRpbmddKTtcbiAgICByZXR1cm4gKFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICBfanN4KFNlc3Npb25Db250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiB2YWx1ZSwgY2hpbGRyZW46IGNoaWxkcmVuIH0pKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-auth/react.js\n");

/***/ })

};
;